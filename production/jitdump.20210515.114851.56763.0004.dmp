<?xml version="1.0" standalone="no"?>
<jitDump>
#INFO: Crashed in application thread 000000000001AA00.
#INFO: Found 1 JITed methods on Java stack.
<logRecompilation>
<compile
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt"
	isProfilingCompile=0>
</compile>


=======>java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
<ilgen
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;">
   <request> {JitDumpMethod(<NULL>)} </request>

        +------------- Byte Code Index
        |  +-------------------- OpCode
        |  |                        +------------- First Field
        |  |                        |     +------------- Branch Target
        |  |                        |     |      +------- Const Pool Index
        |  |                        |     |      |    +------------- Constant
        |  |                        |     |      |    |
        V  V                        V     V      V    V

        0, JBaload0getfield      
        1, JBgetfield                           69
        4, JBifne                  38,   42,            
        7, JBinvokestatic          32
       10, JBastore3            
       11, JBaload0             
       12, JBaload3             
       13, JBaload0getfield      
       14, JBgetfield                           15
       17, JBaload0getfield      
       18, JBgetfield                           20
       21, JBinvokestatic          70
       24, JBifeq                   7,   31,            
       27, JBaconstnull         
       28, JBgoto                   7,   35,            
       31, JBaload1             
       32, JBinvokespecial         71
       35, JBaload0getfield      
       36, JBgetfield                           20
       39, JBinvokevirtual         72
       42, JBaload0getfield      
       43, JBgetfield                           30
       46, JBastore3            
       47, JBaload3             
       48, JBifnonnull              8,   56,            
       51, JBaload0             
       52, JBinvokespecial         73
       55, JBastore3            
       56, JBaload3             
       57, JBaload1             
       58, JBaload2             
       59, JBinvokeinterface2      
       60, JBnop                
       61, JBinvokeinterface         74
       64, JBreturn1            

         got fieldsig as Ljava/lang/Class;
IlGenerator: Generating compressedRefs anchor [00007FFB72004E60] for node [00007FFB72004D70]
         got fieldsig as Ljdk/internal/reflect/MethodAccessor;
IlGenerator: Generating compressedRefs anchor [00007FFB72080050] for node [00007FFB72005590]
genIL() returned 1
<trees
	title="Pre IlGenOpt Trees"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Pre IlGenOpt Trees: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2>                                                                   [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=0 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=0 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ]  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=0 vn=- li=- udi=- nc=1
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n17n      ificmpne --> block_7 BBStart at n1n ()                                              [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=0 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0                                                                          [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=0 vn=- li=- udi=- nc=0

n15n      BBStart <block_3>                                                                   [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=0 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=0 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=0 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=0 vn=- li=- udi=- nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=0 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=0 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=0 vn=- li=- udi=- nc=1
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=0 vn=- li=- udi=- nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=0 vn=- li=- udi=- nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=0 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0                                                                          [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=0
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ]  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=0 vn=- li=- udi=- nc=1
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=0 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpeq --> block_5 BBStart at n3n ()                                              [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=0 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0                                                                          [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n16n      BBEnd </block_3> =====                                                              [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=0 vn=- li=- udi=- nc=0

n40n      BBStart <block_4>                                                                   [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=0 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n60n        aconst NULL                                                                       [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=0 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=0 vn=- li=- udi=- nc=0

n3n       BBStart <block_5>                                                                   [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=0 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                           [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=0 vn=- li=- udi=- nc=1
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]             [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=0 vn=- li=- udi=- nc=1
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=0 vn=- li=- udi=- nc=0

n5n       BBStart <block_6>                                                                   [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=0 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ]  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=0 vn=- li=- udi=- nc=1
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n90n      NULLCHK on n61n [#32]                                                               [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=0 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=0 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n62n          aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n87n          ==>irdbari
n91n      goto --> block_7 BBStart at n1n                                                     [0x7ffb72080c30] bci=[-1,42,562] rc=0 vc=0 vn=- li=- udi=- nc=0
n6n       BBEnd </block_6> =====                                                              [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=0 vn=- li=- udi=- nc=0

n1n       BBStart <block_7>                                                                   [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=0 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=0 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=3 vc=0 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=0 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0                                                                          [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=0
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=0 vn=- li=- udi=- nc=1
n50n        ==>ardbari
n59n      ifacmpne --> block_9 BBStart at n7n ()                                              [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=0 vn=- li=- udi=- nc=2 flg=0x20
n55n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720800f0] bci=[-1,47,563] rc=1 vc=0 vn=- li=- udi=- nc=0
n56n        aconst NULL                                                                       [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=0 vn=- li=- udi=- nc=0
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=0 vn=- li=- udi=- nc=0

n57n      BBStart <block_8>                                                                   [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=0 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=0 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=0 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=0 vn=- li=- udi=- nc=1
n76n        ==>acall
n58n      BBEnd </block_8> =====                                                              [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=0 vn=- li=- udi=- nc=0

n7n       BBStart <block_9>                                                                   [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=0 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=0 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=0 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=0 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                       [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=0 vn=- li=- udi=- nc=0
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=0 vn=- li=- udi=- nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=0 vn=- li=- udi=- nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=0 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=0 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=0 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=0 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=0 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=0 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n97n          iconst -1                                                                       [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n99n          iconst 360                                                                      [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n100n         iconst -1                                                                       [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n102n         iconst 361                                                                      [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n103n         iconst -1                                                                       [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n105n         iconst 363                                                                      [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n106n         iconst -1                                                                       [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n108n         iconst 367                                                                      [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n109n         iconst -1                                                                       [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n111n         iconst 353                                                                      [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n112n         iconst -1                                                                       [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n114n         iconst 354                                                                      [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n115n         iconst -1                                                                       [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n117n         iconst 355                                                                      [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n118n         iconst -1                                                                       [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n120n         iconst 358                                                                      [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n121n         iconst -1                                                                       [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=0 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=0 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Symbol References (incremental):
--------------------------------
#32:   jitThrowNullPointerException[ helper Method] [flags 0x400 0x0 ] [0x7ffb720507e0] (NoType)
#55:   prepareForOSR[ helper Method] [flags 0x400 0x0 ] [0x7ffb720a06f0] (NoType)
#73:   jitCheckIfFinalizeObject[ helper Method] [flags 0x400 0x0 ] [0x7ffb72072e40] (NoType)
#278:  <javaLangClassFromClass>[ Shadow +48] [flags 0x607 0x0 ] [0x7ffb72071bb0] (Address)
#288:  <vft-symbol>[ Shadow] [flags 0x18607 0x0 ] [0x7ffb72071b40] (Address)
#293:  <resolve check>[ helper Method] [flags 0x400 0x0 ] [0x7ffb720507e0] (NoType)
#318:  osrReturnAddress[ MethodMeta +2416] [flags 0x10207 0x0 ] [0x7ffb720a0960] (Address)
#353:  this<'this' parm Ljava/lang/reflect/Method;>[ Parm] [flags 0x40000107 0x0 ] [0x7ffb720057f0] (Address)
#354:  obj<parm 1 Ljava/lang/Object;>[ Parm] [flags 0x40000107 0x0 ] [0x7ffb720059f0] (Address)
#355:  args<parm 2 [Ljava/lang/Object;>[ Parm] [flags 0x40000107 0x0 ] [0x7ffb72005ac0] (Address)
#356:  java/lang/reflect/Method.override Z[ unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] [0x7ffb720506e0] (Int8) [volatile]
#357:  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[ native static Method] [flags 0x500 0x0 ] [0x7ffb720700f0] (NoType)
#358:  caller<auto slot 3>[ Auto] [flags 0x7 0x0 ] [0x7ffb72070310] (Address)
#359:  java/lang/reflect/Method.clazz Ljava/lang/Class;[ unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ] [0x7ffb72070400] (Address) [volatile]
#360:  <pending push temp 0>[ Auto] [flags 0x7 0x800 ] [0x7ffb720705c0] (Address)
#361:  <pending push temp 1>[ Auto] [flags 0x7 0x800 ] [0x7ffb720706b0] (Address)
#362:  java/lang/reflect/Method.modifiers I[ Shadow +80] [flags 0x80603 0x0 ] [0x7ffb720707c0] (Int32)
#363:  <pending push temp 2>[ Auto] [flags 0x7 0x800 ] [0x7ffb72070860] (Address)
#364:  mod<parm 0 I>[ Parm] [flags 0x103 0x0 ] [0x7ffb72070bd0] (Int32)
#365:  java/lang/reflect/Modifier.isStatic(I)Z[ static Method] [flags 0x500 0x0 ] [0x7ffb72070a40] (NoType)
#366:  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[ unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ] [0x7ffb72071060] (Address) [volatile]
#367:  <pending push temp 3>[ Auto] [flags 0x7 0x800 ] [0x7ffb72071460] (Address)
#368:  <'this' parm Ljava/lang/Object;>[ Parm] [flags 0x107 0x0 ] [0x7ffb72071910] (Address)
#369:  java/lang/Object.getClass()Ljava/lang/Class;[ final native special Method] [flags 0x20500 0x0 ] [0x7ffb72071780] (NoType)
#370:  this<'this' parm Ljava/lang/reflect/Method;>[ Parm] [flags 0x107 0x0 ] [0x7ffb72071ea0] (Address)
#371:  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[ final special Method] [flags 0x20500 0x0 ] [0x7ffb72071d10] (NoType)
#372:  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[ unresolved interface Method] (Interface class) [flags 0x400 0x0 ] [0x7ffb72072160] (NoType)
#373:  this<'this' parm Ljava/lang/reflect/AccessibleObject;>[ Parm] [flags 0x107 0x0 ] [0x7ffb720726c0] (Address)
#374:  caller<parm 1 Ljava/lang/Class;>[ Parm] [flags 0x107 0x0 ] [0x7ffb72072900] (Address)
#375:  memberClass<parm 2 Ljava/lang/Class;>[ Parm] [flags 0x107 0x0 ] [0x7ffb720729d0] (Address)
#376:  targetClass<parm 3 Ljava/lang/Class;>[ Parm] [flags 0x107 0x0 ] [0x7ffb72072aa0] (Address)
#377:  modifiers<parm 4 I>[ Parm] [flags 0x103 0x0 ] [0x7ffb72072b70] (Int32)
#378:  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[ final virtual Method -184] [flags 0x20500 0x0 ] [0x7ffb72072530] (NoType)
#379:  vmThread[ MethodMeta] [flags 0x200 0x0 ] [0x7ffb720a0670] (NoType)

Number of nodes = 113, symRefCount = 380
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0
                 in        = [0(0) ]
                 out       = [3(0) 7(0) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0
                 in        = [2(0) ]
                 out       = [4(0) 5(0) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270
                 in        = [3(0) ]
                 out       = [6(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0
                 in        = [3(0) ]
                 out       = [6(0) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780
                 in        = [5(0) 4(0) ]
                 out       = [7(0) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640
                 in        = [6(0) 2(0) ]
                 out       = [8(0) 9(0) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190
                 in        = [7(0) ]
                 out       = [9(0) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820
                 in        = [8(0) 7(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<optimize
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">
<optimization id=1 name=osrLiveRangeAnalysis method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 1: osrLiveRangeAnalysis
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=2 name=osrDefAnalysis method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 2: osrDefAnalysis
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=3 name=varHandleTransformer method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 3: varHandleTransformer mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=4 name=handleRecompilationOps method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 4: handleRecompilationOps mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=5 name=unsafeFastPath method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 5: unsafeFastPath
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=6 name=recognizedCallTransformer method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 6: recognizedCallTransformer
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=7 name=coldBlockMarker method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 7: coldBlockMarker
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=8 name=CFGSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 8: CFGSimplification
            (Building alias info)
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=10 name=invariantArgumentPreexistence method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 10: invariantArgumentPreexistence
         No transformations done by this pass -- omitting listings
</optimization>

</optimize>
</ilgen>
<trees
	title="Initial Trees"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Initial Trees: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=0 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=0 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ]  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=0 vn=- li=- udi=- nc=1
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n17n      ificmpne --> block_7 BBStart at n1n ()                                              [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=0 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0                                                                          [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=0 vn=- li=- udi=- nc=0
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=0 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=0 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=0 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=0 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=0 vn=- li=- udi=- nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=0 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=0 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=0 vn=- li=- udi=- nc=1
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=0 vn=- li=- udi=- nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=0 vn=- li=- udi=- nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=0 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0                                                                          [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=0
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ]  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=0 vn=- li=- udi=- nc=1
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=0 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpeq --> block_5 BBStart at n3n ()                                              [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=0 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0                                                                          [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n16n      BBEnd </block_3> =====                                                              [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=0 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=0 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n60n        aconst NULL                                                                       [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=0 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=0 vn=- li=- udi=- nc=0

n3n       BBStart <block_5> (freq 766)                                                        [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=0 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                           [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=0 vn=- li=- udi=- nc=1
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]             [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=0 vn=- li=- udi=- nc=1
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=0 vn=- li=- udi=- nc=0

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=0 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ]  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=0 vn=- li=- udi=- nc=1
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n90n      NULLCHK on n61n [#32]                                                               [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=0 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=0 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n62n          aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=0 vn=- li=- udi=- nc=0
n87n          ==>irdbari
n91n      goto --> block_7 BBStart at n1n                                                     [0x7ffb72080c30] bci=[-1,42,562] rc=0 vc=0 vn=- li=- udi=- nc=0
n6n       BBEnd </block_6> =====                                                              [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=0 vn=- li=- udi=- nc=0

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=0 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=0 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=3 vc=0 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=0 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0                                                                          [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=0
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=0 vn=- li=- udi=- nc=1
n50n        ==>ardbari
n59n      ifacmpne --> block_9 BBStart at n7n ()                                              [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=0 vn=- li=- udi=- nc=2 flg=0x20
n55n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720800f0] bci=[-1,47,563] rc=1 vc=0 vn=- li=- udi=- nc=0
n56n        aconst NULL                                                                       [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=0 vn=- li=- udi=- nc=0
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=0 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=0 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=0 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=0 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=0 vn=- li=- udi=- nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=0 vn=- li=- udi=- nc=1
n76n        ==>acall
n58n      BBEnd </block_8> =====                                                              [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=0 vn=- li=- udi=- nc=0

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=0 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=0 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=0 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=0 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                       [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=0 vn=- li=- udi=- nc=0
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=0 vn=- li=- udi=- nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=0 vn=- li=- udi=- nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=0 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=0 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=14 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=0 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=14 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=14 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n97n          iconst -1                                                                       [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n99n          iconst 360                                                                      [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n100n         iconst -1                                                                       [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n102n         iconst 361                                                                      [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n103n         iconst -1                                                                       [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n105n         iconst 363                                                                      [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n106n         iconst -1                                                                       [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n108n         iconst 367                                                                      [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n109n         iconst -1                                                                       [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n111n         iconst 353                                                                      [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n112n         iconst -1                                                                       [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n114n         iconst 354                                                                      [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n115n         iconst -1                                                                       [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n117n         iconst 355                                                                      [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n118n         iconst -1                                                                       [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n120n         iconst 358                                                                      [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n121n         iconst -1                                                                       [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=14 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=14 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=0 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 113, symRefCount = 380
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [3(761) 7(9238) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [7(781) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [6(781) 2(9238) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [9(175) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [8(175) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>

This method is no-opt
<optimize
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">
<optimization id=11 name=coldBlockOutlining method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 11: coldBlockOutlining
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=12 name=trivialInlining method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 12: trivialInlining
         got fieldsig as Ljdk/internal/reflect/MethodAccessorImpl;
IlGenerator: Generating compressedRefs anchor [00007FFB72081900] for node [00007FFB72081810]
genIL() returned 1
            (Building alias info)
q^q : failing to inline  into  (callNode 00007FFB72081A40 on line_no=43) due to wcode size
<trees
	title="Post Inlining Trees"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Post Inlining Trees: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=26 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=26 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ]  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=26 vn=- li=- udi=- nc=1
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n17n      ificmpne --> block_7 BBStart at n1n ()                                              [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=26 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0                                                                          [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=26 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=26 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=26 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=27 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=26 vn=- li=- udi=- nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=26 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=26 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=26 vn=- li=- udi=- nc=1
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=26 vn=- li=- udi=- nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=26 vn=- li=- udi=- nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=26 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0                                                                          [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=26 vn=- li=- udi=- nc=0
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ]  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=26 vn=- li=- udi=- nc=1
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=27 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpeq --> block_5 BBStart at n3n ()                                              [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=26 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0                                                                          [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n16n      BBEnd </block_3> =====                                                              [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=26 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=26 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n60n        aconst NULL                                                                       [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=26 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=26 vn=- li=- udi=- nc=0

n3n       BBStart <block_5> (freq 766)                                                        [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=26 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                           [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=26 vn=- li=- udi=- nc=1
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]             [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=26 vn=- li=- udi=- nc=1
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=26 vn=- li=- udi=- nc=0

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=26 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ]  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=26 vn=- li=- udi=- nc=1
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n90n      NULLCHK on n61n [#32]                                                               [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=26 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=27 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n62n          aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n87n          ==>irdbari
n91n      goto --> block_7 BBStart at n1n                                                     [0x7ffb72080c30] bci=[-1,42,562] rc=0 vc=26 vn=- li=- udi=- nc=0
n6n       BBEnd </block_6> =====                                                              [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=26 vn=- li=- udi=- nc=0

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=26 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=26 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=3 vc=26 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=26 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0                                                                          [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=26 vn=- li=- udi=- nc=0
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=26 vn=- li=- udi=- nc=1
n50n        ==>ardbari
n59n      ifacmpne --> block_9 BBStart at n7n ()                                              [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=26 vn=- li=- udi=- nc=2 flg=0x20
n55n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720800f0] bci=[-1,47,563] rc=1 vc=26 vn=- li=- udi=- nc=0
n56n        aconst NULL                                                                       [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=26 vn=- li=- udi=- nc=0
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=26 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=26 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=26 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=27 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=26 vn=- li=- udi=- nc=1
n76n        ==>acall
n58n      BBEnd </block_8> =====                                                              [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=26 vn=- li=- udi=- nc=0

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=26 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=26 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=27 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=26 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                       [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=26 vn=- li=- udi=- nc=0
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=26 vn=- li=- udi=- nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=26 vn=- li=- udi=- nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=26 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=26 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=26 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=26 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=26 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=26 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=27 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n97n          iconst -1                                                                       [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n99n          iconst 360                                                                      [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n100n         iconst -1                                                                       [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n102n         iconst 361                                                                      [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n103n         iconst -1                                                                       [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n105n         iconst 363                                                                      [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n106n         iconst -1                                                                       [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n108n         iconst 367                                                                      [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n109n         iconst -1                                                                       [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n111n         iconst 353                                                                      [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n112n         iconst -1                                                                       [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n114n         iconst 354                                                                      [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n115n         iconst -1                                                                       [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n117n         iconst 355                                                                      [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n118n         iconst -1                                                                       [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n120n         iconst 358                                                                      [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n121n         iconst -1                                                                       [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=26 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=26 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Symbol References (incremental):
--------------------------------
#380:  this<'this' parm Ljdk/internal/reflect/DelegatingMethodAccessorImpl;>[ Parm] [flags 0x40000107 0x0 ] [0x7ffb720a8b10] (Address)
#381:  obj<parm 1 Ljava/lang/Object;>[ Parm] [flags 0x40000107 0x0 ] [0x7ffb720a8d20] (Address)
#382:  args<parm 2 [Ljava/lang/Object;>[ Parm] [flags 0x40000107 0x0 ] [0x7ffb720a8df0] (Address)
#383:  jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[ virtual Method] [flags 0x500 0x0 ] [0x7ffb720a8980] (NoType)
#384:  jdk/internal/reflect/DelegatingMethodAccessorImpl.delegate Ljdk/internal/reflect/MethodAccessorImpl;[ unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ] [0x7ffb720ab790] (Address) [volatile]
#385:  <'this' parm Ljdk/internal/reflect/MethodAccessorImpl;>[ Parm] [flags 0x107 0x0 ] [0x7ffb720abc30] (Address)
#386:  <parm 1 Ljava/lang/Object;>[ Parm] [flags 0x107 0x0 ] [0x7ffb720abe30] (Address)
#387:  <parm 2 [Ljava/lang/Object;>[ Parm] [flags 0x107 0x0 ] [0x7ffb720abf00] (Address)
#388:  jdk/internal/reflect/MethodAccessorImpl.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[ virtual Method -64] (Abstract class) [flags 0x500 0x0 ] [0x7ffb720abaa0] (NoType)
#389:  vmThread[ MethodMeta] [flags 0x200 0x0 ] [0x7ffb720ac990] (NoType)
#390:  <'this' parm Ljdk/internal/reflect/GeneratedMethodAccessor2;>[ Parm] [flags 0x107 0x0 ] [0x7ffb720ad9e0] (Address)
#391:  <parm 1 Ljava/lang/Object;>[ Parm] [flags 0x107 0x0 ] [0x7ffb720adbe0] (Address)
#392:  <parm 2 [Ljava/lang/Object;>[ Parm] [flags 0x107 0x0 ] [0x7ffb720adcb0] (Address)
#393:  jdk/internal/reflect/GeneratedMethodAccessor2.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[ virtual Method] [flags 0x500 0x0 ] [0x7ffb720ad850] (NoType)

Number of nodes = 113, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [3(761) 7(9238) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [7(781) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [6(781) 2(9238) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [9(175) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [8(175) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<trees
	title="Trees after trivialInlining"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after trivialInlining: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=26 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=26 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ]  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=26 vn=- li=- udi=- nc=1
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n17n      ificmpne --> block_7 BBStart at n1n ()                                              [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=26 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0                                                                          [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=26 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=26 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=26 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=27 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=26 vn=- li=- udi=- nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=26 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=26 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=26 vn=- li=- udi=- nc=1
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=26 vn=- li=- udi=- nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=26 vn=- li=- udi=- nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=26 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0                                                                          [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=26 vn=- li=- udi=- nc=0
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ]  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=26 vn=- li=- udi=- nc=1
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=27 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpeq --> block_5 BBStart at n3n ()                                              [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=26 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0                                                                          [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n16n      BBEnd </block_3> =====                                                              [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=26 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=26 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n60n        aconst NULL                                                                       [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=26 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=26 vn=- li=- udi=- nc=0

n3n       BBStart <block_5> (freq 766)                                                        [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=26 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                           [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=26 vn=- li=- udi=- nc=1
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]             [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=26 vn=- li=- udi=- nc=1
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=26 vn=- li=- udi=- nc=0

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=26 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=26 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ]  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=26 vn=- li=- udi=- nc=1
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n90n      NULLCHK on n61n [#32]                                                               [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=26 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=27 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n62n          aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=26 vn=- li=- udi=- nc=0
n87n          ==>irdbari
n91n      goto --> block_7 BBStart at n1n                                                     [0x7ffb72080c30] bci=[-1,42,562] rc=0 vc=26 vn=- li=- udi=- nc=0
n6n       BBEnd </block_6> =====                                                              [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=26 vn=- li=- udi=- nc=0

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=26 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=26 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=3 vc=26 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=26 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0                                                                          [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=26 vn=- li=- udi=- nc=0
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=26 vn=- li=- udi=- nc=1
n50n        ==>ardbari
n59n      ifacmpne --> block_9 BBStart at n7n ()                                              [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=26 vn=- li=- udi=- nc=2 flg=0x20
n55n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720800f0] bci=[-1,47,563] rc=1 vc=26 vn=- li=- udi=- nc=0
n56n        aconst NULL                                                                       [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=26 vn=- li=- udi=- nc=0
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=26 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=26 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=26 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=27 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=26 vn=- li=- udi=- nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=26 vn=- li=- udi=- nc=1
n76n        ==>acall
n58n      BBEnd </block_8> =====                                                              [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=26 vn=- li=- udi=- nc=0

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=26 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=26 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=27 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=26 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                       [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=26 vn=- li=- udi=- nc=0
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=26 vn=- li=- udi=- nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=26 vn=- li=- udi=- nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=26 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=26 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=26 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=26 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=26 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=26 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=27 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n97n          iconst -1                                                                       [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n99n          iconst 360                                                                      [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n100n         iconst -1                                                                       [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n102n         iconst 361                                                                      [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n103n         iconst -1                                                                       [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n105n         iconst 363                                                                      [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n106n         iconst -1                                                                       [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n108n         iconst 367                                                                      [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n109n         iconst -1                                                                       [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n111n         iconst 353                                                                      [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n112n         iconst -1                                                                       [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n114n         iconst 354                                                                      [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n115n         iconst -1                                                                       [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n117n         iconst 355                                                                      [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n118n         iconst -1                                                                       [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n120n         iconst 358                                                                      [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n121n         iconst -1                                                                       [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=26 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=26 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=26 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 113, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [3(761) 7(9238) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [7(781) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [6(781) 2(9238) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [9(175) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [8(175) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=14 name=virtualGuardTailSplitter method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 14: virtualGuardTailSplitter
            (Building alias info)
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=15 name=treeSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 15: treeSimplification
[     1] O^O TREE SIMPLIFICATION: Removing goto [00007FFB72080C30] to following block
[     2] O^O TREE SIMPLIFICATION: Removing redundant node [00007FFB72080C30] goto
<trees
	title="Trees after treeSimplification"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after treeSimplification: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=41 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=41 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ]  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=41 vn=- li=- udi=- nc=1
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=41 vn=- li=- udi=- nc=0 flg=0x104
n17n      ificmpne --> block_7 BBStart at n1n ()                                              [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=41 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0                                                                          [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=41 vn=- li=- udi=- nc=0
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=41 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=41 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=41 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=41 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=41 vn=- li=- udi=- nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=41 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=41 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=41 vn=- li=- udi=- nc=0 flg=0x104
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=41 vn=- li=- udi=- nc=1
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=41 vn=- li=- udi=- nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=41 vn=- li=- udi=- nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=41 vn=- li=- udi=- nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=41 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero )                                                          [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=41 vn=- li=- udi=- nc=0 flg=0x4000
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=41 vn=- li=- udi=- nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=41 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ]  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=41 vn=- li=- udi=- nc=1
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=41 vn=- li=- udi=- nc=0 flg=0x104
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=41 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=41 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpeq --> block_5 BBStart at n3n ()                                              [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=41 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0                                                                          [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=41 vn=- li=- udi=- nc=0
n16n      BBEnd </block_3> =====                                                              [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=41 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=41 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=41 vn=- li=- udi=- nc=1
n60n        aconst NULL                                                                       [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=41 vn=- li=- udi=- nc=0
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=41 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=41 vn=- li=- udi=- nc=0

n3n       BBStart <block_5> (freq 766)                                                        [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=41 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=41 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X>=0 sharedMemory )      [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=41 vn=- li=- udi=- nc=1 flg=0x100
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=41 vn=- li=- udi=- nc=0 flg=0x100
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=41 vn=- li=- udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]             [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=41 vn=- li=- udi=- nc=1
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=41 vn=- li=- udi=- nc=0

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=41 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=41 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ]  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=41 vn=- li=- udi=- nc=1
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=41 vn=- li=- udi=- nc=0 flg=0x104
n90n      NULLCHK on n61n [#32]                                                               [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=41 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=41 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=41 vn=- li=- udi=- nc=0
n62n          aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=41 vn=- li=- udi=- nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=41 vn=- li=- udi=- nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=41 vn=- li=- udi=- nc=0
n87n          ==>irdbari
n6n       BBEnd </block_6> =====                                                              [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=41 vn=- li=- udi=- nc=0

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=41 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=41 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=3 vc=41 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=41 vn=- li=- udi=- nc=0 flg=0x104
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=41 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero )                                                          [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=41 vn=- li=- udi=- nc=0 flg=0x4000
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=41 vn=- li=- udi=- nc=1
n50n        ==>ardbari
n59n      ifacmpne --> block_9 BBStart at n7n ()                                              [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=41 vn=- li=- udi=- nc=2 flg=0x20
n55n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720800f0] bci=[-1,47,563] rc=1 vc=41 vn=- li=- udi=- nc=0
n56n        aconst NULL                                                                       [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=41 vn=- li=- udi=- nc=0
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=41 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=41 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=41 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=41 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=41 vn=- li=- udi=- nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=41 vn=- li=- udi=- nc=1
n76n        ==>acall
n58n      BBEnd </block_8> =====                                                              [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=41 vn=- li=- udi=- nc=0

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=41 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=41 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=41 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=41 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=41 vn=- li=- udi=- nc=0 flg=0x100
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=41 vn=- li=- udi=- nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=41 vn=- li=- udi=- nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=41 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=41 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=40 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=40 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=40 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=40 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n97n          iconst -1                                                                       [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n99n          iconst 360                                                                      [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n100n         iconst -1                                                                       [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n102n         iconst 361                                                                      [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n103n         iconst -1                                                                       [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n105n         iconst 363                                                                      [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n106n         iconst -1                                                                       [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n108n         iconst 367                                                                      [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n109n         iconst -1                                                                       [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n111n         iconst 353                                                                      [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n112n         iconst -1                                                                       [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n114n         iconst 354                                                                      [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n115n         iconst -1                                                                       [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n117n         iconst 355                                                                      [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n118n         iconst -1                                                                       [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n120n         iconst 358                                                                      [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n121n         iconst -1                                                                       [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=40 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=40 vn=- li=1 udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=40 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 112, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [3(761) 7(9238) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [7(781) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [6(781) 2(9238) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [9(175) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [8(175) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=16 name=CFGSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 16: CFGSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=17 name=treeSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 17: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=18 name=localCSE method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 18: localCSE
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=20 name=globalValuePropagation method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 20: globalValuePropagation
            (Doing structural analysis)
            (Building use/def info)
         PREPARTITION VN   (Building value number info)
[     3] O^O VALUE PROPAGATION: Removing redundant null check node [00007FFB72080BE0]
              (Invalidating value number info)
              (Invalidating use/def info)
<trees
	title="Trees after globalValuePropagation"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after globalValuePropagation: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=57 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=57 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=57 vn=- li=- udi=- nc=1 flg=0x1000
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=9 nc=0 flg=0x104
n17n      ificmpne --> block_7 BBStart at n1n ()                                              [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=57 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x302
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=54 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=57 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=57 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=57 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=57 vn=- li=2 udi=1 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=57 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=57 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=57 vn=- li=- udi=10 nc=0 flg=0x104
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=57 vn=- li=- udi=2 nc=1 flg=0x4
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=57 vn=- li=- udi=11 nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=57 vn=- li=- udi=3 nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=57 vn=- li=7 udi=12 nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=57 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=57 vn=- li=- udi=4 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=57 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=57 vn=- li=- udi=- nc=1 flg=0x1000
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=57 vn=- li=- udi=13 nc=0 flg=0x104
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=57 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=57 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpeq --> block_5 BBStart at n3n ()                                              [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=57 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x302
n16n      BBEnd </block_3> =====                                                              [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=54 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=57 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=57 vn=- li=3 udi=5 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x2
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=57 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=54 vn=- li=- udi=- nc=0

n3n       BBStart <block_5> (freq 766)                                                        [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=57 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=57 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=57 vn=- li=- udi=- nc=1 flg=0x104
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=57 vn=- li=- udi=14 nc=0 flg=0x100
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=57 vn=- li=4 udi=6 nc=1 flg=0x4
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=57 vn=- li=- udi=- nc=1 flg=0x4
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=54 vn=- li=- udi=- nc=0

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=57 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=57 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=57 vn=- li=- udi=- nc=1 flg=0x1000
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=57 vn=- li=- udi=15 nc=0 flg=0x104
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=57 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=57 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )  [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=57 vn=- li=- udi=16 nc=0 flg=0x4
n62n          aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=57 vn=- li=- udi=17 nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=57 vn=- li=- udi=18 nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=57 vn=- li=8 udi=19 nc=0
n87n          ==>irdbari
n6n       BBEnd </block_6> =====                                                              [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=54 vn=- li=- udi=- nc=0

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=57 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=57 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=3 vc=57 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=57 vn=- li=- udi=20 nc=0 flg=0x104
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=57 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=57 vn=- li=5 udi=7 nc=1
n50n        ==>ardbari
n59n      ifacmpne --> block_9 BBStart at n7n ()                                              [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=57 vn=- li=- udi=- nc=2 flg=0x20
n55n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720800f0] bci=[-1,47,563] rc=1 vc=57 vn=- li=9 udi=21 nc=0
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x2
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=54 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=57 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=57 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=57 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=57 vn=- li=- udi=22 nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=57 vn=- li=6 udi=8 nc=1
n76n        ==>acall
n58n      BBEnd </block_8> =====                                                              [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=54 vn=- li=- udi=- nc=0

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=57 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=57 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=57 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=57 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=57 vn=- li=10 udi=23 nc=0 flg=0x100
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=57 vn=- li=- udi=24 nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=57 vn=- li=- udi=25 nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=57 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=54 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=57 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=54 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=57 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=57 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=26 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=27 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=28 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=29 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x204
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=30 nc=0
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x204
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=31 nc=0
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x204
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=32 nc=0
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=33 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=57 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=57 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=54 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 112, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [3(761) 7(9238) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [7(781) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [6(781) 2(9238) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [9(175) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [8(175) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 7(0x7ffb72020800) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 7(0x7ffb72020800)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 9(0x7ffb72020e30)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 11(0x7ffb720e0120)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

      <optgroup name=cheapObjectAllocationGroup>
<optimization id=24 name=localDeadStoreElimination method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 24: localDeadStoreElimination
         No transformations done by this pass -- omitting listings
</optimization>

      </optgroup>
<optimization id=27 name=catchBlockRemoval method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 27: catchBlockRemoval
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=30 name=CFGSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 30: CFGSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=31 name=globalCopyPropagation method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 31: globalCopyPropagation
            (Building use/def info)
[     4] O^O COPY PROPAGATION:    Copy2 Propagation replacing Copy symRef #360 
         O^O COPY PROPAGATION:    Use #16[00007FFB720802D0] is defined by:
         O^O COPY PROPAGATION:       Def #2[00007FFB72004EB0]
         O^O COPY PROPAGATION:    By Original expression in 00007FFB72004C80 Use node : 00007FFB720802D0
[     5] O^O COPY PROPAGATION:    Copy2 Propagation replacing Copy symRef #361 
         O^O COPY PROPAGATION:    Use #17[00007FFB72080320] is defined by:
         O^O COPY PROPAGATION:       Def #3[00007FFB72004F50]
         O^O COPY PROPAGATION:    By Original expression in 00007FFB72004CD0 Use node : 00007FFB72080320
              (Invalidating alias info)
              (Invalidating use/def info)
<trees
	title="Trees after globalCopyPropagation"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after globalCopyPropagation: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=116 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=116 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=116 vn=- li=- udi=- nc=1 flg=0x1000
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=9 nc=0 flg=0x104
n17n      ificmpne --> block_7 BBStart at n1n ()                                              [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=116 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x302
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=116 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=116 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=116 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=116 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=116 vn=- li=5 udi=1 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=116 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=123 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=123 vn=- li=- udi=10 nc=0 flg=0x104
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=116 vn=- li=6 udi=2 nc=1 flg=0x4
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=119 vn=- li=- udi=11 nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=119 vn=- li=7 udi=3 nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=123 vn=- li=- udi=12 nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=123 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=123 vn=- li=8 udi=4 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=116 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=123 vn=- li=- udi=- nc=1 flg=0x1000
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=123 vn=- li=- udi=13 nc=0 flg=0x104
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=116 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=123 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpeq --> block_5 BBStart at n3n ()                                              [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=123 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x302
n16n      BBEnd </block_3> =====                                                              [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=123 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=116 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=123 vn=- li=9 udi=5 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x2
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=123 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=123 vn=- li=- udi=- nc=0

n3n       BBStart <block_5> (freq 766)                                                        [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=116 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=123 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=123 vn=- li=- udi=- nc=1 flg=0x104
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=123 vn=- li=- udi=14 nc=0 flg=0x100
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=123 vn=- li=10 udi=6 nc=1 flg=0x4
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=123 vn=- li=- udi=- nc=1 flg=0x4
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=123 vn=- li=- udi=- nc=0

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=116 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=116 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=122 vn=- li=- udi=- nc=1 flg=0x1000
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=122 vn=- li=- udi=15 nc=0 flg=0x104
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=116 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=116 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=120 vn=- li=- udi=16 nc=0 flg=0x4
n62n          aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=124 vn=- li=- udi=17 nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=116 vn=- li=- udi=18 nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=116 vn=- li=- udi=19 nc=0
n87n          ==>irdbari
n6n       BBEnd </block_6> =====                                                              [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=116 vn=- li=- udi=- nc=0

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=116 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=116 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=3 vc=116 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=116 vn=- li=- udi=20 nc=0 flg=0x104
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=116 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=116 vn=- li=11 udi=7 nc=1
n50n        ==>ardbari
n59n      ifacmpne --> block_9 BBStart at n7n ()                                              [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=116 vn=- li=- udi=- nc=2 flg=0x20
n55n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720800f0] bci=[-1,47,563] rc=1 vc=116 vn=- li=- udi=21 nc=0
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x2
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=116 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=116 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=116 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=116 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=116 vn=- li=- udi=22 nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=116 vn=- li=12 udi=8 nc=1
n76n        ==>acall
n58n      BBEnd </block_8> =====                                                              [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=116 vn=- li=- udi=- nc=0

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=116 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=116 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=116 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=116 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=116 vn=- li=- udi=23 nc=0 flg=0x100
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=116 vn=- li=- udi=24 nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=116 vn=- li=- udi=25 nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=116 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=116 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=116 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=116 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=116 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=116 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=26 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=27 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=28 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=29 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x204
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=30 nc=0
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x204
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=31 nc=0
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x204
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=32 nc=0
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=33 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=116 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=116 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=116 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 112, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [3(761) 7(9238) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [7(781) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [6(781) 2(9238) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [9(175) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [8(175) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 7(0x7ffb72020800) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 7(0x7ffb72020800)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 9(0x7ffb72020e30)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 11(0x7ffb720e0120)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=34 name=deadTreesElimination method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 34: deadTreesElimination
            (Building alias info)
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=36 name=treeSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 36: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=37 name=loopReduction method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 37: loopReduction
         idiom recognition is enabled, skipping loopReducer
<trees
	title="Trees after loopReduction"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after loopReduction: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=132 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=132 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=132 vn=- li=- udi=- nc=1 flg=0x1000
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=132 vn=- li=- udi=9 nc=0 flg=0x104
n17n      ificmpne --> block_7 BBStart at n1n ()                                              [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=132 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=132 vn=- li=- udi=- nc=0 flg=0x302
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=132 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=132 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=132 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=132 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=132 vn=- li=- udi=1 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=132 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=132 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=132 vn=- li=- udi=10 nc=0 flg=0x104
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=132 vn=- li=- udi=2 nc=1 flg=0x4
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=132 vn=- li=- udi=11 nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=132 vn=- li=- udi=3 nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=132 vn=- li=- udi=12 nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=132 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=132 vn=- li=- udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=132 vn=- li=- udi=4 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=132 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=132 vn=- li=- udi=- nc=1 flg=0x1000
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=132 vn=- li=- udi=13 nc=0 flg=0x104
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=132 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=132 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpeq --> block_5 BBStart at n3n ()                                              [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=132 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=132 vn=- li=- udi=- nc=0 flg=0x302
n16n      BBEnd </block_3> =====                                                              [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=132 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=132 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=132 vn=- li=- udi=5 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=132 vn=- li=- udi=- nc=0 flg=0x2
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=132 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=132 vn=- li=- udi=- nc=0

n3n       BBStart <block_5> (freq 766)                                                        [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=132 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=132 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=132 vn=- li=- udi=- nc=1 flg=0x104
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=132 vn=- li=- udi=14 nc=0 flg=0x100
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=132 vn=- li=- udi=6 nc=1 flg=0x4
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=132 vn=- li=- udi=- nc=1 flg=0x4
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=132 vn=- li=- udi=- nc=0

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=132 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=132 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=132 vn=- li=- udi=- nc=1 flg=0x1000
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=132 vn=- li=- udi=15 nc=0 flg=0x104
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=132 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=132 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=132 vn=- li=- udi=16 nc=0 flg=0x4
n62n          aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=132 vn=- li=- udi=17 nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=132 vn=- li=- udi=18 nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=132 vn=- li=- udi=19 nc=0
n87n          ==>irdbari
n6n       BBEnd </block_6> =====                                                              [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=132 vn=- li=- udi=- nc=0

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=132 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=132 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=3 vc=132 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=132 vn=- li=- udi=20 nc=0 flg=0x104
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=132 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=132 vn=- li=- udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=132 vn=- li=- udi=7 nc=1
n50n        ==>ardbari
n59n      ifacmpne --> block_9 BBStart at n7n ()                                              [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=132 vn=- li=- udi=- nc=2 flg=0x20
n55n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720800f0] bci=[-1,47,563] rc=1 vc=132 vn=- li=- udi=21 nc=0
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=132 vn=- li=- udi=- nc=0 flg=0x2
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=132 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=132 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=132 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=132 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=132 vn=- li=- udi=22 nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=132 vn=- li=- udi=8 nc=1
n76n        ==>acall
n58n      BBEnd </block_8> =====                                                              [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=132 vn=- li=- udi=- nc=0

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=132 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=132 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=132 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=132 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=132 vn=- li=- udi=23 nc=0 flg=0x100
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=132 vn=- li=- udi=24 nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=132 vn=- li=- udi=25 nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=132 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=132 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=131 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=131 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=131 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=131 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=26 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=27 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=28 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=29 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x204
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=30 nc=0
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x204
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=31 nc=0
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x204
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=32 nc=0
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=33 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=131 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=131 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=131 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 112, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [3(761) 7(9238) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [7(781) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [6(781) 2(9238) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [9(175) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [8(175) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 7(0x7ffb72020800) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 7(0x7ffb72020800)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 9(0x7ffb72020e30)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 11(0x7ffb720e0120)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=40 name=blockSplitter method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 40: blockSplitter
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=41 name=treeSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 41: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=45 name=basicBlockExtension method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 45: basicBlockExtension
[     6] O^O ORDER BLOCKS:  Propagating coldness information
[     7] O^O ORDER BLOCKS:  choose best successor for block_0 (freq:6)
[     8] O^O ORDER BLOCKS:  choose best successor for block_2 (freq:10000)
[     9] O^O ORDER BLOCKS:  choose best successor for block_7 (freq:9726)
[    10] O^O ORDER BLOCKS:  choose best successor for block_9 (freq:9726)
[    11] O^O ORDER BLOCKS:  choose best successor for block_1 (freq:6)
[    12] O^O ORDER BLOCKS:  choose best successor for block_3 (freq:785)
[    13] O^O ORDER BLOCKS:  choose best successor for block_5 (freq:766)
[    14] O^O ORDER BLOCKS:  choose best successor for block_6 (freq:785)
[    15] O^O ORDER BLOCKS:  choose best successor for block_8 (freq:180)
[    16] O^O ORDER BLOCKS:  choose best successor for block_4 (freq:24)
[    17] O^O ORDER BLOCKS:  choose best successor for block_10 (freq:0)
[    18] O^O ORDER BLOCKS:  choose best successor for block_11 (freq:0)
[    19] O^O ORDER BLOCKS:  block_5 is extension of previous block
[    20] O^O ORDER BLOCKS:  block_12 is extension of previous block
[    21] O^O ORDER BLOCKS:  block_13 is extension of previous block
<trees
	title="Trees after basicBlockExtension"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after basicBlockExtension: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=135 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=135 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=135 vn=- li=- udi=- nc=1 flg=0x1000
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=135 vn=- li=- udi=9 nc=0 flg=0x104
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=135 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=135 vn=- li=- udi=- nc=0 flg=0x302
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=135 vn=- li=- udi=- nc=0

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=135 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=135 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=3 vc=135 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=135 vn=- li=- udi=20 nc=0 flg=0x104
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=135 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=135 vn=- li=- udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=135 vn=- li=- udi=7 nc=1
n50n        ==>ardbari
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=135 vn=- li=- udi=- nc=2 flg=0x20
n55n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720800f0] bci=[-1,47,563] rc=1 vc=135 vn=- li=- udi=21 nc=0
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=135 vn=- li=- udi=- nc=0 flg=0x2
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=135 vn=- li=- udi=- nc=0

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=135 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=135 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=135 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=135 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=135 vn=- li=- udi=23 nc=0 flg=0x100
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=135 vn=- li=- udi=24 nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=135 vn=- li=- udi=25 nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=135 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=135 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=135 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=135 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=135 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=135 vn=- li=- udi=1 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=135 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=135 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=135 vn=- li=- udi=10 nc=0 flg=0x104
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=135 vn=- li=- udi=2 nc=1 flg=0x4
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=135 vn=- li=- udi=11 nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=135 vn=- li=- udi=3 nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=135 vn=- li=- udi=12 nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=135 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=135 vn=- li=- udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=135 vn=- li=- udi=4 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=135 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=135 vn=- li=- udi=- nc=1 flg=0x1000
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=135 vn=- li=- udi=13 nc=0 flg=0x104
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=135 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=135 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=135 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=135 vn=- li=- udi=- nc=0 flg=0x302
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=135 vn=- li=- udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=135 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=135 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=135 vn=- li=- udi=- nc=1 flg=0x104
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=135 vn=- li=- udi=14 nc=0 flg=0x100
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=135 vn=- li=- udi=6 nc=1 flg=0x4
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=135 vn=- li=- udi=- nc=1 flg=0x4
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=135 vn=- li=- udi=- nc=0

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=135 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=135 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=135 vn=- li=- udi=- nc=1 flg=0x1000
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=135 vn=- li=- udi=15 nc=0 flg=0x104
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=135 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=135 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=135 vn=- li=- udi=16 nc=0 flg=0x4
n62n          aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=135 vn=- li=- udi=17 nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=135 vn=- li=- udi=18 nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=135 vn=- li=- udi=19 nc=0
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=135 vn=- li=- udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=0 vn=- li=- udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=0 vn=- li=- udi=- nc=0
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=0 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=135 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=135 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=135 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=135 vn=- li=- udi=22 nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=135 vn=- li=- udi=8 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=135 vn=- li=- udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=0 vn=- li=- udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=0 vn=- li=- udi=- nc=0
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=0 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=135 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=135 vn=- li=- udi=5 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=135 vn=- li=- udi=- nc=0 flg=0x2
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=135 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=135 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=134 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=134 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=134 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=134 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=26 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=27 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=28 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=29 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x204
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=30 nc=0
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x204
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=31 nc=0
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x204
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=32 nc=0
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=33 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=134 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=134 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=134 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 118, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [3(761) 7(9238) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [12(785) 2(9238) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 7(0x7ffb72020800) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 11(0x7ffb720e0120)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=46 name=treeSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 46: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

      <optgroup name=localValuePropagationGroup>
<optimization id=47 name=localCSE method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 47: localCSE
[    22] O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Local Common Subexpression Elimination propagating local #358 in node : 00007FFB720800F0 PARENT : 00007FFB72080230 from node 00007FFB720800A0
         O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Rhs of store def node : 00007FFB72005590
<trees
	title="Trees after localCSE"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after localCSE: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=143 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=146 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=146 vn=- li=- udi=- nc=1 flg=0x1000
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=146 vn=- li=- udi=9 nc=0 flg=0x104
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=146 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=146 vn=- li=- udi=- nc=0 flg=0x302
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=146 vn=- li=- udi=- nc=0

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=143 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=148 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=4 vc=148 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=148 vn=- li=- udi=20 nc=0 flg=0x104
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=148 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=148 vn=- li=- udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=148 vn=- li=- udi=7 nc=1
n50n        ==>ardbari
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=148 vn=- li=- udi=- nc=2 flg=0x20
n50n        ==>ardbari
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=148 vn=- li=- udi=- nc=0 flg=0x2
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=148 vn=- li=- udi=- nc=0

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=143 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=150 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=150 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=150 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=150 vn=- li=- udi=23 nc=0 flg=0x100
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=150 vn=- li=- udi=24 nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=150 vn=- li=- udi=25 nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=150 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=150 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=143 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=143 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=143 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=143 vn=- li=- udi=1 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=143 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=143 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=143 vn=- li=- udi=10 nc=0 flg=0x104
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=143 vn=- li=- udi=2 nc=1 flg=0x4
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=143 vn=- li=- udi=11 nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=143 vn=- li=- udi=3 nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=143 vn=- li=- udi=12 nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=143 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=143 vn=- li=- udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=143 vn=- li=- udi=4 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=143 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=143 vn=- li=- udi=- nc=1 flg=0x1000
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=143 vn=- li=- udi=13 nc=0 flg=0x104
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=143 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=143 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=143 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=143 vn=- li=- udi=- nc=0 flg=0x302
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=143 vn=- li=- udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=143 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=143 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=143 vn=- li=- udi=- nc=1 flg=0x104
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=143 vn=- li=- udi=14 nc=0 flg=0x100
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=143 vn=- li=- udi=6 nc=1 flg=0x4
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=143 vn=- li=- udi=- nc=1 flg=0x4
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=143 vn=- li=- udi=- nc=0

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=143 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=143 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=143 vn=- li=- udi=- nc=1 flg=0x1000
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=143 vn=- li=- udi=15 nc=0 flg=0x104
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=143 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=143 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=143 vn=- li=- udi=16 nc=0 flg=0x4
n62n          aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=143 vn=- li=- udi=17 nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=143 vn=- li=- udi=18 nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=143 vn=- li=- udi=19 nc=0
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=143 vn=- li=- udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=143 vn=- li=- udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=143 vn=- li=- udi=- nc=0
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=143 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=143 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=143 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=143 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=143 vn=- li=- udi=22 nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=143 vn=- li=- udi=8 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=143 vn=- li=- udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=143 vn=- li=- udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=143 vn=- li=- udi=- nc=0
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=143 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=143 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=143 vn=- li=- udi=5 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=143 vn=- li=- udi=- nc=0 flg=0x2
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=143 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=143 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=142 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=142 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=142 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=142 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=26 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=27 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=28 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=29 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x204
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=30 nc=0
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x204
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=31 nc=0
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x204
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=32 nc=0
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=33 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=142 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=142 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=142 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 117, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [3(761) 7(9238) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [12(785) 2(9238) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 7(0x7ffb72020800) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 11(0x7ffb720e0120)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=48 name=localValuePropagation method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 48: localValuePropagation
         No transformations done by this pass -- omitting listings
</optimization>

      </optgroup>
<optimization id=51 name=arraycopyTransformation method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 51: arraycopyTransformation
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=52 name=treeSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 52: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=53 name=localDeadStoreElimination method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 53: localDeadStoreElimination
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=54 name=deadTreesElimination method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 54: deadTreesElimination
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=56 name=localCSE method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 56: localCSE
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=57 name=treeSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 57: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=58 name=andSimplification method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 58: andSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=59 name=compactNullChecks method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 59: compactNullChecks
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=65 name=dynamicLiteralPool method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 65: dynamicLiteralPool
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=71 name=globalDeadStoreElimination method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 71: globalDeadStoreElimination
            (Building use/def info)
<trees
	title="Trees after globalDeadStoreElimination"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after globalDeadStoreElimination: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=242 vn=- li=- udi=- nc=0
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=242 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=242 vn=- li=- udi=- nc=1 flg=0x1000
n11n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004960] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=9 nc=0 flg=0x104
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=242 vn=- li=- udi=- nc=2 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x302
n10n      BBEnd </block_2> =====                                                              [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=242 vn=- li=- udi=- nc=0

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=242 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=242 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=4 vc=242 vn=- li=- udi=- nc=1
n49n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72005540] bci=[-1,42,562] rc=1 vc=242 vn=- li=- udi=10 nc=0 flg=0x104
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=242 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=242 vn=- li=5 udi=1 nc=1
n50n        ==>ardbari
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=242 vn=- li=- udi=- nc=2 flg=0x20
n50n        ==>ardbari
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x2
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=242 vn=- li=- udi=- nc=0

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=242 vn=- li=- udi=- nc=0
n84n      ResolveAndNULLCHK on n79n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=242 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=242 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=242 vn=- li=- udi=- nc=1
n79n            aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080870] bci=[-1,56,566] rc=2 vc=242 vn=- li=- udi=11 nc=0 flg=0x100
n79n          ==>aload
n80n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720808c0] bci=[-1,57,566] rc=1 vc=242 vn=- li=- udi=12 nc=0
n81n          aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72080910] bci=[-1,58,566] rc=1 vc=242 vn=- li=- udi=13 nc=0
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=242 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=242 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=242 vn=- li=- udi=- nc=0
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=242 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=2 vc=242 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=242 vn=- li=6 udi=2 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=242 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=3 vc=242 vn=- li=- udi=- nc=1
n23n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004d20] bci=[-1,13,558] rc=1 vc=242 vn=- li=- udi=14 nc=0 flg=0x104
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=242 vn=- li=7 udi=3 nc=1 flg=0x4
n21n        aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72004c80] bci=[-1,11,558] rc=1 vc=242 vn=- li=- udi=15 nc=0 flg=0x4
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=242 vn=- li=8 udi=4 nc=1
n22n        aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72004cd0] bci=[-1,12,558] rc=1 vc=242 vn=- li=- udi=16 nc=0
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=242 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=242 vn=- li=9 udi=5 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=242 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=242 vn=- li=- udi=- nc=1 flg=0x1000
n32n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72004ff0] bci=[-1,17,559] rc=1 vc=242 vn=- li=- udi=17 nc=0 flg=0x104
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=242 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=242 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=242 vn=- li=- udi=- nc=2 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x302
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=242 vn=- li=- udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=242 vn=- li=- udi=- nc=0
n70n      NULLCHK on n68n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=242 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=242 vn=- li=- udi=- nc=1 flg=0x104
n68n          aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 sharedMemory )  [0x7ffb72080500] bci=[-1,31,559] rc=1 vc=242 vn=- li=- udi=18 nc=0 flg=0x100
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=242 vn=- li=10 udi=6 nc=1 flg=0x4
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=1 vc=242 vn=- li=- udi=- nc=1 flg=0x4
n69n          ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=242 vn=- li=- udi=- nc=0

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=242 vn=- li=- udi=- nc=0
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=242 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=242 vn=- li=- udi=- nc=1 flg=0x1000
n86n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080aa0] bci=[-1,35,559] rc=1 vc=242 vn=- li=- udi=19 nc=0 flg=0x104
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=242 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=242 vn=- li=- udi=- nc=5 flg=0x20
n61n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb720802d0] bci=[-1,28,559] rc=1 vc=242 vn=- li=- udi=20 nc=0 flg=0x4
n62n          aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb72080320] bci=[-1,28,559] rc=1 vc=242 vn=- li=- udi=21 nc=0
n63n          aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080370] bci=[-1,28,559] rc=1 vc=242 vn=- li=- udi=22 nc=0
n66n          aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080460] bci=[-1,28,559] rc=1 vc=242 vn=- li=- udi=23 nc=0
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=242 vn=- li=- udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=242 vn=- li=- udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=242 vn=- li=- udi=- nc=0
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=242 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=242 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=242 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=2 vc=242 vn=- li=- udi=- nc=1
n75n          aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080730] bci=[-1,51,564] rc=1 vc=242 vn=- li=- udi=24 nc=0 flg=0x4
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=242 vn=- li=11 udi=7 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=242 vn=- li=- udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=242 vn=- li=- udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=242 vn=- li=- udi=- nc=0
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=242 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=242 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=242 vn=- li=12 udi=8 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x2
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=242 vn=- li=- udi=- nc=0
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=242 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=242 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold) =====                                                      [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=242 vn=- li=- udi=- nc=0

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=242 vn=- li=- udi=- nc=0
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=242 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=25 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=26 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=27 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=28 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x204
n110n         aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72081220] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=29 nc=0
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x204
n113n         aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]       [0x7ffb72081310] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=30 nc=0
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x204
n116n         aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]     [0x7ffb72081400] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=31 nc=0
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=32 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=242 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=242 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=242 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 117, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [3(761) 7(9238) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [12(785) 2(9238) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [11(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [10(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 7(0x7ffb72020800) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 11(0x7ffb720e0120)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

      <optgroup name=cheapTacticalGlobalRegisterAllocatorGroup>
<optimization id=73 name=tacticalGlobalRegisterAllocator method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 73: tacticalGlobalRegisterAllocator
              (Invalidating use/def info)
         Weight of candidate (symRef #367 ) is 80000
         Weight of candidate (symRef #363 ) is 3333
         Weight of candidate (symRef #361 ) is 0
         Weight of candidate (symRef #360 ) is 0
         Weight of candidate (symRef #358 ) is 937
         Weight of candidate (symRef #355 ) is 165
         Weight of candidate (symRef #354 ) is 330
         Weight of candidate (symRef #353 ) is 740
[    23] O^O GLOBAL REGISTER ASSIGNER:  assign auto #367  to reg 0 (edi)
[    24] O^O GLOBAL REGISTER ASSIGNER:  assign auto #363  to reg 1 (r8d)
[    25] O^O GLOBAL REGISTER ASSIGNER:  assign auto #358  to reg 6 (ebx)
[    26] O^O GLOBAL REGISTER ASSIGNER:  assign auto #353  to reg 5 (eax)
[    27] O^O GLOBAL REGISTER ASSIGNER:  assign auto #354  to reg 4 (esi)
[    28] O^O GLOBAL REGISTER ASSIGNER:  assign auto #355  to reg 3 (edx)
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72082350] on BBStart [00007FFB720048C0]
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB720823A0]  from Register 3
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB720823F0]  from Register 4
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082440]  from Register 5
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72004960] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72004960] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72082490] on exit node [00007FFB72004B40]
         O^O GLOBAL REGISTER ASSIGNER:  create store [00007FFB720825D0] of  symRef#358 to Register 6
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72082670] on exit node [00007FFB72082530]
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB720826C0] on BBStart [00007FFB72004640]
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082710]  from Register 3
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082760]  from Register 4
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB720827B0]  from Register 5
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082800]  from Register 6
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72005540] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72005540] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change store var [00007FFB720800A0]  #358 to store reg
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB720828F0] on exit node [00007FFB72080230]
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72082990] on exit node [00007FFB72004690]
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB720829E0] on BBStart [00007FFB72004820]
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082A30]  from Register 3
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082A80]  from Register 4
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082AD0]  from Register 6
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080870] of  symRef#358 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080870] of  symRef#358 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080870] of  symRef#358 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB720808C0] of  symRef#354 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB720808C0] of  symRef#354 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080910] of  symRef#355 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080910] of  symRef#355 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72082B20] on BBStart [00007FFB72004AA0]
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082B70]  from Register 3
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082BC0]  from Register 4
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082C10]  from Register 5
         O^O GLOBAL REGISTER ASSIGNER:  change store var [00007FFB72004C30]  #358 to store reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72004D20] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72004D20] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72004C80] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72004C80] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72004CD0] of  symRef#358 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72004CD0] of  symRef#358 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change store var [00007FFB720050E0]  #363 to store reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72004FF0] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72004FF0] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72082DA0] on exit node [00007FFB720054F0]
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080500] of  symRef#354 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080500] of  symRef#354 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change store var [00007FFB72080690]  #367 to store reg
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72082F30] on exit node [00007FFB72004730]
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72082F80] on BBStart [00007FFB72004780]
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72082FD0]  from Register 0
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083020]  from Register 1
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083070]  from Register 3
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB720830C0]  from Register 4
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083110]  from Register 5
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083160]  from Register 6
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080AA0] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080AA0] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB720802D0] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB720802D0] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080320] of  symRef#358 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080320] of  symRef#358 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080370] of  symRef#363 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080370] of  symRef#363 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080460] of  symRef#367 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080460] of  symRef#367 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB720831B0] on exit node [00007FFB72082210]
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72083200] on BBStart [00007FFB72080190]
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083250]  from Register 3
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB720832A0]  from Register 4
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB720832F0]  from Register 5
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083340]  from Register 6
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080730] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72080730] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change store var [00007FFB72080820]  #358 to store reg
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72083430] on exit node [00007FFB72082300]
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72083480] on BBStart [00007FFB72005270]
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB720834D0]  from Register 1
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083520]  from Register 3
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083570]  from Register 4
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB720835C0]  from Register 5
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083610]  from Register 6
         O^O GLOBAL REGISTER ASSIGNER:  change store var [00007FFB720803C0]  #367 to store reg
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72083700] on exit node [00007FFB720804B0]
         O^O GLOBAL REGISTER ASSIGNER:  create store [00007FFB72083840] of  symRef#355 to Register 3
         O^O GLOBAL REGISTER ASSIGNER:  create store [00007FFB72083930] of  symRef#354 to Register 4
         O^O GLOBAL REGISTER ASSIGNER:  create store [00007FFB72083A20] of  symRef#353 to Register 5
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72083AC0] on exit node [00007FFB720837A0]
         O^O GLOBAL REGISTER ASSIGNER:  create TR::GlRegDeps [00007FFB72083B10] on BBStart [00007FFB72080C80]
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083B60]  from Register 3
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083BB0]  from Register 4
         O^O GLOBAL REGISTER ASSIGNER:  create load [00007FFB72083C00]  from Register 5
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72081220] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72081220] of  symRef#353 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72081310] of  symRef#354 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72081310] of  symRef#354 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72081400] of  symRef#355 to load reg
         O^O GLOBAL REGISTER ASSIGNER:  change load var [00007FFB72081400] of  symRef#355 to load reg
<trees
	title="Trees after tacticalGlobalRegisterAllocator"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after tacticalGlobalRegisterAllocator: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n165n       GlRegDeps ()                                                                      [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n166n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720823a0] bci=[-1,0,556] rc=3 vc=0 vn=- li=- udi=- nc=0
n167n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720823f0] bci=[-1,0,556] rc=3 vc=0 vn=- li=- udi=- nc=0
n168n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=4 vc=0 vn=- li=- udi=- nc=0 flg=0x8104
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=528 vn=- li=- udi=- nc=1 flg=0x1000
n168n         ==>aRegLoad
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=528 vn=- li=- udi=- nc=3 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x302
n169n       GlRegDeps ()                                                                      [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n10n      BBEnd </block_2>                                                                    [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=528 vn=- li=- udi=- nc=0
n170n     BBStart <block_14> (freq 9238) (extension of previous block)                        [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=528 vn=- li=- udi=- nc=0
n173n     aRegStore ebx                                                                       [0x7ffb720825d0] bci=[-1,4,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n172n       aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72082580] bci=[-1,4,556] rc=2 vc=528 vn=- li=- udi=- nc=0
n171n     BBEnd </block_14> =====                                                             [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n175n       GlRegDeps ()                                                                      [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=0 vn=- li=- udi=- nc=4 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n174n         PassThrough rbx                                                                 [0x7ffb72082620] bci=[-1,4,556] rc=1 vc=0 vn=- li=- udi=- nc=1
n172n           ==>aload

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=528 vn=- li=- udi=- nc=1
n176n       GlRegDeps ()                                                                      [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=0 vn=- li=- udi=- nc=4 flg=0x20
n177n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082710] bci=[-1,42,562] rc=3 vc=0 vn=- li=- udi=- nc=0
n178n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082760] bci=[-1,42,562] rc=3 vc=0 vn=- li=- udi=- nc=0
n179n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=3 vc=0 vn=- li=- udi=- nc=0 flg=0x8104
n180n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72082800] bci=[-1,42,562] rc=1 vc=0 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=528 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=7 vc=528 vn=- li=- udi=- nc=1
n179n         ==>aRegLoad
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=528 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x4302
n181n     aRegStore ebx                                                                       [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=0 vn=- li=- udi=- nc=1
n50n        ==>ardbari
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=528 vn=- li=- udi=1 nc=1
n50n        ==>ardbari
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=528 vn=- li=- udi=- nc=3 flg=0x20
n50n        ==>ardbari
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x2
n183n       GlRegDeps ()                                                                      [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=0 vn=- li=- udi=- nc=4 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n179n         ==>aRegLoad
n182n         PassThrough rbx                                                                 [0x7ffb720828a0] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=1
n50n            ==>ardbari
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=528 vn=- li=- udi=- nc=1
n185n       GlRegDeps ()                                                                      [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n184n         PassThrough rbx                                                                 [0x7ffb72082940] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=1
n50n            ==>ardbari

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=528 vn=- li=- udi=- nc=1
n186n       GlRegDeps ()                                                                      [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n187n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=2 vc=0 vn=- li=- udi=- nc=0 flg=0x8000
n188n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=2 vc=0 vn=- li=- udi=- nc=0 flg=0x8000
n189n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=3 vc=0 vn=- li=- udi=- nc=0 flg=0x8100
n84n      ResolveAndNULLCHK on n189n [#32]                                                    [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=528 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=528 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=528 vn=- li=- udi=- nc=1
n189n           ==>aRegLoad
n189n         ==>aRegLoad
n188n         ==>aRegLoad
n187n         ==>aRegLoad
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=528 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=528 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=528 vn=- li=- udi=- nc=1
n190n       GlRegDeps ()                                                                      [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n191n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082b70] bci=[-1,7,557] rc=3 vc=0 vn=- li=- udi=- nc=0
n192n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=4 vc=0 vn=- li=- udi=- nc=0 flg=0x8100
n193n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=6 vc=0 vn=- li=- udi=- nc=0 flg=0x8104
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=528 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=6 vc=528 vn=- li=- udi=- nc=0
n194n     aRegStore ebx                                                                       [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=0 vn=- li=- udi=- nc=1
n18n        ==>acall
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=528 vn=- li=- udi=2 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=528 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=6 vc=528 vn=- li=- udi=- nc=1
n193n         ==>aRegLoad
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=528 vn=- li=- udi=3 nc=1 flg=0x4
n193n       ==>aRegLoad
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=528 vn=- li=- udi=4 nc=1
n18n        ==>acall
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=528 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x4302
n195n     aRegStore r8d                                                                       [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=0 vn=- li=- udi=- nc=1
n24n        ==>ardbari
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=528 vn=- li=- udi=5 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=528 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=528 vn=- li=- udi=- nc=1 flg=0x1000
n193n         ==>aRegLoad
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=528 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=528 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=528 vn=- li=- udi=- nc=3 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x302
n198n       GlRegDeps ()                                                                      [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=0 vn=- li=- udi=- nc=5 flg=0x20
n196n         PassThrough r8                                                                  [0x7ffb72082d00] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=1
n24n            ==>ardbari
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n197n         PassThrough rbx                                                                 [0x7ffb72082d50] bci=[-1,7,557] rc=1 vc=0 vn=- li=- udi=- nc=1
n18n            ==>acall
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=528 vn=- li=- udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=528 vn=- li=- udi=- nc=0
n70n      NULLCHK on n192n [#32]                                                              [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=528 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=528 vn=- li=- udi=- nc=1 flg=0x104
n192n         ==>aRegLoad
n199n     aRegStore edi                                                                       [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=3 vc=528 vn=- li=- udi=- nc=1 flg=0x4
n69n          ==>aloadi
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=528 vn=- li=- udi=6 nc=1 flg=0x4
n72n        ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=528 vn=- li=- udi=- nc=1
n203n       GlRegDeps ()                                                                      [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=0 vn=- li=- udi=- nc=6 flg=0x20
n200n         PassThrough rdi                                                                 [0x7ffb72082e40] bci=[-1,32,559] rc=1 vc=0 vn=- li=- udi=- nc=1
n72n            ==>aloadi
n201n         PassThrough r8                                                                  [0x7ffb72082e90] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=1
n24n            ==>ardbari
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n202n         PassThrough rbx                                                                 [0x7ffb72082ee0] bci=[-1,7,557] rc=1 vc=0 vn=- li=- udi=- nc=1
n18n            ==>acall

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=528 vn=- li=- udi=- nc=1
n204n       GlRegDeps ()                                                                      [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=0 vn=- li=- udi=- nc=6 flg=0x20
n205n         aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=2 vc=0 vn=- li=- udi=- nc=0 flg=0x8000
n206n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=2 vc=0 vn=- li=- udi=- nc=0 flg=0x8000
n207n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083070] bci=[-1,35,559] rc=2 vc=0 vn=- li=- udi=- nc=0
n208n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720830c0] bci=[-1,35,559] rc=2 vc=0 vn=- li=- udi=- nc=0
n209n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=4 vc=0 vn=- li=- udi=- nc=0 flg=0x8104
n210n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=3 vc=0 vn=- li=- udi=- nc=0 flg=0x8000
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=528 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=528 vn=- li=- udi=- nc=1 flg=0x1000
n209n         ==>aRegLoad
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=528 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=528 vn=- li=- udi=- nc=5 flg=0x20
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n206n         ==>aRegLoad
n205n         ==>aRegLoad
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=528 vn=- li=- udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=528 vn=- li=- udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=528 vn=- li=- udi=- nc=1
n211n       GlRegDeps ()                                                                      [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=0 vn=- li=- udi=- nc=4 flg=0x20
n207n         ==>aRegLoad
n208n         ==>aRegLoad
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=528 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=528 vn=- li=- udi=- nc=1
n212n       GlRegDeps ()                                                                      [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=0 vn=- li=- udi=- nc=4 flg=0x20
n213n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083250] bci=[-1,51,564] rc=2 vc=0 vn=- li=- udi=- nc=0
n214n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720832a0] bci=[-1,51,564] rc=2 vc=0 vn=- li=- udi=- nc=0
n215n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=2 vc=0 vn=- li=- udi=- nc=0 flg=0x8004
n216n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083340] bci=[-1,51,564] rc=1 vc=0 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=528 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=4 vc=528 vn=- li=- udi=- nc=1
n215n         ==>aRegLoad
n217n     aRegStore ebx                                                                       [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=0 vn=- li=- udi=- nc=1
n76n        ==>acall
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=528 vn=- li=- udi=7 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=528 vn=- li=- udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=528 vn=- li=- udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=528 vn=- li=- udi=- nc=1
n219n       GlRegDeps ()                                                                      [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n213n         ==>aRegLoad
n214n         ==>aRegLoad
n218n         PassThrough rbx                                                                 [0x7ffb720833e0] bci=[-1,52,564] rc=1 vc=0 vn=- li=- udi=- nc=1
n76n            ==>acall
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=528 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=528 vn=- li=- udi=- nc=1
n220n       GlRegDeps ()                                                                      [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=0 vn=- li=- udi=- nc=5 flg=0x20
n221n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]             [0x7ffb720834d0] bci=[-1,27,559] rc=2 vc=0 vn=- li=- udi=- nc=0
n222n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083520] bci=[-1,27,559] rc=2 vc=0 vn=- li=- udi=- nc=0
n223n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083570] bci=[-1,27,559] rc=2 vc=0 vn=- li=- udi=- nc=0
n224n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720835c0] bci=[-1,27,559] rc=2 vc=0 vn=- li=- udi=- nc=0
n225n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083610] bci=[-1,27,559] rc=2 vc=0 vn=- li=- udi=- nc=0
n226n     aRegStore edi                                                                       [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=0 vn=- li=- udi=- nc=1
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=3 vc=528 vn=- li=- udi=- nc=0 flg=0x2
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=528 vn=- li=- udi=8 nc=1 flg=0x2
n60n        ==>aconst NULL
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=528 vn=- li=- udi=- nc=1
n228n       GlRegDeps ()                                                                      [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=0 vn=- li=- udi=- nc=6 flg=0x20
n227n         PassThrough rdi                                                                 [0x7ffb720836b0] bci=[-1,27,559] rc=1 vc=0 vn=- li=- udi=- nc=1
n60n            ==>aconst NULL
n221n         ==>aRegLoad
n222n         ==>aRegLoad
n223n         ==>aRegLoad
n224n         ==>aRegLoad
n225n         ==>aRegLoad
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=528 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=528 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold)                                                            [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=528 vn=- li=- udi=- nc=0
n229n     BBStart <block_15> (freq 0) (extension of previous block) (cold)                    [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=528 vn=- li=- udi=- nc=0
n238n     aRegStore eax                                                                       [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n237n       aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720839d0] bci=[-1,1,556] rc=2 vc=528 vn=- li=- udi=- nc=0
n235n     aRegStore esi                                                                       [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n234n       aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]         [0x7ffb720838e0] bci=[-1,1,556] rc=2 vc=528 vn=- li=- udi=- nc=0
n232n     aRegStore edx                                                                       [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n231n       aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720837f0] bci=[-1,1,556] rc=2 vc=528 vn=- li=- udi=- nc=0
n230n     BBEnd </block_15> (cold) =====                                                      [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n240n       GlRegDeps ()                                                                      [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n233n         PassThrough rdx                                                                 [0x7ffb72083890] bci=[-1,1,556] rc=1 vc=0 vn=- li=- udi=- nc=1
n231n           ==>aload
n236n         PassThrough rsi                                                                 [0x7ffb72083980] bci=[-1,1,556] rc=1 vc=0 vn=- li=- udi=- nc=1
n234n           ==>aload
n239n         PassThrough rax                                                                 [0x7ffb72083a70] bci=[-1,1,556] rc=1 vc=0 vn=- li=- udi=- nc=1
n237n           ==>aload

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n241n       GlRegDeps ()                                                                      [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n242n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=2 vc=0 vn=- li=- udi=- nc=0 flg=0x8000
n243n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=2 vc=0 vn=- li=- udi=- nc=0 flg=0x8000
n244n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=2 vc=0 vn=- li=- udi=- nc=0 flg=0x8000
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=25 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=26 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=27 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=28 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x204
n244n         ==>aRegLoad
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x204
n243n         ==>aRegLoad
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x204
n242n         ==>aRegLoad
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=32 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=528 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=528 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=528 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 178, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [14(10000) 3(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [14(9726) 12(785) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [15(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [15(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
        14 [0x7ffb72146cb0] BBStart at 0x7ffb720824e0, frequency = 9238
                 in        = [2(10000) ]
                 out       = [7(9726) ]
                 exception in  = []
                 exception out = []
        15 [0x7ffb72146f60] BBStart at 0x7ffb72083750, frequency = 0
                 in        = [10(0) ]
                 out       = [11(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 14(0x7ffb720e1c50) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 15(0x7ffb720e2070)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
               (0x7ffb720e1c50:0x7ffb720e1bf0)14 --> 7(0x7ffb72020800)
               (0x7ffb720e2070:0x7ffb720e2010)15 --> 11(0x7ffb720e0120)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
         14 [0x7ffb720e1bf0] Block
         15 [0x7ffb720e2010] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

      </optgroup>
<optimization id=74 name=treeLowering method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 74: treeLowering mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

      <optgroup name=globalDeadStoreGroup>
<optimization id=75 name=globalDeadStoreElimination method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 75: globalDeadStoreElimination
            (Building use/def info)
<trees
	title="Trees after globalDeadStoreElimination"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after globalDeadStoreElimination: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n165n       GlRegDeps ()                                                                      [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n166n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720823a0] bci=[-1,0,556] rc=3 vc=534 vn=- li=- udi=- nc=0
n167n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720823f0] bci=[-1,0,556] rc=3 vc=534 vn=- li=- udi=- nc=0
n168n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=4 vc=534 vn=- li=- udi=- nc=0 flg=0x8104
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=534 vn=- li=- udi=- nc=1 flg=0x1000
n168n         ==>aRegLoad
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x302
n169n       GlRegDeps ()                                                                      [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n10n      BBEnd </block_2>                                                                    [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=534 vn=- li=- udi=- nc=0
n170n     BBStart <block_14> (freq 9238) (extension of previous block)                        [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=534 vn=- li=- udi=- nc=0
n173n     aRegStore ebx                                                                       [0x7ffb720825d0] bci=[-1,4,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n172n       aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb72082580] bci=[-1,4,556] rc=2 vc=534 vn=- li=- udi=9 nc=0
n171n     BBEnd </block_14> =====                                                             [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n175n       GlRegDeps ()                                                                      [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=534 vn=- li=- udi=- nc=4 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n174n         PassThrough rbx                                                                 [0x7ffb72082620] bci=[-1,4,556] rc=1 vc=534 vn=- li=- udi=- nc=1
n172n           ==>aload

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=534 vn=- li=- udi=- nc=1
n176n       GlRegDeps ()                                                                      [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=534 vn=- li=- udi=- nc=4 flg=0x20
n177n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082710] bci=[-1,42,562] rc=3 vc=534 vn=- li=- udi=- nc=0
n178n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082760] bci=[-1,42,562] rc=3 vc=534 vn=- li=- udi=- nc=0
n179n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=3 vc=534 vn=- li=- udi=- nc=0 flg=0x8104
n180n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72082800] bci=[-1,42,562] rc=1 vc=534 vn=- li=- udi=- nc=0
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=534 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=7 vc=534 vn=- li=- udi=- nc=1
n179n         ==>aRegLoad
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=534 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x4302
n181n     aRegStore ebx                                                                       [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=534 vn=- li=- udi=- nc=1
n50n        ==>ardbari
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=534 vn=- li=5 udi=1 nc=1
n50n        ==>ardbari
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n50n        ==>ardbari
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x2
n183n       GlRegDeps ()                                                                      [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=534 vn=- li=- udi=- nc=4 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n179n         ==>aRegLoad
n182n         PassThrough rbx                                                                 [0x7ffb720828a0] bci=[-1,43,562] rc=1 vc=534 vn=- li=- udi=- nc=1
n50n            ==>ardbari
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=534 vn=- li=- udi=- nc=1
n185n       GlRegDeps ()                                                                      [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n184n         PassThrough rbx                                                                 [0x7ffb72082940] bci=[-1,43,562] rc=1 vc=534 vn=- li=- udi=- nc=1
n50n            ==>ardbari

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=534 vn=- li=- udi=- nc=1
n186n       GlRegDeps ()                                                                      [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n187n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=2 vc=534 vn=- li=- udi=- nc=0 flg=0x8000
n188n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=2 vc=534 vn=- li=- udi=- nc=0 flg=0x8000
n189n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=3 vc=534 vn=- li=- udi=- nc=0 flg=0x8100
n84n      ResolveAndNULLCHK on n189n [#32]                                                    [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=534 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=534 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=534 vn=- li=- udi=- nc=1
n189n           ==>aRegLoad
n189n         ==>aRegLoad
n188n         ==>aRegLoad
n187n         ==>aRegLoad
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=534 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=534 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=534 vn=- li=- udi=- nc=1
n190n       GlRegDeps ()                                                                      [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n191n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082b70] bci=[-1,7,557] rc=3 vc=534 vn=- li=- udi=- nc=0
n192n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=4 vc=534 vn=- li=- udi=- nc=0 flg=0x8100
n193n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=6 vc=534 vn=- li=- udi=- nc=0 flg=0x8104
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=534 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=6 vc=534 vn=- li=- udi=- nc=0
n194n     aRegStore ebx                                                                       [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=534 vn=- li=- udi=- nc=1
n18n        ==>acall
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=534 vn=- li=6 udi=2 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=534 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=6 vc=534 vn=- li=- udi=- nc=1
n193n         ==>aRegLoad
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=534 vn=- li=7 udi=3 nc=1 flg=0x4
n193n       ==>aRegLoad
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=534 vn=- li=8 udi=4 nc=1
n18n        ==>acall
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=534 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x4302
n195n     aRegStore r8d                                                                       [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=534 vn=- li=- udi=- nc=1
n24n        ==>ardbari
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=534 vn=- li=9 udi=5 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=534 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=534 vn=- li=- udi=- nc=1 flg=0x1000
n193n         ==>aRegLoad
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=534 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=534 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x302
n198n       GlRegDeps ()                                                                      [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=534 vn=- li=- udi=- nc=5 flg=0x20
n196n         PassThrough r8                                                                  [0x7ffb72082d00] bci=[-1,14,558] rc=1 vc=534 vn=- li=- udi=- nc=1
n24n            ==>ardbari
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n197n         PassThrough rbx                                                                 [0x7ffb72082d50] bci=[-1,7,557] rc=1 vc=534 vn=- li=- udi=- nc=1
n18n            ==>acall
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=534 vn=- li=- udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=534 vn=- li=- udi=- nc=0
n70n      NULLCHK on n192n [#32]                                                              [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=534 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=534 vn=- li=- udi=- nc=1 flg=0x104
n192n         ==>aRegLoad
n199n     aRegStore edi                                                                       [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=534 vn=- li=- udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=3 vc=534 vn=- li=- udi=- nc=1 flg=0x4
n69n          ==>aloadi
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=534 vn=- li=10 udi=6 nc=1 flg=0x4
n72n        ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=534 vn=- li=- udi=- nc=1
n203n       GlRegDeps ()                                                                      [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=534 vn=- li=- udi=- nc=6 flg=0x20
n200n         PassThrough rdi                                                                 [0x7ffb72082e40] bci=[-1,32,559] rc=1 vc=534 vn=- li=- udi=- nc=1
n72n            ==>aloadi
n201n         PassThrough r8                                                                  [0x7ffb72082e90] bci=[-1,14,558] rc=1 vc=534 vn=- li=- udi=- nc=1
n24n            ==>ardbari
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n202n         PassThrough rbx                                                                 [0x7ffb72082ee0] bci=[-1,7,557] rc=1 vc=534 vn=- li=- udi=- nc=1
n18n            ==>acall

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=534 vn=- li=- udi=- nc=1
n204n       GlRegDeps ()                                                                      [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=534 vn=- li=- udi=- nc=6 flg=0x20
n205n         aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=2 vc=534 vn=- li=- udi=- nc=0 flg=0x8000
n206n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=2 vc=534 vn=- li=- udi=- nc=0 flg=0x8000
n207n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083070] bci=[-1,35,559] rc=2 vc=534 vn=- li=- udi=- nc=0
n208n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720830c0] bci=[-1,35,559] rc=2 vc=534 vn=- li=- udi=- nc=0
n209n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=4 vc=534 vn=- li=- udi=- nc=0 flg=0x8104
n210n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=3 vc=534 vn=- li=- udi=- nc=0 flg=0x8000
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=534 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=534 vn=- li=- udi=- nc=1 flg=0x1000
n209n         ==>aRegLoad
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=534 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=534 vn=- li=- udi=- nc=5 flg=0x20
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n206n         ==>aRegLoad
n205n         ==>aRegLoad
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=534 vn=- li=- udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=534 vn=- li=- udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=534 vn=- li=- udi=- nc=1
n211n       GlRegDeps ()                                                                      [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=534 vn=- li=- udi=- nc=4 flg=0x20
n207n         ==>aRegLoad
n208n         ==>aRegLoad
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=534 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=534 vn=- li=- udi=- nc=1
n212n       GlRegDeps ()                                                                      [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=534 vn=- li=- udi=- nc=4 flg=0x20
n213n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083250] bci=[-1,51,564] rc=2 vc=534 vn=- li=- udi=- nc=0
n214n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720832a0] bci=[-1,51,564] rc=2 vc=534 vn=- li=- udi=- nc=0
n215n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=2 vc=534 vn=- li=- udi=- nc=0 flg=0x8004
n216n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083340] bci=[-1,51,564] rc=1 vc=534 vn=- li=- udi=- nc=0
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=534 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=4 vc=534 vn=- li=- udi=- nc=1
n215n         ==>aRegLoad
n217n     aRegStore ebx                                                                       [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=534 vn=- li=- udi=- nc=1
n76n        ==>acall
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=534 vn=- li=11 udi=7 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=534 vn=- li=- udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=534 vn=- li=- udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=534 vn=- li=- udi=- nc=1
n219n       GlRegDeps ()                                                                      [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n213n         ==>aRegLoad
n214n         ==>aRegLoad
n218n         PassThrough rbx                                                                 [0x7ffb720833e0] bci=[-1,52,564] rc=1 vc=534 vn=- li=- udi=- nc=1
n76n            ==>acall
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=534 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=534 vn=- li=- udi=- nc=1
n220n       GlRegDeps ()                                                                      [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=534 vn=- li=- udi=- nc=5 flg=0x20
n221n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]             [0x7ffb720834d0] bci=[-1,27,559] rc=2 vc=534 vn=- li=- udi=- nc=0
n222n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083520] bci=[-1,27,559] rc=2 vc=534 vn=- li=- udi=- nc=0
n223n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083570] bci=[-1,27,559] rc=2 vc=534 vn=- li=- udi=- nc=0
n224n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720835c0] bci=[-1,27,559] rc=2 vc=534 vn=- li=- udi=- nc=0
n225n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083610] bci=[-1,27,559] rc=2 vc=534 vn=- li=- udi=- nc=0
n226n     aRegStore edi                                                                       [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=534 vn=- li=- udi=- nc=1
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=3 vc=534 vn=- li=- udi=- nc=0 flg=0x2
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=534 vn=- li=12 udi=8 nc=1 flg=0x2
n60n        ==>aconst NULL
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=534 vn=- li=- udi=- nc=1
n228n       GlRegDeps ()                                                                      [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=534 vn=- li=- udi=- nc=6 flg=0x20
n227n         PassThrough rdi                                                                 [0x7ffb720836b0] bci=[-1,27,559] rc=1 vc=534 vn=- li=- udi=- nc=1
n60n            ==>aconst NULL
n221n         ==>aRegLoad
n222n         ==>aRegLoad
n223n         ==>aRegLoad
n224n         ==>aRegLoad
n225n         ==>aRegLoad
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=534 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=534 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold)                                                            [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=534 vn=- li=- udi=- nc=0
n229n     BBStart <block_15> (freq 0) (extension of previous block) (cold)                    [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=534 vn=- li=- udi=- nc=0
n238n     aRegStore eax                                                                       [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n237n       aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720839d0] bci=[-1,1,556] rc=2 vc=534 vn=- li=- udi=10 nc=0
n235n     aRegStore esi                                                                       [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n234n       aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]         [0x7ffb720838e0] bci=[-1,1,556] rc=2 vc=534 vn=- li=- udi=11 nc=0
n232n     aRegStore edx                                                                       [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n231n       aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720837f0] bci=[-1,1,556] rc=2 vc=534 vn=- li=- udi=12 nc=0
n230n     BBEnd </block_15> (cold) =====                                                      [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n240n       GlRegDeps ()                                                                      [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n233n         PassThrough rdx                                                                 [0x7ffb72083890] bci=[-1,1,556] rc=1 vc=534 vn=- li=- udi=- nc=1
n231n           ==>aload
n236n         PassThrough rsi                                                                 [0x7ffb72083980] bci=[-1,1,556] rc=1 vc=534 vn=- li=- udi=- nc=1
n234n           ==>aload
n239n         PassThrough rax                                                                 [0x7ffb72083a70] bci=[-1,1,556] rc=1 vc=534 vn=- li=- udi=- nc=1
n237n           ==>aload

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n241n       GlRegDeps ()                                                                      [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=534 vn=- li=- udi=- nc=3 flg=0x20
n242n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=2 vc=534 vn=- li=- udi=- nc=0 flg=0x8000
n243n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=2 vc=534 vn=- li=- udi=- nc=0 flg=0x8000
n244n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=2 vc=534 vn=- li=- udi=- nc=0 flg=0x8000
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=13 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=14 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=15 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=16 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x204
n244n         ==>aRegLoad
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x204
n243n         ==>aRegLoad
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x204
n242n         ==>aRegLoad
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=17 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=534 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=534 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=534 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 178, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [14(10000) 3(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [14(9726) 12(785) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [15(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [15(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
        14 [0x7ffb72146cb0] BBStart at 0x7ffb720824e0, frequency = 9238
                 in        = [2(10000) ]
                 out       = [7(9726) ]
                 exception in  = []
                 exception out = []
        15 [0x7ffb72146f60] BBStart at 0x7ffb72083750, frequency = 0
                 in        = [10(0) ]
                 out       = [11(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 14(0x7ffb720e1c50) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 15(0x7ffb720e2070)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
               (0x7ffb720e1c50:0x7ffb720e1bf0)14 --> 7(0x7ffb72020800)
               (0x7ffb720e2070:0x7ffb720e2010)15 --> 11(0x7ffb720e0120)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
         14 [0x7ffb720e1bf0] Block
         15 [0x7ffb720e2010] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=76 name=deadTreesElimination method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 76: deadTreesElimination
              (Invalidating use/def info)
[    29] O^O DEAD TREES ELIMINATION: Remove GlRegDep : 00007FFB72082800
         O^O DEAD TREES ELIMINATION: Remove GlRegDep : 00007FFB72082620
         O^O DEAD TREES ELIMINATION: Remove GlRegDep : 00007FFB72083160
[    30] O^O DEAD TREES ELIMINATION: Remove GlRegDep : 00007FFB72083340
         O^O DEAD TREES ELIMINATION: Remove GlRegDep : 00007FFB720828A0
[    31] O^O DEAD TREES ELIMINATION: Remove tree : [00007FFB720825D0] ([00007FFB72082580] = aload)
[    32] O^O DEAD TREES ELIMINATION: Move tree : [00007FFB72082850]([00007FFB72005590] = ardbari) to end of block
[    33] O^O DEAD TREES ELIMINATION: Move tree : [00007FFB72082C60]([00007FFB72004B90] = acall) to end of block
[    34] O^O DEAD TREES ELIMINATION: Move tree : [00007FFB72082CB0]([00007FFB72004D70] = ardbari) to end of block
[    35] O^O DEAD TREES ELIMINATION: Move tree : [00007FFB72082DF0]([00007FFB72080640] = aloadi) to end of block
[    36] O^O DEAD TREES ELIMINATION: Move tree : [00007FFB72083390]([00007FFB72080780] = acall) to end of block
[    37] O^O DEAD TREES ELIMINATION: Move tree : [00007FFB72083660]([00007FFB72080280] = aconst) to end of block
[    38] O^O DEAD TREES ELIMINATION: Move tree : [00007FFB72083A20]([00007FFB720839D0] = aload) to end of block
[    39] O^O DEAD TREES ELIMINATION: Move tree : [00007FFB72083930]([00007FFB720838E0] = aload) to end of block
<trees
	title="Trees after deadTreesElimination"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after deadTreesElimination: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n165n       GlRegDeps ()                                                                      [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n166n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720823a0] bci=[-1,0,556] rc=3 vc=537 vn=- li=- udi=- nc=0
n167n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720823f0] bci=[-1,0,556] rc=3 vc=537 vn=- li=- udi=- nc=0
n168n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=4 vc=537 vn=- li=- udi=- nc=0 flg=0x8104
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=537 vn=- li=- udi=- nc=1 flg=0x1000
n168n         ==>aRegLoad
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=537 vn=- li=-1 udi=- nc=3 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x302
n169n       GlRegDeps ()                                                                      [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n10n      BBEnd </block_2>                                                                    [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n170n     BBStart <block_14> (freq 9238) (extension of previous block)                        [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n171n     BBEnd </block_14> =====                                                             [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n175n       GlRegDeps ()                                                                      [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n176n       GlRegDeps ()                                                                      [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n177n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082710] bci=[-1,42,562] rc=3 vc=537 vn=- li=- udi=- nc=0
n178n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082760] bci=[-1,42,562] rc=3 vc=537 vn=- li=- udi=- nc=0
n179n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=3 vc=537 vn=- li=- udi=- nc=0 flg=0x8104
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=6 vc=537 vn=- li=1 udi=- nc=1
n179n         ==>aRegLoad
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=537 vn=- li=-1 udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=537 vn=- li=-1 udi=1 nc=1
n50n        ==>ardbari
n181n     aRegStore ebx                                                                       [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n50n        ==>ardbari
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=537 vn=- li=-1 udi=- nc=3 flg=0x20
n50n        ==>ardbari
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x2
n183n       GlRegDeps ()                                                                      [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n179n         ==>aRegLoad
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n185n       GlRegDeps ()                                                                      [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n184n         PassThrough rbx                                                                 [0x7ffb72082940] bci=[-1,43,562] rc=1 vc=537 vn=- li=- udi=- nc=1
n50n            ==>ardbari

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n186n       GlRegDeps ()                                                                      [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n187n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=2 vc=537 vn=- li=- udi=- nc=0 flg=0x8000
n188n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=2 vc=537 vn=- li=- udi=- nc=0 flg=0x8000
n189n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=3 vc=537 vn=- li=- udi=- nc=0 flg=0x8100
n84n      ResolveAndNULLCHK on n189n [#32]                                                    [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=537 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=537 vn=- li=- udi=- nc=1
n189n           ==>aRegLoad
n189n         ==>aRegLoad
n188n         ==>aRegLoad
n187n         ==>aRegLoad
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=537 vn=- li=-1 udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n190n       GlRegDeps ()                                                                      [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n191n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082b70] bci=[-1,7,557] rc=3 vc=537 vn=- li=- udi=- nc=0
n192n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=4 vc=537 vn=- li=- udi=- nc=0 flg=0x8100
n193n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=6 vc=537 vn=- li=- udi=- nc=0 flg=0x8104
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=6 vc=537 vn=- li=1 udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=537 vn=- li=-1 udi=2 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=6 vc=537 vn=- li=1 udi=- nc=1
n193n         ==>aRegLoad
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=537 vn=- li=-1 udi=3 nc=1 flg=0x4
n193n       ==>aRegLoad
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=537 vn=- li=-1 udi=4 nc=1
n18n        ==>acall
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=537 vn=- li=-1 udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=537 vn=- li=-1 udi=5 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=537 vn=- li=- udi=- nc=1 flg=0x1000
n193n         ==>aRegLoad
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=537 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n194n     aRegStore ebx                                                                       [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n18n        ==>acall
n195n     aRegStore r8d                                                                       [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n24n        ==>ardbari
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=537 vn=- li=-1 udi=- nc=3 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x302
n198n       GlRegDeps ()                                                                      [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=537 vn=- li=- udi=- nc=5 flg=0x20
n196n         PassThrough r8                                                                  [0x7ffb72082d00] bci=[-1,14,558] rc=1 vc=537 vn=- li=- udi=- nc=1
n24n            ==>ardbari
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n197n         PassThrough rbx                                                                 [0x7ffb72082d50] bci=[-1,7,557] rc=1 vc=537 vn=- li=- udi=- nc=1
n18n            ==>acall
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n70n      NULLCHK on n192n [#32]                                                              [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=537 vn=- li=- udi=- nc=1 flg=0x104
n192n         ==>aRegLoad
n199n     aRegStore edi                                                                       [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=3 vc=537 vn=- li=1 udi=- nc=1 flg=0x4
n69n          ==>aloadi
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=537 vn=- li=-1 udi=6 nc=1 flg=0x4
n72n        ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n203n       GlRegDeps ()                                                                      [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=537 vn=- li=- udi=- nc=6 flg=0x20
n200n         PassThrough rdi                                                                 [0x7ffb72082e40] bci=[-1,32,559] rc=1 vc=537 vn=- li=- udi=- nc=1
n72n            ==>aloadi
n201n         PassThrough r8                                                                  [0x7ffb72082e90] bci=[-1,14,558] rc=1 vc=537 vn=- li=- udi=- nc=1
n24n            ==>ardbari
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n202n         PassThrough rbx                                                                 [0x7ffb72082ee0] bci=[-1,7,557] rc=1 vc=537 vn=- li=- udi=- nc=1
n18n            ==>acall

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n204n       GlRegDeps ()                                                                      [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=537 vn=- li=- udi=- nc=6 flg=0x20
n205n         aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=2 vc=537 vn=- li=- udi=- nc=0 flg=0x8000
n206n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=2 vc=537 vn=- li=- udi=- nc=0 flg=0x8000
n207n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083070] bci=[-1,35,559] rc=2 vc=537 vn=- li=- udi=- nc=0
n208n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720830c0] bci=[-1,35,559] rc=2 vc=537 vn=- li=- udi=- nc=0
n209n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=4 vc=537 vn=- li=- udi=- nc=0 flg=0x8104
n210n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=2 vc=537 vn=- li=- udi=- nc=0 flg=0x8000
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=537 vn=- li=- udi=- nc=1 flg=0x1000
n209n         ==>aRegLoad
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=537 vn=- li=- udi=- nc=5 flg=0x20
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n206n         ==>aRegLoad
n205n         ==>aRegLoad
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n211n       GlRegDeps ()                                                                      [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n207n         ==>aRegLoad
n208n         ==>aRegLoad
n209n         ==>aRegLoad
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=537 vn=- li=-1 udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n212n       GlRegDeps ()                                                                      [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n213n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083250] bci=[-1,51,564] rc=2 vc=537 vn=- li=- udi=- nc=0
n214n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720832a0] bci=[-1,51,564] rc=2 vc=537 vn=- li=- udi=- nc=0
n215n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=2 vc=537 vn=- li=- udi=- nc=0 flg=0x8004
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=4 vc=537 vn=- li=1 udi=- nc=1
n215n         ==>aRegLoad
n217n     aRegStore ebx                                                                       [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n76n        ==>acall
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=537 vn=- li=-1 udi=7 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n219n       GlRegDeps ()                                                                      [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n213n         ==>aRegLoad
n214n         ==>aRegLoad
n218n         PassThrough rbx                                                                 [0x7ffb720833e0] bci=[-1,52,564] rc=1 vc=537 vn=- li=- udi=- nc=1
n76n            ==>acall
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=537 vn=- li=-1 udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n220n       GlRegDeps ()                                                                      [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=537 vn=- li=- udi=- nc=5 flg=0x20
n221n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]             [0x7ffb720834d0] bci=[-1,27,559] rc=2 vc=537 vn=- li=- udi=- nc=0
n222n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083520] bci=[-1,27,559] rc=2 vc=537 vn=- li=- udi=- nc=0
n223n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083570] bci=[-1,27,559] rc=2 vc=537 vn=- li=- udi=- nc=0
n224n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720835c0] bci=[-1,27,559] rc=2 vc=537 vn=- li=- udi=- nc=0
n225n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083610] bci=[-1,27,559] rc=2 vc=537 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=537 vn=- li=-1 udi=8 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=3 vc=537 vn=- li=1 udi=- nc=0 flg=0x2
n226n     aRegStore edi                                                                       [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n60n        ==>aconst NULL
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n228n       GlRegDeps ()                                                                      [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=537 vn=- li=- udi=- nc=6 flg=0x20
n227n         PassThrough rdi                                                                 [0x7ffb720836b0] bci=[-1,27,559] rc=1 vc=537 vn=- li=- udi=- nc=1
n60n            ==>aconst NULL
n221n         ==>aRegLoad
n222n         ==>aRegLoad
n223n         ==>aRegLoad
n224n         ==>aRegLoad
n225n         ==>aRegLoad
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=537 vn=- li=-1 udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n95n      BBEnd </block_10> (cold)                                                            [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n229n     BBStart <block_15> (freq 0) (extension of previous block) (cold)                    [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=537 vn=- li=-1 udi=- nc=0
n238n     aRegStore eax                                                                       [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n237n       aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720839d0] bci=[-1,1,556] rc=2 vc=537 vn=- li=1 udi=10 nc=0
n235n     aRegStore esi                                                                       [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n234n       aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]         [0x7ffb720838e0] bci=[-1,1,556] rc=2 vc=537 vn=- li=1 udi=11 nc=0
n232n     aRegStore edx                                                                       [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n231n       aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720837f0] bci=[-1,1,556] rc=2 vc=537 vn=- li=- udi=12 nc=0
n230n     BBEnd </block_15> (cold) =====                                                      [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n240n       GlRegDeps ()                                                                      [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n233n         PassThrough rdx                                                                 [0x7ffb72083890] bci=[-1,1,556] rc=1 vc=537 vn=- li=- udi=- nc=1
n231n           ==>aload
n236n         PassThrough rsi                                                                 [0x7ffb72083980] bci=[-1,1,556] rc=1 vc=537 vn=- li=- udi=- nc=1
n234n           ==>aload
n239n         PassThrough rax                                                                 [0x7ffb72083a70] bci=[-1,1,556] rc=1 vc=537 vn=- li=- udi=- nc=1
n237n           ==>aload

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n241n       GlRegDeps ()                                                                      [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=537 vn=- li=- udi=- nc=3 flg=0x20
n242n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=2 vc=537 vn=- li=- udi=- nc=0 flg=0x8000
n243n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=2 vc=537 vn=- li=- udi=- nc=0 flg=0x8000
n244n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=2 vc=537 vn=- li=- udi=- nc=0 flg=0x8000
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=13 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=14 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=15 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=16 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x204
n244n         ==>aRegLoad
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x204
n243n         ==>aRegLoad
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x204
n242n         ==>aRegLoad
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=17 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=537 vn=- li=-1 udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=537 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=537 vn=- li=-1 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 172, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [14(10000) 3(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [14(9726) 12(785) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [15(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [15(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
        14 [0x7ffb72146cb0] BBStart at 0x7ffb720824e0, frequency = 9238
                 in        = [2(10000) ]
                 out       = [7(9726) ]
                 exception in  = []
                 exception out = []
        15 [0x7ffb72146f60] BBStart at 0x7ffb72083750, frequency = 0
                 in        = [10(0) ]
                 out       = [11(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 14(0x7ffb720e1c50) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 15(0x7ffb720e2070)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
               (0x7ffb720e1c50:0x7ffb720e1bf0)14 --> 7(0x7ffb72020800)
               (0x7ffb720e2070:0x7ffb720e2010)15 --> 11(0x7ffb720e0120)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
         14 [0x7ffb720e1bf0] Block
         15 [0x7ffb720e2010] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

      </optgroup>
<optimization id=77 name=rematerialization method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 77: rematerialization
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=78 name=compactNullChecks method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 78: compactNullChecks
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=79 name=deadTreesElimination method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 79: deadTreesElimination
[    40] O^O DEAD TREES ELIMINATION: Move tree : [00007FFB72082850]([00007FFB72005590] = ardbari) to end of block
<trees
	title="Trees after deadTreesElimination"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Trees after deadTreesElimination: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=563 vn=- li=-1 udi=- nc=1
n165n       GlRegDeps ()                                                                      [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=563 vn=- li=- udi=- nc=3 flg=0x20
n166n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720823a0] bci=[-1,0,556] rc=3 vc=563 vn=- li=1 udi=- nc=0
n167n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720823f0] bci=[-1,0,556] rc=3 vc=563 vn=- li=1 udi=- nc=0
n168n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=4 vc=563 vn=- li=1 udi=- nc=0 flg=0x8104
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=563 vn=- li=-1 udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=563 vn=- li=- udi=- nc=1 flg=0x1000
n168n         ==>aRegLoad
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=563 vn=- li=-1 udi=- nc=3 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=563 vn=- li=- udi=- nc=0 flg=0x302
n169n       GlRegDeps ()                                                                      [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=563 vn=- li=- udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n10n      BBEnd </block_2>                                                                    [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=563 vn=- li=-1 udi=- nc=0
n170n     BBStart <block_14> (freq 9238) (extension of previous block)                        [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=563 vn=- li=-1 udi=- nc=0
n171n     BBEnd </block_14> =====                                                             [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n175n       GlRegDeps ()                                                                      [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=559 vn=- li=-1 udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=561 vn=- li=-1 udi=- nc=1
n176n       GlRegDeps ()                                                                      [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=561 vn=- li=- udi=- nc=3 flg=0x20
n177n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082710] bci=[-1,42,562] rc=3 vc=561 vn=- li=1 udi=- nc=0
n178n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082760] bci=[-1,42,562] rc=3 vc=561 vn=- li=1 udi=- nc=0
n179n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=3 vc=561 vn=- li=- udi=- nc=0 flg=0x8104
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=561 vn=- li=-1 udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=6 vc=561 vn=- li=2 udi=- nc=1
n179n         ==>aRegLoad
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=561 vn=- li=-1 udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=561 vn=- li=- udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=561 vn=- li=-1 udi=1 nc=1
n50n        ==>ardbari
n181n     aRegStore ebx                                                                       [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=561 vn=- li=-1 udi=- nc=1
n50n        ==>ardbari
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=561 vn=- li=-1 udi=- nc=3 flg=0x20
n50n        ==>ardbari
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=561 vn=- li=- udi=- nc=0 flg=0x2
n183n       GlRegDeps ()                                                                      [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=561 vn=- li=- udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n179n         ==>aRegLoad
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n185n       GlRegDeps ()                                                                      [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=559 vn=- li=-1 udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n184n         PassThrough rbx                                                                 [0x7ffb72082940] bci=[-1,43,562] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n50n            ==>ardbari

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n186n       GlRegDeps ()                                                                      [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=559 vn=- li=-1 udi=- nc=3 flg=0x20
n187n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=2 vc=559 vn=- li=-2 udi=- nc=0 flg=0x8000
n188n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=2 vc=559 vn=- li=-2 udi=- nc=0 flg=0x8000
n189n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=3 vc=559 vn=- li=-3 udi=- nc=0 flg=0x8100
n84n      ResolveAndNULLCHK on n189n [#32]                                                    [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=559 vn=- li=-2 udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n189n           ==>aRegLoad
n189n         ==>aRegLoad
n188n         ==>aRegLoad
n187n         ==>aRegLoad
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=559 vn=- li=-1 udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n190n       GlRegDeps ()                                                                      [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=559 vn=- li=-1 udi=- nc=3 flg=0x20
n191n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082b70] bci=[-1,7,557] rc=3 vc=559 vn=- li=-3 udi=- nc=0
n192n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=4 vc=559 vn=- li=-4 udi=- nc=0 flg=0x8100
n193n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=6 vc=559 vn=- li=-6 udi=- nc=0 flg=0x8104
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=6 vc=559 vn=- li=-6 udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=559 vn=- li=-1 udi=2 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=6 vc=559 vn=- li=-6 udi=- nc=1
n193n         ==>aRegLoad
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=559 vn=- li=-1 udi=3 nc=1 flg=0x4
n193n       ==>aRegLoad
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=559 vn=- li=-1 udi=4 nc=1
n18n        ==>acall
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=559 vn=- li=-1 udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=559 vn=- li=-1 udi=5 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=559 vn=- li=-2 udi=- nc=1 flg=0x1000
n193n         ==>aRegLoad
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=559 vn=- li=-2 udi=- nc=1
n33n          ==>irdbari
n194n     aRegStore ebx                                                                       [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n18n        ==>acall
n195n     aRegStore r8d                                                                       [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n24n        ==>ardbari
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=559 vn=- li=-1 udi=- nc=3 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x302
n198n       GlRegDeps ()                                                                      [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=559 vn=- li=-1 udi=- nc=5 flg=0x20
n196n         PassThrough r8                                                                  [0x7ffb72082d00] bci=[-1,14,558] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n24n            ==>ardbari
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n197n         PassThrough rbx                                                                 [0x7ffb72082d50] bci=[-1,7,557] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n18n            ==>acall
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=559 vn=- li=-1 udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=559 vn=- li=-1 udi=- nc=0
n70n      NULLCHK on n192n [#32]                                                              [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=559 vn=- li=-2 udi=- nc=1 flg=0x104
n192n         ==>aRegLoad
n199n     aRegStore edi                                                                       [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=3 vc=559 vn=- li=-3 udi=- nc=1 flg=0x4
n69n          ==>aloadi
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=559 vn=- li=-1 udi=6 nc=1 flg=0x4
n72n        ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n203n       GlRegDeps ()                                                                      [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=559 vn=- li=-1 udi=- nc=6 flg=0x20
n200n         PassThrough rdi                                                                 [0x7ffb72082e40] bci=[-1,32,559] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n72n            ==>aloadi
n201n         PassThrough r8                                                                  [0x7ffb72082e90] bci=[-1,14,558] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n24n            ==>ardbari
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n202n         PassThrough rbx                                                                 [0x7ffb72082ee0] bci=[-1,7,557] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n18n            ==>acall

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n204n       GlRegDeps ()                                                                      [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=559 vn=- li=-1 udi=- nc=6 flg=0x20
n205n         aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=2 vc=559 vn=- li=-2 udi=- nc=0 flg=0x8000
n206n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=2 vc=559 vn=- li=-2 udi=- nc=0 flg=0x8000
n207n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083070] bci=[-1,35,559] rc=2 vc=559 vn=- li=-2 udi=- nc=0
n208n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720830c0] bci=[-1,35,559] rc=2 vc=559 vn=- li=-2 udi=- nc=0
n209n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=4 vc=559 vn=- li=-4 udi=- nc=0 flg=0x8104
n210n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=2 vc=559 vn=- li=-2 udi=- nc=0 flg=0x8000
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=559 vn=- li=-2 udi=- nc=1 flg=0x1000
n209n         ==>aRegLoad
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=559 vn=- li=-1 udi=- nc=5 flg=0x20
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n206n         ==>aRegLoad
n205n         ==>aRegLoad
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=559 vn=- li=-1 udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=559 vn=- li=-1 udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n211n       GlRegDeps ()                                                                      [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=559 vn=- li=-1 udi=- nc=3 flg=0x20
n207n         ==>aRegLoad
n208n         ==>aRegLoad
n209n         ==>aRegLoad
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=559 vn=- li=-1 udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n212n       GlRegDeps ()                                                                      [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=559 vn=- li=-1 udi=- nc=3 flg=0x20
n213n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083250] bci=[-1,51,564] rc=2 vc=559 vn=- li=-2 udi=- nc=0
n214n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720832a0] bci=[-1,51,564] rc=2 vc=559 vn=- li=-2 udi=- nc=0
n215n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=2 vc=559 vn=- li=-2 udi=- nc=0 flg=0x8004
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=4 vc=559 vn=- li=-4 udi=- nc=1
n215n         ==>aRegLoad
n217n     aRegStore ebx                                                                       [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n76n        ==>acall
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=559 vn=- li=-1 udi=7 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=559 vn=- li=-1 udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=559 vn=- li=-1 udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n219n       GlRegDeps ()                                                                      [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=559 vn=- li=-1 udi=- nc=3 flg=0x20
n213n         ==>aRegLoad
n214n         ==>aRegLoad
n218n         PassThrough rbx                                                                 [0x7ffb720833e0] bci=[-1,52,564] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n76n            ==>acall
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=559 vn=- li=-1 udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n220n       GlRegDeps ()                                                                      [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=559 vn=- li=-1 udi=- nc=5 flg=0x20
n221n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]             [0x7ffb720834d0] bci=[-1,27,559] rc=2 vc=559 vn=- li=-2 udi=- nc=0
n222n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083520] bci=[-1,27,559] rc=2 vc=559 vn=- li=-2 udi=- nc=0
n223n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083570] bci=[-1,27,559] rc=2 vc=559 vn=- li=-2 udi=- nc=0
n224n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720835c0] bci=[-1,27,559] rc=2 vc=559 vn=- li=-2 udi=- nc=0
n225n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083610] bci=[-1,27,559] rc=2 vc=559 vn=- li=-2 udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=559 vn=- li=-1 udi=8 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=3 vc=559 vn=- li=-3 udi=- nc=0 flg=0x2
n226n     aRegStore edi                                                                       [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n60n        ==>aconst NULL
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n228n       GlRegDeps ()                                                                      [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=559 vn=- li=-1 udi=- nc=6 flg=0x20
n227n         PassThrough rdi                                                                 [0x7ffb720836b0] bci=[-1,27,559] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n60n            ==>aconst NULL
n221n         ==>aRegLoad
n222n         ==>aRegLoad
n223n         ==>aRegLoad
n224n         ==>aRegLoad
n225n         ==>aRegLoad
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=559 vn=- li=-1 udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=559 vn=- li=-1 udi=- nc=0
n95n      BBEnd </block_10> (cold)                                                            [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=559 vn=- li=-1 udi=- nc=0
n229n     BBStart <block_15> (freq 0) (extension of previous block) (cold)                    [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=559 vn=- li=-1 udi=- nc=0
n238n     aRegStore eax                                                                       [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n237n       aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720839d0] bci=[-1,1,556] rc=2 vc=559 vn=- li=-2 udi=10 nc=0
n235n     aRegStore esi                                                                       [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n234n       aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]         [0x7ffb720838e0] bci=[-1,1,556] rc=2 vc=559 vn=- li=-2 udi=11 nc=0
n232n     aRegStore edx                                                                       [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n231n       aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720837f0] bci=[-1,1,556] rc=2 vc=559 vn=- li=-2 udi=12 nc=0
n230n     BBEnd </block_15> (cold) =====                                                      [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n240n       GlRegDeps ()                                                                      [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=559 vn=- li=-1 udi=- nc=3 flg=0x20
n233n         PassThrough rdx                                                                 [0x7ffb72083890] bci=[-1,1,556] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n231n           ==>aload
n236n         PassThrough rsi                                                                 [0x7ffb72083980] bci=[-1,1,556] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n234n           ==>aload
n239n         PassThrough rax                                                                 [0x7ffb72083a70] bci=[-1,1,556] rc=1 vc=559 vn=- li=-1 udi=- nc=1
n237n           ==>aload

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n241n       GlRegDeps ()                                                                      [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=559 vn=- li=-1 udi=- nc=3 flg=0x20
n242n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=2 vc=559 vn=- li=-2 udi=- nc=0 flg=0x8000
n243n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=2 vc=559 vn=- li=-2 udi=- nc=0 flg=0x8000
n244n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=2 vc=559 vn=- li=-2 udi=- nc=0 flg=0x8000
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=13 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=14 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=15 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=16 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x204
n244n         ==>aRegLoad
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x204
n243n         ==>aRegLoad
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x204
n242n         ==>aRegLoad
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=17 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=559 vn=- li=-1 udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=559 vn=- li=-1 udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=559 vn=- li=-1 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 172, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [14(10000) 3(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [14(9726) 12(785) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [15(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [15(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
        14 [0x7ffb72146cb0] BBStart at 0x7ffb720824e0, frequency = 9238
                 in        = [2(10000) ]
                 out       = [7(9726) ]
                 exception in  = []
                 exception out = []
        15 [0x7ffb72146f60] BBStart at 0x7ffb72083750, frequency = 0
                 in        = [10(0) ]
                 out       = [11(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 14(0x7ffb720e1c50) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 15(0x7ffb720e2070)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
               (0x7ffb720e1c50:0x7ffb720e1bf0)14 --> 7(0x7ffb72020800)
               (0x7ffb720e2070:0x7ffb720e2010)15 --> 11(0x7ffb720e0120)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
         14 [0x7ffb720e1bf0] Block
         15 [0x7ffb720e2010] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=81 name=globalLiveVariablesForGC method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 81: globalLiveVariablesForGC
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=82 name=regDepCopyRemoval method=java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;>
Performing 82: regDepCopyRemoval
         No transformations done by this pass -- omitting listings
</optimization>

<trees
	title="Post Optimization Trees"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Post Optimization Trees: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=563 vn=- li=- udi=- nc=1
n165n       GlRegDeps ()                                                                      [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=563 vn=- li=- udi=- nc=3 flg=0x20
n166n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720823a0] bci=[-1,0,556] rc=3 vc=563 vn=- li=- udi=- nc=0
n167n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720823f0] bci=[-1,0,556] rc=3 vc=563 vn=- li=- udi=- nc=0
n168n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=4 vc=563 vn=- li=- udi=- nc=0 flg=0x8104
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=563 vn=- li=- udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=563 vn=- li=- udi=- nc=1 flg=0x1000
n168n         ==>aRegLoad
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=563 vn=- li=- udi=- nc=3 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=563 vn=- li=- udi=- nc=0 flg=0x302
n169n       GlRegDeps ()                                                                      [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=563 vn=- li=- udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n10n      BBEnd </block_2>                                                                    [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=563 vn=- li=- udi=- nc=0
n170n     BBStart <block_14> (freq 9238) (extension of previous block)                        [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=563 vn=- li=- udi=- nc=0
n171n     BBEnd </block_14> =====                                                             [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=559 vn=- li=- udi=- nc=1
n175n       GlRegDeps ()                                                                      [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=559 vn=- li=- udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=561 vn=- li=- udi=- nc=1
n176n       GlRegDeps ()                                                                      [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=561 vn=- li=- udi=- nc=3 flg=0x20
n177n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082710] bci=[-1,42,562] rc=3 vc=561 vn=- li=- udi=- nc=0
n178n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082760] bci=[-1,42,562] rc=3 vc=561 vn=- li=- udi=- nc=0
n179n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=3 vc=561 vn=- li=- udi=- nc=0 flg=0x8104
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=561 vn=- li=- udi=- nc=1
n50n        ardbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72005590] bci=[-1,43,562] rc=6 vc=561 vn=- li=- udi=- nc=1
n179n         ==>aRegLoad
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=561 vn=- li=- udi=- nc=2
n50n        ==>ardbari
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=561 vn=- li=- udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=561 vn=- li=- udi=1 nc=1
n50n        ==>ardbari
n181n     aRegStore ebx                                                                       [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=561 vn=- li=- udi=- nc=1
n50n        ==>ardbari
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=561 vn=- li=- udi=- nc=3 flg=0x20
n50n        ==>ardbari
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=561 vn=- li=- udi=- nc=0 flg=0x2
n183n       GlRegDeps ()                                                                      [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=561 vn=- li=- udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n179n         ==>aRegLoad
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=559 vn=- li=- udi=- nc=1
n185n       GlRegDeps ()                                                                      [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=559 vn=- li=- udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n184n         PassThrough rbx                                                                 [0x7ffb72082940] bci=[-1,43,562] rc=1 vc=559 vn=- li=- udi=- nc=1
n50n            ==>ardbari

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=559 vn=- li=- udi=- nc=1
n186n       GlRegDeps ()                                                                      [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=559 vn=- li=- udi=- nc=3 flg=0x20
n187n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=2 vc=559 vn=- li=- udi=- nc=0 flg=0x8000
n188n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=2 vc=559 vn=- li=- udi=- nc=0 flg=0x8000
n189n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=3 vc=559 vn=- li=- udi=- nc=0 flg=0x8100
n84n      ResolveAndNULLCHK on n189n [#32]                                                    [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=559 vn=- li=- udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=559 vn=- li=- udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=559 vn=- li=- udi=- nc=1
n189n           ==>aRegLoad
n189n         ==>aRegLoad
n188n         ==>aRegLoad
n187n         ==>aRegLoad
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=559 vn=- li=- udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=559 vn=- li=- udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=559 vn=- li=- udi=- nc=1
n190n       GlRegDeps ()                                                                      [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=559 vn=- li=- udi=- nc=3 flg=0x20
n191n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72082b70] bci=[-1,7,557] rc=3 vc=559 vn=- li=- udi=- nc=0
n192n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=4 vc=559 vn=- li=- udi=- nc=0 flg=0x8100
n193n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=6 vc=559 vn=- li=- udi=- nc=0 flg=0x8104
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=559 vn=- li=- udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=6 vc=559 vn=- li=- udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=559 vn=- li=- udi=2 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=559 vn=- li=- udi=- nc=1
n24n        ardbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72004d70] bci=[-1,14,558] rc=6 vc=559 vn=- li=- udi=- nc=1
n193n         ==>aRegLoad
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=559 vn=- li=- udi=3 nc=1 flg=0x4
n193n       ==>aRegLoad
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=559 vn=- li=- udi=4 nc=1
n18n        ==>acall
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=559 vn=- li=- udi=- nc=2
n24n        ==>ardbari
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=559 vn=- li=- udi=5 nc=1
n24n        ==>ardbari
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=559 vn=- li=- udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=559 vn=- li=- udi=- nc=1 flg=0x1000
n193n         ==>aRegLoad
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=559 vn=- li=- udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=559 vn=- li=- udi=- nc=1
n33n          ==>irdbari
n194n     aRegStore ebx                                                                       [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=559 vn=- li=- udi=- nc=1
n18n        ==>acall
n195n     aRegStore r8d                                                                       [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=559 vn=- li=- udi=- nc=1
n24n        ==>ardbari
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=559 vn=- li=- udi=- nc=3 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x302
n198n       GlRegDeps ()                                                                      [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=559 vn=- li=- udi=- nc=5 flg=0x20
n196n         PassThrough r8                                                                  [0x7ffb72082d00] bci=[-1,14,558] rc=1 vc=559 vn=- li=- udi=- nc=1
n24n            ==>ardbari
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n197n         PassThrough rbx                                                                 [0x7ffb72082d50] bci=[-1,7,557] rc=1 vc=559 vn=- li=- udi=- nc=1
n18n            ==>acall
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=559 vn=- li=- udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=559 vn=- li=- udi=- nc=0
n70n      NULLCHK on n192n [#32]                                                              [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=559 vn=- li=- udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=559 vn=- li=- udi=- nc=1 flg=0x104
n192n         ==>aRegLoad
n199n     aRegStore edi                                                                       [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=559 vn=- li=- udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=3 vc=559 vn=- li=- udi=- nc=1 flg=0x4
n69n          ==>aloadi
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=559 vn=- li=- udi=6 nc=1 flg=0x4
n72n        ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=559 vn=- li=- udi=- nc=1
n203n       GlRegDeps ()                                                                      [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=559 vn=- li=- udi=- nc=6 flg=0x20
n200n         PassThrough rdi                                                                 [0x7ffb72082e40] bci=[-1,32,559] rc=1 vc=559 vn=- li=- udi=- nc=1
n72n            ==>aloadi
n201n         PassThrough r8                                                                  [0x7ffb72082e90] bci=[-1,14,558] rc=1 vc=559 vn=- li=- udi=- nc=1
n24n            ==>ardbari
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n202n         PassThrough rbx                                                                 [0x7ffb72082ee0] bci=[-1,7,557] rc=1 vc=559 vn=- li=- udi=- nc=1
n18n            ==>acall

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=559 vn=- li=- udi=- nc=1
n204n       GlRegDeps ()                                                                      [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=559 vn=- li=- udi=- nc=6 flg=0x20
n205n         aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=2 vc=559 vn=- li=- udi=- nc=0 flg=0x8000
n206n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=2 vc=559 vn=- li=- udi=- nc=0 flg=0x8000
n207n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083070] bci=[-1,35,559] rc=2 vc=559 vn=- li=- udi=- nc=0
n208n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720830c0] bci=[-1,35,559] rc=2 vc=559 vn=- li=- udi=- nc=0
n209n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=4 vc=559 vn=- li=- udi=- nc=0 flg=0x8104
n210n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=2 vc=559 vn=- li=- udi=- nc=0 flg=0x8000
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=559 vn=- li=- udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=559 vn=- li=- udi=- nc=1 flg=0x1000
n209n         ==>aRegLoad
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=559 vn=- li=- udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=559 vn=- li=- udi=- nc=5 flg=0x20
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n206n         ==>aRegLoad
n205n         ==>aRegLoad
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=559 vn=- li=- udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=559 vn=- li=- udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=559 vn=- li=- udi=- nc=1
n211n       GlRegDeps ()                                                                      [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=559 vn=- li=- udi=- nc=3 flg=0x20
n207n         ==>aRegLoad
n208n         ==>aRegLoad
n209n         ==>aRegLoad
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=559 vn=- li=- udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=559 vn=- li=- udi=- nc=1
n212n       GlRegDeps ()                                                                      [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=559 vn=- li=- udi=- nc=3 flg=0x20
n213n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083250] bci=[-1,51,564] rc=2 vc=559 vn=- li=- udi=- nc=0
n214n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720832a0] bci=[-1,51,564] rc=2 vc=559 vn=- li=- udi=- nc=0
n215n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=2 vc=559 vn=- li=- udi=- nc=0 flg=0x8004
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=559 vn=- li=- udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=4 vc=559 vn=- li=- udi=- nc=1
n215n         ==>aRegLoad
n217n     aRegStore ebx                                                                       [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=559 vn=- li=- udi=- nc=1
n76n        ==>acall
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=559 vn=- li=- udi=7 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=559 vn=- li=- udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=559 vn=- li=- udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=559 vn=- li=- udi=- nc=1
n219n       GlRegDeps ()                                                                      [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=559 vn=- li=- udi=- nc=3 flg=0x20
n213n         ==>aRegLoad
n214n         ==>aRegLoad
n218n         PassThrough rbx                                                                 [0x7ffb720833e0] bci=[-1,52,564] rc=1 vc=559 vn=- li=- udi=- nc=1
n76n            ==>acall
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=559 vn=- li=- udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=559 vn=- li=- udi=- nc=1
n220n       GlRegDeps ()                                                                      [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=559 vn=- li=- udi=- nc=5 flg=0x20
n221n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]             [0x7ffb720834d0] bci=[-1,27,559] rc=2 vc=559 vn=- li=- udi=- nc=0
n222n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083520] bci=[-1,27,559] rc=2 vc=559 vn=- li=- udi=- nc=0
n223n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]  [0x7ffb72083570] bci=[-1,27,559] rc=2 vc=559 vn=- li=- udi=- nc=0
n224n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720835c0] bci=[-1,27,559] rc=2 vc=559 vn=- li=- udi=- nc=0
n225n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083610] bci=[-1,27,559] rc=2 vc=559 vn=- li=- udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=559 vn=- li=- udi=8 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=3 vc=559 vn=- li=- udi=- nc=0 flg=0x2
n226n     aRegStore edi                                                                       [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=559 vn=- li=- udi=- nc=1
n60n        ==>aconst NULL
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=559 vn=- li=- udi=- nc=1
n228n       GlRegDeps ()                                                                      [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=559 vn=- li=- udi=- nc=6 flg=0x20
n227n         PassThrough rdi                                                                 [0x7ffb720836b0] bci=[-1,27,559] rc=1 vc=559 vn=- li=- udi=- nc=1
n60n            ==>aconst NULL
n221n         ==>aRegLoad
n222n         ==>aRegLoad
n223n         ==>aRegLoad
n224n         ==>aRegLoad
n225n         ==>aRegLoad
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=559 vn=- li=- udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=559 vn=- li=- udi=- nc=0
n95n      BBEnd </block_10> (cold)                                                            [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=559 vn=- li=- udi=- nc=0
n229n     BBStart <block_15> (freq 0) (extension of previous block) (cold)                    [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=559 vn=- li=- udi=- nc=0
n238n     aRegStore eax                                                                       [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=559 vn=- li=- udi=- nc=1
n237n       aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ]  [0x7ffb720839d0] bci=[-1,1,556] rc=2 vc=559 vn=- li=- udi=10 nc=0
n235n     aRegStore esi                                                                       [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=559 vn=- li=- udi=- nc=1
n234n       aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ]         [0x7ffb720838e0] bci=[-1,1,556] rc=2 vc=559 vn=- li=- udi=11 nc=0
n232n     aRegStore edx                                                                       [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=559 vn=- li=- udi=- nc=1
n231n       aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ]       [0x7ffb720837f0] bci=[-1,1,556] rc=2 vc=559 vn=- li=- udi=12 nc=0
n230n     BBEnd </block_15> (cold) =====                                                      [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=559 vn=- li=- udi=- nc=1
n240n       GlRegDeps ()                                                                      [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=559 vn=- li=- udi=- nc=3 flg=0x20
n233n         PassThrough rdx                                                                 [0x7ffb72083890] bci=[-1,1,556] rc=1 vc=559 vn=- li=- udi=- nc=1
n231n           ==>aload
n236n         PassThrough rsi                                                                 [0x7ffb72083980] bci=[-1,1,556] rc=1 vc=559 vn=- li=- udi=- nc=1
n234n           ==>aload
n239n         PassThrough rax                                                                 [0x7ffb72083a70] bci=[-1,1,556] rc=1 vc=559 vn=- li=- udi=- nc=1
n237n           ==>aload

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=559 vn=- li=- udi=- nc=1
n241n       GlRegDeps ()                                                                      [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=559 vn=- li=- udi=- nc=3 flg=0x20
n242n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=2 vc=559 vn=- li=- udi=- nc=0 flg=0x8000
n243n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=2 vc=559 vn=- li=- udi=- nc=0 flg=0x8000
n244n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0x40000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=2 vc=559 vn=- li=- udi=- nc=0 flg=0x8000
n123n     treetop                                                                             [0x7ffb72081630] bci=[-1,0,556] rc=0 vc=559 vn=- li=- udi=- nc=1
n122n       call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7ffb720815e0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=26 flg=0x20
n96n          loadaddr  vmThread[#379  MethodMeta] [flags 0x200 0x0 ]                         [0x7ffb72080dc0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0
n97n          iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080e10] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x204
n98n          aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=13 nc=0
n99n          iconst 360 (X!=0 X>=0 )                                                         [0x7ffb72080eb0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x104
n100n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080f00] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x204
n101n         aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                     [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=14 nc=0
n102n         iconst 361 (X!=0 X>=0 )                                                         [0x7ffb72080fa0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x104
n103n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72080ff0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x204
n104n         aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=15 nc=0
n105n         iconst 363 (X!=0 X>=0 )                                                         [0x7ffb72081090] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x104
n106n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720810e0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x204
n107n         aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                     [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=16 nc=0
n108n         iconst 367 (X!=0 X>=0 )                                                         [0x7ffb72081180] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x104
n109n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720811d0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x204
n244n         ==>aRegLoad
n111n         iconst 353 (X!=0 X>=0 )                                                         [0x7ffb72081270] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x104
n112n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720812c0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x204
n243n         ==>aRegLoad
n114n         iconst 354 (X!=0 X>=0 )                                                         [0x7ffb72081360] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x104
n115n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720813b0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x204
n242n         ==>aRegLoad
n117n         iconst 355 (X!=0 X>=0 )                                                         [0x7ffb72081450] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x104
n118n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb720814a0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x204
n119n         aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                         [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=17 nc=0
n120n         iconst 358 (X!=0 X>=0 )                                                         [0x7ffb72081540] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x104
n121n         iconst -1 (X!=0 X<=0 )                                                          [0x7ffb72081590] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0 flg=0x204
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=559 vn=- li=- udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=559 vn=- li=- udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=559 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 172, symRefCount = 394
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [14(10000) 3(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [14(9726) 12(785) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [15(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [15(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
        14 [0x7ffb72146cb0] BBStart at 0x7ffb720824e0, frequency = 9238
                 in        = [2(10000) ]
                 out       = [7(9726) ]
                 exception in  = []
                 exception out = []
        15 [0x7ffb72146f60] BBStart at 0x7ffb72083750, frequency = 0
                 in        = [10(0) ]
                 out       = [11(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 14(0x7ffb720e1c50) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 15(0x7ffb720e2070)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
               (0x7ffb720e1c50:0x7ffb720e1bf0)14 --> 7(0x7ffb72020800)
               (0x7ffb720e2070:0x7ffb720e2010)15 --> 11(0x7ffb720e0120)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
         14 [0x7ffb720e1bf0] Block
         15 [0x7ffb720e2010] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimize>
         No anchor found for load/store [00007FFB72080640]
         field at [00007FFB72080640] need not be compressed
         No anchor found for load/store [00007FFB72080550]
         field at [00007FFB72080550] need not be compressed
         Anchor found for load/store [00007FFB72004D70]
         No anchor found for load/store [00007FFB72080960]
         field at [00007FFB72080960] need not be compressed
         Anchor found for load/store [00007FFB72005590]
         successfully verified compressedRefs anchors
<codegen
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">
<LowerTrees>
</LowerTrees>
<trees
	title="Post Lower Trees"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Post Lower Trees: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=566 vn=- li=2 udi=- nc=1
n165n       GlRegDeps ()                                                                      [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=566 vn=- li=2 udi=- nc=3 flg=0x20
n166n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720823a0] bci=[-1,0,556] rc=3 vc=566 vn=- li=2 udi=- nc=0
n167n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720823f0] bci=[-1,0,556] rc=3 vc=566 vn=- li=2 udi=- nc=0
n168n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=4 vc=566 vn=- li=2 udi=- nc=0 flg=0x8104
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=566 vn=- li=2 udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=566 vn=- li=2 udi=- nc=1 flg=0x1000
n168n         ==>aRegLoad
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=566 vn=- li=2 udi=- nc=3 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=566 vn=- li=2 udi=- nc=0 flg=0x302
n169n       GlRegDeps ()                                                                      [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=566 vn=- li=2 udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n10n      BBEnd </block_2>                                                                    [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=566 vn=- li=2 udi=- nc=0
n170n     BBStart <block_14> (freq 9238) (extension of previous block)                        [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=566 vn=- li=14 udi=- nc=0
n171n     BBEnd </block_14> =====                                                             [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=566 vn=- li=14 udi=- nc=1
n175n       GlRegDeps ()                                                                      [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=566 vn=- li=14 udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=566 vn=- li=7 udi=- nc=1
n176n       GlRegDeps ()                                                                      [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n177n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082710] bci=[-1,42,562] rc=3 vc=566 vn=- li=7 udi=- nc=0
n178n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082760] bci=[-1,42,562] rc=3 vc=566 vn=- li=7 udi=- nc=0
n179n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=3 vc=566 vn=- li=7 udi=- nc=0 flg=0x8104
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=566 vn=- li=7 udi=- nc=1
n50n        l2a                                                                               [0x7ffb72005590] bci=[-1,43,562] rc=6 vc=566 vn=- li=7 udi=- nc=1
n294n         lshl (compressionSequence )                                                     [0x7ffb72084ba0] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=2 flg=0x800
n293n           iu2l                                                                          [0x7ffb72084b50] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=1
n292n             irdbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72084b00] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=1
n179n               ==>aRegLoad
n291n           iconst 3                                                                      [0x7ffb72084ab0] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=0
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=566 vn=- li=7 udi=- nc=2
n50n        ==>l2a
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=566 vn=- li=7 udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=566 vn=- li=7 udi=1 nc=1
n50n        ==>l2a
n181n     aRegStore ebx                                                                       [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=566 vn=- li=7 udi=- nc=1
n50n        ==>l2a
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n50n        ==>l2a
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=566 vn=- li=7 udi=- nc=0 flg=0x2
n183n       GlRegDeps ()                                                                      [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n179n         ==>aRegLoad
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=566 vn=- li=7 udi=- nc=1
n185n       GlRegDeps ()                                                                      [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n184n         PassThrough rbx                                                                 [0x7ffb72082940] bci=[-1,43,562] rc=1 vc=566 vn=- li=7 udi=- nc=1
n50n            ==>l2a

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=566 vn=- li=9 udi=- nc=1
n186n       GlRegDeps ()                                                                      [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=566 vn=- li=9 udi=- nc=3 flg=0x20
n187n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=2 vc=566 vn=- li=9 udi=- nc=0 flg=0x8000
n188n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=2 vc=566 vn=- li=9 udi=- nc=0 flg=0x8000
n189n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=3 vc=566 vn=- li=9 udi=- nc=0 flg=0x8100
n84n      ResolveAndNULLCHK on n189n [#32]                                                    [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=566 vn=- li=9 udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=566 vn=- li=9 udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=566 vn=- li=9 udi=- nc=1
n189n           ==>aRegLoad
n189n         ==>aRegLoad
n188n         ==>aRegLoad
n187n         ==>aRegLoad
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=566 vn=- li=9 udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=566 vn=- li=9 udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=566 vn=- li=3 udi=- nc=1
n190n       GlRegDeps ()                                                                      [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=566 vn=- li=3 udi=- nc=3 flg=0x20
n191n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082b70] bci=[-1,7,557] rc=3 vc=566 vn=- li=3 udi=- nc=0
n192n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=4 vc=566 vn=- li=3 udi=- nc=0 flg=0x8100
n193n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=6 vc=566 vn=- li=3 udi=- nc=0 flg=0x8104
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=566 vn=- li=3 udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=6 vc=566 vn=- li=3 udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=566 vn=- li=3 udi=2 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=- nc=1
n24n        l2a                                                                               [0x7ffb72004d70] bci=[-1,14,558] rc=6 vc=566 vn=- li=3 udi=- nc=1
n299n         lshl (compressionSequence )                                                     [0x7ffb72084d30] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=2 flg=0x800
n298n           iu2l                                                                          [0x7ffb72084ce0] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=1
n297n             irdbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72084c90] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=1
n193n               ==>aRegLoad
n296n           iconst 3                                                                      [0x7ffb72084c40] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=0
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=3 nc=1 flg=0x4
n193n       ==>aRegLoad
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=4 nc=1
n18n        ==>acall
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=- nc=2
n24n        ==>l2a
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=566 vn=- li=3 udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=566 vn=- li=3 udi=5 nc=1
n24n        ==>l2a
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=566 vn=- li=3 udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=566 vn=- li=3 udi=- nc=1 flg=0x1000
n193n         ==>aRegLoad
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=566 vn=- li=3 udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=566 vn=- li=3 udi=- nc=1
n33n          ==>irdbari
n194n     aRegStore ebx                                                                       [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=566 vn=- li=3 udi=- nc=1
n18n        ==>acall
n195n     aRegStore r8d                                                                       [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=- nc=1
n24n        ==>l2a
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=566 vn=- li=3 udi=- nc=3 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=566 vn=- li=3 udi=- nc=0 flg=0x302
n198n       GlRegDeps ()                                                                      [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=566 vn=- li=3 udi=- nc=5 flg=0x20
n196n         PassThrough r8                                                                  [0x7ffb72082d00] bci=[-1,14,558] rc=1 vc=566 vn=- li=3 udi=- nc=1
n24n            ==>l2a
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n197n         PassThrough rbx                                                                 [0x7ffb72082d50] bci=[-1,7,557] rc=1 vc=566 vn=- li=3 udi=- nc=1
n18n            ==>acall
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=566 vn=- li=3 udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=566 vn=- li=5 udi=- nc=0
n70n      NULLCHK on n192n [#32]                                                              [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=566 vn=- li=5 udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=566 vn=- li=5 udi=- nc=1 flg=0x104
n192n         ==>aRegLoad
n199n     aRegStore edi                                                                       [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=566 vn=- li=5 udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=3 vc=566 vn=- li=5 udi=- nc=1 flg=0x4
n69n          ==>aloadi
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=566 vn=- li=5 udi=6 nc=1 flg=0x4
n72n        ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=566 vn=- li=5 udi=- nc=1
n203n       GlRegDeps ()                                                                      [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=566 vn=- li=5 udi=- nc=6 flg=0x20
n200n         PassThrough rdi                                                                 [0x7ffb72082e40] bci=[-1,32,559] rc=1 vc=566 vn=- li=5 udi=- nc=1
n72n            ==>aloadi
n201n         PassThrough r8                                                                  [0x7ffb72082e90] bci=[-1,14,558] rc=1 vc=566 vn=- li=5 udi=- nc=1
n24n            ==>l2a
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n202n         PassThrough rbx                                                                 [0x7ffb72082ee0] bci=[-1,7,557] rc=1 vc=566 vn=- li=5 udi=- nc=1
n18n            ==>acall

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=566 vn=- li=6 udi=- nc=1
n204n       GlRegDeps ()                                                                      [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=566 vn=- li=6 udi=- nc=6 flg=0x20
n205n         aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=2 vc=566 vn=- li=6 udi=- nc=0 flg=0x8000
n206n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=2 vc=566 vn=- li=6 udi=- nc=0 flg=0x8000
n207n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083070] bci=[-1,35,559] rc=2 vc=566 vn=- li=6 udi=- nc=0
n208n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720830c0] bci=[-1,35,559] rc=2 vc=566 vn=- li=6 udi=- nc=0
n209n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=4 vc=566 vn=- li=6 udi=- nc=0 flg=0x8104
n210n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=2 vc=566 vn=- li=6 udi=- nc=0 flg=0x8000
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=566 vn=- li=6 udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=566 vn=- li=6 udi=- nc=1 flg=0x1000
n209n         ==>aRegLoad
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=566 vn=- li=6 udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=566 vn=- li=6 udi=- nc=5 flg=0x20
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n206n         ==>aRegLoad
n205n         ==>aRegLoad
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=566 vn=- li=6 udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=566 vn=- li=12 udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=566 vn=- li=12 udi=- nc=1
n211n       GlRegDeps ()                                                                      [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=566 vn=- li=12 udi=- nc=3 flg=0x20
n207n         ==>aRegLoad
n208n         ==>aRegLoad
n209n         ==>aRegLoad
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=566 vn=- li=12 udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=566 vn=- li=8 udi=- nc=1
n212n       GlRegDeps ()                                                                      [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=566 vn=- li=8 udi=- nc=3 flg=0x20
n213n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083250] bci=[-1,51,564] rc=2 vc=566 vn=- li=8 udi=- nc=0
n214n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720832a0] bci=[-1,51,564] rc=2 vc=566 vn=- li=8 udi=- nc=0
n215n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=2 vc=566 vn=- li=8 udi=- nc=0 flg=0x8004
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=566 vn=- li=8 udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=4 vc=566 vn=- li=8 udi=- nc=1
n215n         ==>aRegLoad
n217n     aRegStore ebx                                                                       [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=566 vn=- li=8 udi=- nc=1
n76n        ==>acall
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=566 vn=- li=8 udi=7 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=566 vn=- li=8 udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=566 vn=- li=13 udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=566 vn=- li=13 udi=- nc=1
n219n       GlRegDeps ()                                                                      [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=566 vn=- li=13 udi=- nc=3 flg=0x20
n213n         ==>aRegLoad
n214n         ==>aRegLoad
n218n         PassThrough rbx                                                                 [0x7ffb720833e0] bci=[-1,52,564] rc=1 vc=566 vn=- li=13 udi=- nc=1
n76n            ==>acall
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=566 vn=- li=13 udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=566 vn=- li=4 udi=- nc=1
n220n       GlRegDeps ()                                                                      [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=566 vn=- li=4 udi=- nc=5 flg=0x20
n221n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]             [0x7ffb720834d0] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n222n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083520] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n223n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083570] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n224n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720835c0] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n225n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083610] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=566 vn=- li=4 udi=8 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=3 vc=566 vn=- li=4 udi=- nc=0 flg=0x2
n226n     aRegStore edi                                                                       [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=566 vn=- li=4 udi=- nc=1
n60n        ==>aconst NULL
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=566 vn=- li=4 udi=- nc=1
n228n       GlRegDeps ()                                                                      [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=566 vn=- li=4 udi=- nc=6 flg=0x20
n227n         PassThrough rdi                                                                 [0x7ffb720836b0] bci=[-1,27,559] rc=1 vc=566 vn=- li=4 udi=- nc=1
n60n            ==>aconst NULL
n221n         ==>aRegLoad
n222n         ==>aRegLoad
n223n         ==>aRegLoad
n224n         ==>aRegLoad
n225n         ==>aRegLoad
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=566 vn=- li=4 udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=566 vn=- li=10 udi=- nc=0
n95n      BBEnd </block_10> (cold)                                                            [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=566 vn=- li=10 udi=- nc=0
n229n     BBStart <block_15> (freq 0) (extension of previous block) (cold)                    [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=0
n238n     aRegStore eax                                                                       [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n237n       aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720839d0] bci=[-1,1,556] rc=2 vc=566 vn=- li=15 udi=10 nc=0
n235n     aRegStore esi                                                                       [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n234n       aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]         [0x7ffb720838e0] bci=[-1,1,556] rc=2 vc=566 vn=- li=15 udi=11 nc=0
n232n     aRegStore edx                                                                       [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n231n       aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]       [0x7ffb720837f0] bci=[-1,1,556] rc=2 vc=566 vn=- li=15 udi=12 nc=0
n230n     BBEnd </block_15> (cold) =====                                                      [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n240n       GlRegDeps ()                                                                      [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=3 flg=0x20
n233n         PassThrough rdx                                                                 [0x7ffb72083890] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=1
n231n           ==>aload
n236n         PassThrough rsi                                                                 [0x7ffb72083980] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=1
n234n           ==>aload
n239n         PassThrough rax                                                                 [0x7ffb72083a70] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=1
n237n           ==>aload

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=566 vn=- li=11 udi=- nc=1
n241n       GlRegDeps ()                                                                      [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=566 vn=- li=11 udi=- nc=3 flg=0x20
n242n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=2 vc=566 vn=- li=11 udi=- nc=0 flg=0x8000
n243n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=2 vc=566 vn=- li=11 udi=- nc=0 flg=0x8000
n244n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=2 vc=566 vn=- li=11 udi=- nc=0 flg=0x8000
n252n     astorei  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72083e80] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n251n       aladd                                                                             [0x7ffb72083e30] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         aload  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]                   [0x7ffb72083c50] bci=[-1,0,556] rc=8 vc=566 vn=- li=11 udi=- nc=0
n250n         i2l                                                                             [0x7ffb72083de0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n249n           iadd                                                                          [0x7ffb72083d90] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             iload  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]              [0x7ffb72083ca0] bci=[-1,0,556] rc=9 vc=566 vn=- li=11 udi=- nc=0
n248n             iconst 88                                                                   [0x7ffb72083d40] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n98n        aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                       [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=13 nc=0
n257n     astorei  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084010] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n256n       aladd                                                                             [0x7ffb72083fc0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n255n         i2l                                                                             [0x7ffb72083f70] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n254n           iadd                                                                          [0x7ffb72083f20] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n253n             iconst 80                                                                   [0x7ffb72083ed0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n101n       aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                       [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=14 nc=0
n262n     astorei  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720841a0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n261n       aladd                                                                             [0x7ffb72084150] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n260n         i2l                                                                             [0x7ffb72084100] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n259n           iadd                                                                          [0x7ffb720840b0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n258n             iconst 72                                                                   [0x7ffb72084060] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n104n       aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                       [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=15 nc=0
n267n     astorei  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084330] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n266n       aladd                                                                             [0x7ffb720842e0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n265n         i2l                                                                             [0x7ffb72084290] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n264n           iadd                                                                          [0x7ffb72084240] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n263n             iconst 64                                                                   [0x7ffb720841f0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n107n       aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                       [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=16 nc=0
n272n     astorei  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720844c0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n271n       aladd                                                                             [0x7ffb72084470] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n270n         i2l                                                                             [0x7ffb72084420] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n269n           iadd                                                                          [0x7ffb720843d0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n268n             iconst 120                                                                  [0x7ffb72084380] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n244n       ==>aRegLoad
n277n     astorei  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084650] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n276n       aladd                                                                             [0x7ffb72084600] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n275n         i2l                                                                             [0x7ffb720845b0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n274n           iadd                                                                          [0x7ffb72084560] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n273n             iconst 112                                                                  [0x7ffb72084510] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n243n       ==>aRegLoad
n282n     astorei  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720847e0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n281n       aladd                                                                             [0x7ffb72084790] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n280n         i2l                                                                             [0x7ffb72084740] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n279n           iadd                                                                          [0x7ffb720846f0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n278n             iconst 104                                                                  [0x7ffb720846a0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n242n       ==>aRegLoad
n287n     astorei  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084970] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n286n       aladd                                                                             [0x7ffb72084920] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n285n         i2l                                                                             [0x7ffb720848d0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n284n           iadd                                                                          [0x7ffb72084880] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n283n             iconst 96                                                                   [0x7ffb72084830] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n119n       aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=17 nc=0
n290n     istore  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]                     [0x7ffb72084a60] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=1
n289n       iadd                                                                              [0x7ffb72084a10] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n         ==>iload
n288n         iconst 128                                                                      [0x7ffb720849c0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=566 vn=- li=11 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Symbol References (incremental):
--------------------------------
#394:  <generic int shadow>[ Shadow] [flags 0x603 0x0 ] [0x7ffb7213f010] (Int32)
#395:  <generic int shadow>[ Shadow] [flags 0x603 0x0 ] [0x7ffb7213f010] (Int32)
#396:  <generic int shadow>[ Shadow] [flags 0x603 0x0 ] [0x7ffb7213f010] (Int32)
#397:  <generic int shadow>[ Shadow] [flags 0x603 0x0 ] [0x7ffb7213f010] (Int32)
#398:  <generic int shadow>[ Shadow] [flags 0x603 0x0 ] [0x7ffb7213f010] (Int32)
#399:  <generic int shadow>[ Shadow] [flags 0x603 0x0 ] [0x7ffb7213f010] (Int32)
#400:  <generic int shadow>[ Shadow] [flags 0x603 0x0 ] [0x7ffb7213f010] (Int32)
#401:  <generic int shadow>[ Shadow] [flags 0x603 0x0 ] [0x7ffb7213f010] (Int32)

Number of nodes = 205, symRefCount = 402
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [14(10000) 3(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [14(9726) 12(785) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [15(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [15(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
        14 [0x7ffb72146cb0] BBStart at 0x7ffb720824e0, frequency = 9238
                 in        = [2(10000) ]
                 out       = [7(9726) ]
                 exception in  = []
                 exception out = []
        15 [0x7ffb72146f60] BBStart at 0x7ffb72083750, frequency = 0
                 in        = [10(0) ]
                 out       = [11(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 14(0x7ffb720e1c50) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 15(0x7ffb720e2070)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
               (0x7ffb720e1c50:0x7ffb720e1bf0)14 --> 7(0x7ffb72020800)
               (0x7ffb720e2070:0x7ffb720e2010)15 --> 11(0x7ffb720e0120)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
         14 [0x7ffb720e1bf0] Block
         15 [0x7ffb720e2010] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
The compressedrefs remat opt is disabled because field watch is enabled
<AllocateLinkageRegisters>
           Parm 2 has RegLoad 0x7ffb720823a0
           Parm 1 has RegLoad 0x7ffb720823f0
           Parm 0 has RegLoad 0x7ffb72082440
           Initial globalRegsWithRegLoad: {3, 4, 5}         
</AllocateLinkageRegisters>
[    41] O^O CODE GENERATION:  ===>   Identify and mark Unneeded b2i/i2b conversions  <===
<trees
	title="Pre Uncommon Call Constant Node Trees"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Pre Uncommon Call Constant Node Trees: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=566 vn=- li=2 udi=- nc=1
n165n       GlRegDeps ()                                                                      [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=566 vn=- li=2 udi=- nc=3 flg=0x20
n166n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720823a0] bci=[-1,0,556] rc=3 vc=567 vn=- li=2 udi=- nc=0
n167n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720823f0] bci=[-1,0,556] rc=3 vc=567 vn=- li=2 udi=- nc=0
n168n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=4 vc=567 vn=- li=2 udi=- nc=0 flg=0x8104
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=567 vn=- li=2 udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=567 vn=- li=2 udi=- nc=1 flg=0x1000
n168n         ==>aRegLoad
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=568 vn=- li=2 udi=- nc=3 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=568 vn=- li=2 udi=- nc=0 flg=0x302
n169n       GlRegDeps ()                                                                      [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=568 vn=- li=2 udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n10n      BBEnd </block_2>                                                                    [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=567 vn=- li=2 udi=- nc=0
n170n     BBStart <block_14> (freq 9238) (extension of previous block)                        [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=567 vn=- li=14 udi=- nc=0
n171n     BBEnd </block_14> =====                                                             [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=567 vn=- li=14 udi=- nc=1
n175n       GlRegDeps ()                                                                      [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=567 vn=- li=14 udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=566 vn=- li=7 udi=- nc=1
n176n       GlRegDeps ()                                                                      [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n177n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082710] bci=[-1,42,562] rc=3 vc=566 vn=- li=7 udi=- nc=0
n178n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082760] bci=[-1,42,562] rc=3 vc=566 vn=- li=7 udi=- nc=0
n179n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=3 vc=566 vn=- li=7 udi=- nc=0 flg=0x8104
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=566 vn=- li=7 udi=- nc=1
n50n        l2a                                                                               [0x7ffb72005590] bci=[-1,43,562] rc=6 vc=566 vn=- li=7 udi=- nc=1
n294n         lshl (compressionSequence )                                                     [0x7ffb72084ba0] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=2 flg=0x800
n293n           iu2l                                                                          [0x7ffb72084b50] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=1
n292n             irdbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72084b00] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=1
n179n               ==>aRegLoad
n291n           iconst 3                                                                      [0x7ffb72084ab0] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=0
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=566 vn=- li=7 udi=- nc=2
n50n        ==>l2a
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=566 vn=- li=7 udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=566 vn=- li=7 udi=1 nc=1
n50n        ==>l2a
n181n     aRegStore ebx                                                                       [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=566 vn=- li=7 udi=- nc=1
n50n        ==>l2a
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n50n        ==>l2a
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=566 vn=- li=7 udi=- nc=0 flg=0x2
n183n       GlRegDeps ()                                                                      [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n179n         ==>aRegLoad
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=566 vn=- li=7 udi=- nc=1
n185n       GlRegDeps ()                                                                      [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n184n         PassThrough rbx                                                                 [0x7ffb72082940] bci=[-1,43,562] rc=1 vc=566 vn=- li=7 udi=- nc=1
n50n            ==>l2a

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=566 vn=- li=9 udi=- nc=1
n186n       GlRegDeps ()                                                                      [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=566 vn=- li=9 udi=- nc=3 flg=0x20
n187n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=2 vc=566 vn=- li=9 udi=- nc=0 flg=0x8000
n188n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=2 vc=566 vn=- li=9 udi=- nc=0 flg=0x8000
n189n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=3 vc=566 vn=- li=9 udi=- nc=0 flg=0x8100
n84n      ResolveAndNULLCHK on n189n [#32]                                                    [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=566 vn=- li=9 udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=566 vn=- li=9 udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=566 vn=- li=9 udi=- nc=1
n189n           ==>aRegLoad
n189n         ==>aRegLoad
n188n         ==>aRegLoad
n187n         ==>aRegLoad
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=566 vn=- li=9 udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=566 vn=- li=9 udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=566 vn=- li=3 udi=- nc=1
n190n       GlRegDeps ()                                                                      [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=566 vn=- li=3 udi=- nc=3 flg=0x20
n191n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082b70] bci=[-1,7,557] rc=3 vc=566 vn=- li=3 udi=- nc=0
n192n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=4 vc=566 vn=- li=3 udi=- nc=0 flg=0x8100
n193n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=6 vc=566 vn=- li=3 udi=- nc=0 flg=0x8104
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=566 vn=- li=3 udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=6 vc=566 vn=- li=3 udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=566 vn=- li=3 udi=2 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=- nc=1
n24n        l2a                                                                               [0x7ffb72004d70] bci=[-1,14,558] rc=6 vc=566 vn=- li=3 udi=- nc=1
n299n         lshl (compressionSequence )                                                     [0x7ffb72084d30] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=2 flg=0x800
n298n           iu2l                                                                          [0x7ffb72084ce0] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=1
n297n             irdbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72084c90] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=1
n193n               ==>aRegLoad
n296n           iconst 3                                                                      [0x7ffb72084c40] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=0
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=3 nc=1 flg=0x4
n193n       ==>aRegLoad
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=4 nc=1
n18n        ==>acall
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=- nc=2
n24n        ==>l2a
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=566 vn=- li=3 udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=566 vn=- li=3 udi=5 nc=1
n24n        ==>l2a
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=566 vn=- li=3 udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=566 vn=- li=3 udi=- nc=1 flg=0x1000
n193n         ==>aRegLoad
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=566 vn=- li=3 udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=566 vn=- li=3 udi=- nc=1
n33n          ==>irdbari
n194n     aRegStore ebx                                                                       [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=566 vn=- li=3 udi=- nc=1
n18n        ==>acall
n195n     aRegStore r8d                                                                       [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=- nc=1
n24n        ==>l2a
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=568 vn=- li=3 udi=- nc=3 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=568 vn=- li=3 udi=- nc=0 flg=0x302
n198n       GlRegDeps ()                                                                      [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=568 vn=- li=3 udi=- nc=5 flg=0x20
n196n         PassThrough r8                                                                  [0x7ffb72082d00] bci=[-1,14,558] rc=1 vc=566 vn=- li=3 udi=- nc=1
n24n            ==>l2a
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n197n         PassThrough rbx                                                                 [0x7ffb72082d50] bci=[-1,7,557] rc=1 vc=566 vn=- li=3 udi=- nc=1
n18n            ==>acall
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=566 vn=- li=3 udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=566 vn=- li=5 udi=- nc=0
n70n      NULLCHK on n192n [#32]                                                              [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=566 vn=- li=5 udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=566 vn=- li=5 udi=- nc=1 flg=0x104
n192n         ==>aRegLoad
n199n     aRegStore edi                                                                       [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=566 vn=- li=5 udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=3 vc=566 vn=- li=5 udi=- nc=1 flg=0x4
n69n          ==>aloadi
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=566 vn=- li=5 udi=6 nc=1 flg=0x4
n72n        ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=566 vn=- li=5 udi=- nc=1
n203n       GlRegDeps ()                                                                      [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=566 vn=- li=5 udi=- nc=6 flg=0x20
n200n         PassThrough rdi                                                                 [0x7ffb72082e40] bci=[-1,32,559] rc=1 vc=566 vn=- li=5 udi=- nc=1
n72n            ==>aloadi
n201n         PassThrough r8                                                                  [0x7ffb72082e90] bci=[-1,14,558] rc=1 vc=566 vn=- li=5 udi=- nc=1
n24n            ==>l2a
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n202n         PassThrough rbx                                                                 [0x7ffb72082ee0] bci=[-1,7,557] rc=1 vc=566 vn=- li=5 udi=- nc=1
n18n            ==>acall

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=566 vn=- li=6 udi=- nc=1
n204n       GlRegDeps ()                                                                      [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=566 vn=- li=6 udi=- nc=6 flg=0x20
n205n         aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=2 vc=566 vn=- li=6 udi=- nc=0 flg=0x8000
n206n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=2 vc=566 vn=- li=6 udi=- nc=0 flg=0x8000
n207n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083070] bci=[-1,35,559] rc=2 vc=566 vn=- li=6 udi=- nc=0
n208n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720830c0] bci=[-1,35,559] rc=2 vc=566 vn=- li=6 udi=- nc=0
n209n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=4 vc=566 vn=- li=6 udi=- nc=0 flg=0x8104
n210n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=2 vc=566 vn=- li=6 udi=- nc=0 flg=0x8000
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=566 vn=- li=6 udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=566 vn=- li=6 udi=- nc=1 flg=0x1000
n209n         ==>aRegLoad
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=566 vn=- li=6 udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=566 vn=- li=6 udi=- nc=5 flg=0x20
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n206n         ==>aRegLoad
n205n         ==>aRegLoad
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=566 vn=- li=6 udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=566 vn=- li=12 udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=566 vn=- li=12 udi=- nc=1
n211n       GlRegDeps ()                                                                      [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=566 vn=- li=12 udi=- nc=3 flg=0x20
n207n         ==>aRegLoad
n208n         ==>aRegLoad
n209n         ==>aRegLoad
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=566 vn=- li=12 udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=566 vn=- li=8 udi=- nc=1
n212n       GlRegDeps ()                                                                      [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=566 vn=- li=8 udi=- nc=3 flg=0x20
n213n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083250] bci=[-1,51,564] rc=2 vc=566 vn=- li=8 udi=- nc=0
n214n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720832a0] bci=[-1,51,564] rc=2 vc=566 vn=- li=8 udi=- nc=0
n215n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=2 vc=566 vn=- li=8 udi=- nc=0 flg=0x8004
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=566 vn=- li=8 udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=4 vc=566 vn=- li=8 udi=- nc=1
n215n         ==>aRegLoad
n217n     aRegStore ebx                                                                       [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=566 vn=- li=8 udi=- nc=1
n76n        ==>acall
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=566 vn=- li=8 udi=7 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=566 vn=- li=8 udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=566 vn=- li=13 udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=566 vn=- li=13 udi=- nc=1
n219n       GlRegDeps ()                                                                      [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=566 vn=- li=13 udi=- nc=3 flg=0x20
n213n         ==>aRegLoad
n214n         ==>aRegLoad
n218n         PassThrough rbx                                                                 [0x7ffb720833e0] bci=[-1,52,564] rc=1 vc=566 vn=- li=13 udi=- nc=1
n76n            ==>acall
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=566 vn=- li=13 udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=566 vn=- li=4 udi=- nc=1
n220n       GlRegDeps ()                                                                      [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=566 vn=- li=4 udi=- nc=5 flg=0x20
n221n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]             [0x7ffb720834d0] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n222n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083520] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n223n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083570] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n224n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720835c0] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n225n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083610] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=566 vn=- li=4 udi=8 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=3 vc=566 vn=- li=4 udi=- nc=0 flg=0x2
n226n     aRegStore edi                                                                       [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=566 vn=- li=4 udi=- nc=1
n60n        ==>aconst NULL
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=566 vn=- li=4 udi=- nc=1
n228n       GlRegDeps ()                                                                      [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=566 vn=- li=4 udi=- nc=6 flg=0x20
n227n         PassThrough rdi                                                                 [0x7ffb720836b0] bci=[-1,27,559] rc=1 vc=566 vn=- li=4 udi=- nc=1
n60n            ==>aconst NULL
n221n         ==>aRegLoad
n222n         ==>aRegLoad
n223n         ==>aRegLoad
n224n         ==>aRegLoad
n225n         ==>aRegLoad
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=566 vn=- li=4 udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=566 vn=- li=10 udi=- nc=0
n95n      BBEnd </block_10> (cold)                                                            [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=566 vn=- li=10 udi=- nc=0
n229n     BBStart <block_15> (freq 0) (extension of previous block) (cold)                    [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=0
n238n     aRegStore eax                                                                       [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n237n       aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720839d0] bci=[-1,1,556] rc=2 vc=566 vn=- li=15 udi=10 nc=0
n235n     aRegStore esi                                                                       [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n234n       aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]         [0x7ffb720838e0] bci=[-1,1,556] rc=2 vc=566 vn=- li=15 udi=11 nc=0
n232n     aRegStore edx                                                                       [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n231n       aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]       [0x7ffb720837f0] bci=[-1,1,556] rc=2 vc=566 vn=- li=15 udi=12 nc=0
n230n     BBEnd </block_15> (cold) =====                                                      [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n240n       GlRegDeps ()                                                                      [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=3 flg=0x20
n233n         PassThrough rdx                                                                 [0x7ffb72083890] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=1
n231n           ==>aload
n236n         PassThrough rsi                                                                 [0x7ffb72083980] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=1
n234n           ==>aload
n239n         PassThrough rax                                                                 [0x7ffb72083a70] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=1
n237n           ==>aload

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=566 vn=- li=11 udi=- nc=1
n241n       GlRegDeps ()                                                                      [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=566 vn=- li=11 udi=- nc=3 flg=0x20
n242n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=2 vc=566 vn=- li=11 udi=- nc=0 flg=0x8000
n243n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=2 vc=566 vn=- li=11 udi=- nc=0 flg=0x8000
n244n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=2 vc=566 vn=- li=11 udi=- nc=0 flg=0x8000
n252n     astorei  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72083e80] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n251n       aladd                                                                             [0x7ffb72083e30] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         aload  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]                   [0x7ffb72083c50] bci=[-1,0,556] rc=8 vc=566 vn=- li=11 udi=- nc=0
n250n         i2l                                                                             [0x7ffb72083de0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n249n           iadd                                                                          [0x7ffb72083d90] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             iload  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]              [0x7ffb72083ca0] bci=[-1,0,556] rc=9 vc=566 vn=- li=11 udi=- nc=0
n248n             iconst 88                                                                   [0x7ffb72083d40] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n98n        aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                       [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=13 nc=0
n257n     astorei  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084010] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n256n       aladd                                                                             [0x7ffb72083fc0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n255n         i2l                                                                             [0x7ffb72083f70] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n254n           iadd                                                                          [0x7ffb72083f20] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n253n             iconst 80                                                                   [0x7ffb72083ed0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n101n       aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                       [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=14 nc=0
n262n     astorei  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720841a0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n261n       aladd                                                                             [0x7ffb72084150] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n260n         i2l                                                                             [0x7ffb72084100] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n259n           iadd                                                                          [0x7ffb720840b0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n258n             iconst 72                                                                   [0x7ffb72084060] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n104n       aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                       [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=15 nc=0
n267n     astorei  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084330] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n266n       aladd                                                                             [0x7ffb720842e0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n265n         i2l                                                                             [0x7ffb72084290] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n264n           iadd                                                                          [0x7ffb72084240] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n263n             iconst 64                                                                   [0x7ffb720841f0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n107n       aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                       [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=16 nc=0
n272n     astorei  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720844c0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n271n       aladd                                                                             [0x7ffb72084470] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n270n         i2l                                                                             [0x7ffb72084420] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n269n           iadd                                                                          [0x7ffb720843d0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n268n             iconst 120                                                                  [0x7ffb72084380] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n244n       ==>aRegLoad
n277n     astorei  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084650] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n276n       aladd                                                                             [0x7ffb72084600] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n275n         i2l                                                                             [0x7ffb720845b0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n274n           iadd                                                                          [0x7ffb72084560] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n273n             iconst 112                                                                  [0x7ffb72084510] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n243n       ==>aRegLoad
n282n     astorei  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720847e0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n281n       aladd                                                                             [0x7ffb72084790] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n280n         i2l                                                                             [0x7ffb72084740] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n279n           iadd                                                                          [0x7ffb720846f0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n278n             iconst 104                                                                  [0x7ffb720846a0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n242n       ==>aRegLoad
n287n     astorei  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084970] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n286n       aladd                                                                             [0x7ffb72084920] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n285n         i2l                                                                             [0x7ffb720848d0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n284n           iadd                                                                          [0x7ffb72084880] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n283n             iconst 96                                                                   [0x7ffb72084830] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n119n       aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=17 nc=0
n290n     istore  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]                     [0x7ffb72084a60] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=1
n289n       iadd                                                                              [0x7ffb72084a10] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n         ==>iload
n288n         iconst 128                                                                      [0x7ffb720849c0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=566 vn=- li=11 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 205, symRefCount = 402
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [14(10000) 3(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [14(9726) 12(785) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [15(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [15(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
        14 [0x7ffb72146cb0] BBStart at 0x7ffb720824e0, frequency = 9238
                 in        = [2(10000) ]
                 out       = [7(9726) ]
                 exception in  = []
                 exception out = []
        15 [0x7ffb72146f60] BBStart at 0x7ffb72083750, frequency = 0
                 in        = [10(0) ]
                 out       = [11(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 14(0x7ffb720e1c50) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 15(0x7ffb720e2070)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
               (0x7ffb720e1c50:0x7ffb720e1bf0)14 --> 7(0x7ffb72020800)
               (0x7ffb720e2070:0x7ffb720e2010)15 --> 11(0x7ffb720e0120)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
         14 [0x7ffb720e1bf0] Block
         15 [0x7ffb720e2010] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
Performing uncommon call constant nodes
Skipping previously visited call node 83
Skipping previously visited call node 18
Skipping previously visited call node 18
Skipping previously visited call node 18
Skipping previously visited call node 37
Skipping previously visited call node 76
Skipping previously visited call node 76
<trees
	title="Post Uncommon Call Constant Node Trees"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Post Uncommon Call Constant Node Trees: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=566 vn=- li=2 udi=- nc=1
n165n       GlRegDeps ()                                                                      [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=566 vn=- li=2 udi=- nc=3 flg=0x20
n166n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720823a0] bci=[-1,0,556] rc=3 vc=567 vn=- li=2 udi=- nc=0
n167n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720823f0] bci=[-1,0,556] rc=3 vc=567 vn=- li=2 udi=- nc=0
n168n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=4 vc=567 vn=- li=2 udi=- nc=0 flg=0x8104
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=567 vn=- li=2 udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=567 vn=- li=2 udi=- nc=1 flg=0x1000
n168n         ==>aRegLoad
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=568 vn=- li=2 udi=- nc=3 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=568 vn=- li=2 udi=- nc=0 flg=0x302
n169n       GlRegDeps ()                                                                      [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=568 vn=- li=2 udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n10n      BBEnd </block_2>                                                                    [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=567 vn=- li=2 udi=- nc=0
n170n     BBStart <block_14> (freq 9238) (extension of previous block)                        [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=567 vn=- li=14 udi=- nc=0
n171n     BBEnd </block_14> =====                                                             [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=567 vn=- li=14 udi=- nc=1
n175n       GlRegDeps ()                                                                      [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=567 vn=- li=14 udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=566 vn=- li=7 udi=- nc=1
n176n       GlRegDeps ()                                                                      [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n177n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082710] bci=[-1,42,562] rc=3 vc=566 vn=- li=7 udi=- nc=0
n178n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082760] bci=[-1,42,562] rc=3 vc=566 vn=- li=7 udi=- nc=0
n179n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=3 vc=566 vn=- li=7 udi=- nc=0 flg=0x8104
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=566 vn=- li=7 udi=- nc=1
n50n        l2a                                                                               [0x7ffb72005590] bci=[-1,43,562] rc=6 vc=566 vn=- li=7 udi=- nc=1
n294n         lshl (compressionSequence )                                                     [0x7ffb72084ba0] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=2 flg=0x800
n293n           iu2l                                                                          [0x7ffb72084b50] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=1
n292n             irdbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72084b00] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=1
n179n               ==>aRegLoad
n291n           iconst 3                                                                      [0x7ffb72084ab0] bci=[-1,43,562] rc=1 vc=0 vn=- li=- udi=- nc=0
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=566 vn=- li=7 udi=- nc=2
n50n        ==>l2a
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=566 vn=- li=7 udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=566 vn=- li=7 udi=1 nc=1
n50n        ==>l2a
n181n     aRegStore ebx                                                                       [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=566 vn=- li=7 udi=- nc=1
n50n        ==>l2a
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n50n        ==>l2a
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=566 vn=- li=7 udi=- nc=0 flg=0x2
n183n       GlRegDeps ()                                                                      [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n179n         ==>aRegLoad
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=566 vn=- li=7 udi=- nc=1
n185n       GlRegDeps ()                                                                      [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=566 vn=- li=7 udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n184n         PassThrough rbx                                                                 [0x7ffb72082940] bci=[-1,43,562] rc=1 vc=566 vn=- li=7 udi=- nc=1
n50n            ==>l2a

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=566 vn=- li=9 udi=- nc=1
n186n       GlRegDeps ()                                                                      [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=566 vn=- li=9 udi=- nc=3 flg=0x20
n187n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=2 vc=566 vn=- li=9 udi=- nc=0 flg=0x8000
n188n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=2 vc=566 vn=- li=9 udi=- nc=0 flg=0x8000
n189n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=3 vc=566 vn=- li=9 udi=- nc=0 flg=0x8100
n84n      ResolveAndNULLCHK on n189n [#32]                                                    [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=566 vn=- li=9 udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=566 vn=- li=9 udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=566 vn=- li=9 udi=- nc=1
n189n           ==>aRegLoad
n189n         ==>aRegLoad
n188n         ==>aRegLoad
n187n         ==>aRegLoad
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=566 vn=- li=9 udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=566 vn=- li=9 udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=566 vn=- li=3 udi=- nc=1
n190n       GlRegDeps ()                                                                      [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=566 vn=- li=3 udi=- nc=3 flg=0x20
n191n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082b70] bci=[-1,7,557] rc=3 vc=566 vn=- li=3 udi=- nc=0
n192n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=4 vc=566 vn=- li=3 udi=- nc=0 flg=0x8100
n193n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=6 vc=566 vn=- li=3 udi=- nc=0 flg=0x8104
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=566 vn=- li=3 udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=6 vc=566 vn=- li=3 udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=566 vn=- li=3 udi=2 nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=- nc=1
n24n        l2a                                                                               [0x7ffb72004d70] bci=[-1,14,558] rc=6 vc=566 vn=- li=3 udi=- nc=1
n299n         lshl (compressionSequence )                                                     [0x7ffb72084d30] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=2 flg=0x800
n298n           iu2l                                                                          [0x7ffb72084ce0] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=1
n297n             irdbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72084c90] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=1
n193n               ==>aRegLoad
n296n           iconst 3                                                                      [0x7ffb72084c40] bci=[-1,14,558] rc=1 vc=0 vn=- li=- udi=- nc=0
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=3 nc=1 flg=0x4
n193n       ==>aRegLoad
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=4 nc=1
n18n        ==>acall
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=- nc=2
n24n        ==>l2a
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=566 vn=- li=3 udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=566 vn=- li=3 udi=5 nc=1
n24n        ==>l2a
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=566 vn=- li=3 udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=566 vn=- li=3 udi=- nc=1 flg=0x1000
n193n         ==>aRegLoad
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=566 vn=- li=3 udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=566 vn=- li=3 udi=- nc=1
n33n          ==>irdbari
n194n     aRegStore ebx                                                                       [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=566 vn=- li=3 udi=- nc=1
n18n        ==>acall
n195n     aRegStore r8d                                                                       [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=566 vn=- li=3 udi=- nc=1
n24n        ==>l2a
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=568 vn=- li=3 udi=- nc=3 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=568 vn=- li=3 udi=- nc=0 flg=0x302
n198n       GlRegDeps ()                                                                      [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=568 vn=- li=3 udi=- nc=5 flg=0x20
n196n         PassThrough r8                                                                  [0x7ffb72082d00] bci=[-1,14,558] rc=1 vc=566 vn=- li=3 udi=- nc=1
n24n            ==>l2a
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n197n         PassThrough rbx                                                                 [0x7ffb72082d50] bci=[-1,7,557] rc=1 vc=566 vn=- li=3 udi=- nc=1
n18n            ==>acall
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=566 vn=- li=3 udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=566 vn=- li=5 udi=- nc=0
n70n      NULLCHK on n192n [#32]                                                              [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=566 vn=- li=5 udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=566 vn=- li=5 udi=- nc=1 flg=0x104
n192n         ==>aRegLoad
n199n     aRegStore edi                                                                       [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=566 vn=- li=5 udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=3 vc=566 vn=- li=5 udi=- nc=1 flg=0x4
n69n          ==>aloadi
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=566 vn=- li=5 udi=6 nc=1 flg=0x4
n72n        ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=566 vn=- li=5 udi=- nc=1
n203n       GlRegDeps ()                                                                      [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=566 vn=- li=5 udi=- nc=6 flg=0x20
n200n         PassThrough rdi                                                                 [0x7ffb72082e40] bci=[-1,32,559] rc=1 vc=566 vn=- li=5 udi=- nc=1
n72n            ==>aloadi
n201n         PassThrough r8                                                                  [0x7ffb72082e90] bci=[-1,14,558] rc=1 vc=566 vn=- li=5 udi=- nc=1
n24n            ==>l2a
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n202n         PassThrough rbx                                                                 [0x7ffb72082ee0] bci=[-1,7,557] rc=1 vc=566 vn=- li=5 udi=- nc=1
n18n            ==>acall

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=566 vn=- li=6 udi=- nc=1
n204n       GlRegDeps ()                                                                      [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=566 vn=- li=6 udi=- nc=6 flg=0x20
n205n         aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=2 vc=566 vn=- li=6 udi=- nc=0 flg=0x8000
n206n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=2 vc=566 vn=- li=6 udi=- nc=0 flg=0x8000
n207n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083070] bci=[-1,35,559] rc=2 vc=566 vn=- li=6 udi=- nc=0
n208n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720830c0] bci=[-1,35,559] rc=2 vc=566 vn=- li=6 udi=- nc=0
n209n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=4 vc=566 vn=- li=6 udi=- nc=0 flg=0x8104
n210n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=2 vc=566 vn=- li=6 udi=- nc=0 flg=0x8000
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=566 vn=- li=6 udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=566 vn=- li=6 udi=- nc=1 flg=0x1000
n209n         ==>aRegLoad
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=566 vn=- li=6 udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=566 vn=- li=6 udi=- nc=5 flg=0x20
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n206n         ==>aRegLoad
n205n         ==>aRegLoad
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=566 vn=- li=6 udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=566 vn=- li=12 udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=566 vn=- li=12 udi=- nc=1
n211n       GlRegDeps ()                                                                      [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=566 vn=- li=12 udi=- nc=3 flg=0x20
n207n         ==>aRegLoad
n208n         ==>aRegLoad
n209n         ==>aRegLoad
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=566 vn=- li=12 udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=566 vn=- li=8 udi=- nc=1
n212n       GlRegDeps ()                                                                      [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=566 vn=- li=8 udi=- nc=3 flg=0x20
n213n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083250] bci=[-1,51,564] rc=2 vc=566 vn=- li=8 udi=- nc=0
n214n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720832a0] bci=[-1,51,564] rc=2 vc=566 vn=- li=8 udi=- nc=0
n215n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=2 vc=566 vn=- li=8 udi=- nc=0 flg=0x8004
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=566 vn=- li=8 udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=4 vc=566 vn=- li=8 udi=- nc=1
n215n         ==>aRegLoad
n217n     aRegStore ebx                                                                       [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=566 vn=- li=8 udi=- nc=1
n76n        ==>acall
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=566 vn=- li=8 udi=7 nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=566 vn=- li=8 udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=566 vn=- li=13 udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=566 vn=- li=13 udi=- nc=1
n219n       GlRegDeps ()                                                                      [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=566 vn=- li=13 udi=- nc=3 flg=0x20
n213n         ==>aRegLoad
n214n         ==>aRegLoad
n218n         PassThrough rbx                                                                 [0x7ffb720833e0] bci=[-1,52,564] rc=1 vc=566 vn=- li=13 udi=- nc=1
n76n            ==>acall
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=566 vn=- li=13 udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=566 vn=- li=4 udi=- nc=1
n220n       GlRegDeps ()                                                                      [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=566 vn=- li=4 udi=- nc=5 flg=0x20
n221n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]             [0x7ffb720834d0] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n222n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083520] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n223n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083570] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n224n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720835c0] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n225n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083610] bci=[-1,27,559] rc=2 vc=566 vn=- li=4 udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=566 vn=- li=4 udi=8 nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=3 vc=566 vn=- li=4 udi=- nc=0 flg=0x2
n226n     aRegStore edi                                                                       [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=566 vn=- li=4 udi=- nc=1
n60n        ==>aconst NULL
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=566 vn=- li=4 udi=- nc=1
n228n       GlRegDeps ()                                                                      [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=566 vn=- li=4 udi=- nc=6 flg=0x20
n227n         PassThrough rdi                                                                 [0x7ffb720836b0] bci=[-1,27,559] rc=1 vc=566 vn=- li=4 udi=- nc=1
n60n            ==>aconst NULL
n221n         ==>aRegLoad
n222n         ==>aRegLoad
n223n         ==>aRegLoad
n224n         ==>aRegLoad
n225n         ==>aRegLoad
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=566 vn=- li=4 udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=566 vn=- li=10 udi=- nc=0
n95n      BBEnd </block_10> (cold)                                                            [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=566 vn=- li=10 udi=- nc=0
n229n     BBStart <block_15> (freq 0) (extension of previous block) (cold)                    [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=0
n238n     aRegStore eax                                                                       [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n237n       aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720839d0] bci=[-1,1,556] rc=2 vc=566 vn=- li=15 udi=10 nc=0
n235n     aRegStore esi                                                                       [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n234n       aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]         [0x7ffb720838e0] bci=[-1,1,556] rc=2 vc=566 vn=- li=15 udi=11 nc=0
n232n     aRegStore edx                                                                       [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n231n       aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]       [0x7ffb720837f0] bci=[-1,1,556] rc=2 vc=566 vn=- li=15 udi=12 nc=0
n230n     BBEnd </block_15> (cold) =====                                                      [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=566 vn=- li=15 udi=- nc=1
n240n       GlRegDeps ()                                                                      [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=3 flg=0x20
n233n         PassThrough rdx                                                                 [0x7ffb72083890] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=1
n231n           ==>aload
n236n         PassThrough rsi                                                                 [0x7ffb72083980] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=1
n234n           ==>aload
n239n         PassThrough rax                                                                 [0x7ffb72083a70] bci=[-1,1,556] rc=1 vc=566 vn=- li=15 udi=- nc=1
n237n           ==>aload

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=566 vn=- li=11 udi=- nc=1
n241n       GlRegDeps ()                                                                      [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=566 vn=- li=11 udi=- nc=3 flg=0x20
n242n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=2 vc=566 vn=- li=11 udi=- nc=0 flg=0x8000
n243n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=2 vc=566 vn=- li=11 udi=- nc=0 flg=0x8000
n244n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=2 vc=566 vn=- li=11 udi=- nc=0 flg=0x8000
n252n     astorei  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72083e80] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n251n       aladd                                                                             [0x7ffb72083e30] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         aload  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]                   [0x7ffb72083c50] bci=[-1,0,556] rc=8 vc=566 vn=- li=11 udi=- nc=0
n250n         i2l                                                                             [0x7ffb72083de0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n249n           iadd                                                                          [0x7ffb72083d90] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             iload  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]              [0x7ffb72083ca0] bci=[-1,0,556] rc=9 vc=566 vn=- li=11 udi=- nc=0
n248n             iconst 88                                                                   [0x7ffb72083d40] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n98n        aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                       [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=13 nc=0
n257n     astorei  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084010] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n256n       aladd                                                                             [0x7ffb72083fc0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n255n         i2l                                                                             [0x7ffb72083f70] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n254n           iadd                                                                          [0x7ffb72083f20] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n253n             iconst 80                                                                   [0x7ffb72083ed0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n101n       aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                       [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=14 nc=0
n262n     astorei  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720841a0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n261n       aladd                                                                             [0x7ffb72084150] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n260n         i2l                                                                             [0x7ffb72084100] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n259n           iadd                                                                          [0x7ffb720840b0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n258n             iconst 72                                                                   [0x7ffb72084060] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n104n       aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                       [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=15 nc=0
n267n     astorei  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084330] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n266n       aladd                                                                             [0x7ffb720842e0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n265n         i2l                                                                             [0x7ffb72084290] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n264n           iadd                                                                          [0x7ffb72084240] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n263n             iconst 64                                                                   [0x7ffb720841f0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n107n       aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                       [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=16 nc=0
n272n     astorei  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720844c0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n271n       aladd                                                                             [0x7ffb72084470] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n270n         i2l                                                                             [0x7ffb72084420] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n269n           iadd                                                                          [0x7ffb720843d0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n268n             iconst 120                                                                  [0x7ffb72084380] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n244n       ==>aRegLoad
n277n     astorei  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084650] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n276n       aladd                                                                             [0x7ffb72084600] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n275n         i2l                                                                             [0x7ffb720845b0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n274n           iadd                                                                          [0x7ffb72084560] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n273n             iconst 112                                                                  [0x7ffb72084510] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n243n       ==>aRegLoad
n282n     astorei  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720847e0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n281n       aladd                                                                             [0x7ffb72084790] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n280n         i2l                                                                             [0x7ffb72084740] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n279n           iadd                                                                          [0x7ffb720846f0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n278n             iconst 104                                                                  [0x7ffb720846a0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n242n       ==>aRegLoad
n287n     astorei  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084970] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=2
n286n       aladd                                                                             [0x7ffb72084920] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n245n         ==>aload
n285n         i2l                                                                             [0x7ffb720848d0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=1
n284n           iadd                                                                          [0x7ffb72084880] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n             ==>iload
n283n             iconst 96                                                                   [0x7ffb72084830] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n119n       aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=17 nc=0
n290n     istore  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]                     [0x7ffb72084a60] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=1
n289n       iadd                                                                              [0x7ffb72084a10] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=2
n246n         ==>iload
n288n         iconst 128                                                                      [0x7ffb720849c0] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=566 vn=- li=11 udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=566 vn=- li=11 udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=566 vn=- li=11 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 205, symRefCount = 402
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [14(10000) 3(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [14(9726) 12(785) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [15(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [15(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
        14 [0x7ffb72146cb0] BBStart at 0x7ffb720824e0, frequency = 9238
                 in        = [2(10000) ]
                 out       = [7(9726) ]
                 exception in  = []
                 exception out = []
        15 [0x7ffb72146f60] BBStart at 0x7ffb72083750, frequency = 0
                 in        = [10(0) ]
                 out       = [11(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 14(0x7ffb720e1c50) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 15(0x7ffb720e2070)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
               (0x7ffb720e1c50:0x7ffb720e1bf0)14 --> 7(0x7ffb72020800)
               (0x7ffb720e2070:0x7ffb720e2010)15 --> 11(0x7ffb720e0120)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
         14 [0x7ffb720e1bf0] Block
         15 [0x7ffb720e2010] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<trees
	title="Pre Instruction Selection Trees"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

Pre Instruction Selection Trees: for java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n9n       BBStart <block_2> (freq 10000)                                                      [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=570 vn=- li=2 udi=- nc=1
n165n       GlRegDeps ()                                                                      [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=570 vn=- li=2 udi=- nc=3 flg=0x20
n166n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720823a0] bci=[-1,0,556] rc=3 vc=570 vn=- li=2 udi=- nc=0
n167n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720823f0] bci=[-1,0,556] rc=3 vc=570 vn=- li=2 udi=- nc=0
n168n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=4 vc=570 vn=- li=2 udi=- nc=0 flg=0x8104
n13n      ResolveCHK [#293]                                                                   [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=570 vn=- li=2 udi=- nc=1
n12n        irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=570 vn=- li=2 udi=- nc=1 flg=0x1000
n168n         ==>aRegLoad
n17n      ificmpeq --> block_3 BBStart at n15n ()                                             [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=570 vn=- li=2 udi=- nc=3 flg=0x20
n12n        ==>irdbari
n14n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=570 vn=- li=2 udi=- nc=0 flg=0x302
n169n       GlRegDeps ()                                                                      [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=570 vn=- li=2 udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad
n10n      BBEnd </block_2>                                                                    [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=570 vn=- li=2 udi=- nc=0
n170n     BBStart <block_14> (freq 9238) (extension of previous block)                        [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=570 vn=- li=14 udi=- nc=0
n171n     BBEnd </block_14> =====                                                             [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=570 vn=- li=14 udi=- nc=1
n175n       GlRegDeps ()                                                                      [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=570 vn=- li=14 udi=- nc=3 flg=0x20
n166n         ==>aRegLoad
n167n         ==>aRegLoad
n168n         ==>aRegLoad

n1n       BBStart <block_7> (freq 9726)                                                       [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
n176n       GlRegDeps ()                                                                      [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
n177n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082710] bci=[-1,42,562] rc=3 vc=570 vn=- li=7 udi=- nc=0
n178n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082760] bci=[-1,42,562] rc=3 vc=570 vn=- li=7 udi=- nc=0
n179n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=3 vc=570 vn=- li=7 udi=- nc=0 flg=0x8104
n51n      ResolveCHK [#293]                                                                   [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
n50n        l2a                                                                               [0x7ffb72005590] bci=[-1,43,562] rc=6 vc=570 vn=- li=7 udi=- nc=1
n294n         lshl (compressionSequence )                                                     [0x7ffb72084ba0] bci=[-1,43,562] rc=1 vc=570 vn=- li=- udi=- nc=2 flg=0x800
n293n           iu2l                                                                          [0x7ffb72084b50] bci=[-1,43,562] rc=1 vc=570 vn=- li=- udi=- nc=1
n292n             irdbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72084b00] bci=[-1,43,562] rc=1 vc=570 vn=- li=- udi=- nc=1
n179n               ==>aRegLoad
n291n           iconst 3                                                                      [0x7ffb72084ab0] bci=[-1,43,562] rc=1 vc=570 vn=- li=- udi=- nc=0
n53n      compressedRefs                                                                      [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=- nc=2
n50n        ==>l2a
n52n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=570 vn=- li=7 udi=- nc=0 flg=0x4302
n54n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
n50n        ==>l2a
n181n     aRegStore ebx                                                                       [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
n50n        ==>l2a
n59n      ifacmpeq --> block_8 BBStart at n57n ()                                             [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
n50n        ==>l2a
n56n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=570 vn=- li=7 udi=- nc=0 flg=0x2
n183n       GlRegDeps ()                                                                      [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n179n         ==>aRegLoad
n2n       BBEnd </block_7> =====                                                              [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=570 vn=- li=7 udi=- nc=1
n185n       GlRegDeps ()                                                                      [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
n177n         ==>aRegLoad
n178n         ==>aRegLoad
n184n         PassThrough rbx                                                                 [0x7ffb72082940] bci=[-1,43,562] rc=1 vc=570 vn=- li=7 udi=- nc=1
n50n            ==>l2a

n7n       BBStart <block_9> (freq 9726)                                                       [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=570 vn=- li=9 udi=- nc=1
n186n       GlRegDeps ()                                                                      [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=570 vn=- li=9 udi=- nc=3 flg=0x20
n187n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=2 vc=570 vn=- li=9 udi=- nc=0 flg=0x8000
n188n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=2 vc=570 vn=- li=9 udi=- nc=0 flg=0x8000
n189n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=3 vc=570 vn=- li=9 udi=- nc=0 flg=0x8100
n84n      ResolveAndNULLCHK on n189n [#32]                                                    [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=570 vn=- li=9 udi=- nc=1
n83n        acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=570 vn=- li=9 udi=- nc=4 flg=0x20
n82n          aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                         [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=570 vn=- li=9 udi=- nc=1
n189n           ==>aRegLoad
n189n         ==>aRegLoad
n188n         ==>aRegLoad
n187n         ==>aRegLoad
n85n      areturn                                                                             [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=570 vn=- li=9 udi=- nc=1
n83n        ==>acalli
n8n       BBEnd </block_9> =====                                                              [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=570 vn=- li=9 udi=- nc=0

n15n      BBStart <block_3> (freq 785)                                                        [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
n190n       GlRegDeps ()                                                                      [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=570 vn=- li=3 udi=- nc=3 flg=0x20
n191n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082b70] bci=[-1,7,557] rc=3 vc=570 vn=- li=3 udi=- nc=0
n192n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=4 vc=570 vn=- li=3 udi=- nc=0 flg=0x8100
n193n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=6 vc=570 vn=- li=3 udi=- nc=0 flg=0x8104
n19n      treetop                                                                             [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
n18n        acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=6 vc=570 vn=- li=3 udi=- nc=0
n20n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
n18n        ==>acall
n25n      ResolveCHK [#293]                                                                   [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1
n24n        l2a                                                                               [0x7ffb72004d70] bci=[-1,14,558] rc=6 vc=570 vn=- li=3 udi=- nc=1
n299n         lshl (compressionSequence )                                                     [0x7ffb72084d30] bci=[-1,14,558] rc=1 vc=570 vn=- li=- udi=- nc=2 flg=0x800
n298n           iu2l                                                                          [0x7ffb72084ce0] bci=[-1,14,558] rc=1 vc=570 vn=- li=- udi=- nc=1
n297n             irdbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72084c90] bci=[-1,14,558] rc=1 vc=570 vn=- li=- udi=- nc=1
n193n               ==>aRegLoad
n296n           iconst 3                                                                      [0x7ffb72084c40] bci=[-1,14,558] rc=1 vc=570 vn=- li=- udi=- nc=0
n28n      astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1 flg=0x4
n193n       ==>aRegLoad
n30n      astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1
n18n        ==>acall
n27n      compressedRefs                                                                      [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=2
n24n        ==>l2a
n26n        lconst 0 (highWordZero X==0 X>=0 X<=0 )                                           [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=570 vn=- li=3 udi=- nc=0 flg=0x4302
n35n      astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=570 vn=- li=3 udi=- nc=1
n24n        ==>l2a
n34n      treetop                                                                             [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=570 vn=- li=3 udi=- nc=1
n33n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=570 vn=- li=3 udi=- nc=1 flg=0x1000
n193n         ==>aRegLoad
n38n      treetop                                                                             [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=570 vn=- li=3 udi=- nc=1
n37n        icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=570 vn=- li=3 udi=- nc=1
n33n          ==>irdbari
n194n     aRegStore ebx                                                                       [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
n18n        ==>acall
n195n     aRegStore r8d                                                                       [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1
n24n        ==>l2a
n48n      ificmpne --> block_4 BBStart at n40n ()                                             [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=570 vn=- li=3 udi=- nc=3 flg=0x20
n37n        ==>icall
n39n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=570 vn=- li=3 udi=- nc=0 flg=0x302
n198n       GlRegDeps ()                                                                      [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=570 vn=- li=3 udi=- nc=5 flg=0x20
n196n         PassThrough r8                                                                  [0x7ffb72082d00] bci=[-1,14,558] rc=1 vc=570 vn=- li=3 udi=- nc=1
n24n            ==>l2a
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n197n         PassThrough rbx                                                                 [0x7ffb72082d50] bci=[-1,7,557] rc=1 vc=570 vn=- li=3 udi=- nc=1
n18n            ==>acall
n16n      BBEnd </block_3>                                                                    [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=570 vn=- li=3 udi=- nc=0
n3n       BBStart <block_5> (freq 766) (extension of previous block)                          [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=570 vn=- li=5 udi=- nc=0
n70n      NULLCHK on n192n [#32]                                                              [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=570 vn=- li=5 udi=- nc=1
n69n        aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=570 vn=- li=5 udi=- nc=1 flg=0x104
n192n         ==>aRegLoad
n199n     aRegStore edi                                                                       [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=570 vn=- li=5 udi=- nc=1
n72n        aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=3 vc=570 vn=- li=5 udi=- nc=1 flg=0x4
n69n          ==>aloadi
n73n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=570 vn=- li=5 udi=- nc=1 flg=0x4
n72n        ==>aloadi
n4n       BBEnd </block_5> =====                                                              [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=570 vn=- li=5 udi=- nc=1
n203n       GlRegDeps ()                                                                      [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=570 vn=- li=5 udi=- nc=6 flg=0x20
n200n         PassThrough rdi                                                                 [0x7ffb72082e40] bci=[-1,32,559] rc=1 vc=570 vn=- li=5 udi=- nc=1
n72n            ==>aloadi
n201n         PassThrough r8                                                                  [0x7ffb72082e90] bci=[-1,14,558] rc=1 vc=570 vn=- li=5 udi=- nc=1
n24n            ==>l2a
n191n         ==>aRegLoad
n192n         ==>aRegLoad
n193n         ==>aRegLoad
n202n         PassThrough rbx                                                                 [0x7ffb72082ee0] bci=[-1,7,557] rc=1 vc=570 vn=- li=5 udi=- nc=1
n18n            ==>acall

n5n       BBStart <block_6> (freq 785)                                                        [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=570 vn=- li=6 udi=- nc=1
n204n       GlRegDeps ()                                                                      [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=570 vn=- li=6 udi=- nc=6 flg=0x20
n205n         aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=2 vc=570 vn=- li=6 udi=- nc=0 flg=0x8000
n206n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=2 vc=570 vn=- li=6 udi=- nc=0 flg=0x8000
n207n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083070] bci=[-1,35,559] rc=2 vc=570 vn=- li=6 udi=- nc=0
n208n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720830c0] bci=[-1,35,559] rc=2 vc=570 vn=- li=6 udi=- nc=0
n209n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=4 vc=570 vn=- li=6 udi=- nc=0 flg=0x8104
n210n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=2 vc=570 vn=- li=6 udi=- nc=0 flg=0x8000
n88n      treetop                                                                             [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=570 vn=- li=6 udi=- nc=1
n87n        irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=570 vn=- li=6 udi=- nc=1 flg=0x1000
n209n         ==>aRegLoad
n90n      treetop                                                                             [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=570 vn=- li=6 udi=- nc=1
n89n        call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=570 vn=- li=6 udi=- nc=5 flg=0x20
n209n         ==>aRegLoad
n210n         ==>aRegLoad
n206n         ==>aRegLoad
n205n         ==>aRegLoad
n87n          ==>irdbari
n6n       BBEnd </block_6>                                                                    [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=570 vn=- li=6 udi=- nc=0
n159n     BBStart <block_12> (freq 785) (extension of previous block)                         [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=570 vn=- li=12 udi=- nc=0
n161n     goto --> block_7 BBStart at n1n                                                     [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=570 vn=- li=12 udi=- nc=1
n211n       GlRegDeps ()                                                                      [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=570 vn=- li=12 udi=- nc=3 flg=0x20
n207n         ==>aRegLoad
n208n         ==>aRegLoad
n209n         ==>aRegLoad
n160n     BBEnd </block_12> =====                                                             [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=570 vn=- li=12 udi=- nc=0

n57n      BBStart <block_8> (freq 180)                                                        [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
n212n       GlRegDeps ()                                                                      [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=570 vn=- li=8 udi=- nc=3 flg=0x20
n213n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083250] bci=[-1,51,564] rc=2 vc=570 vn=- li=8 udi=- nc=0
n214n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720832a0] bci=[-1,51,564] rc=2 vc=570 vn=- li=8 udi=- nc=0
n215n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=2 vc=570 vn=- li=8 udi=- nc=0 flg=0x8004
n77n      treetop                                                                             [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
n76n        acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=4 vc=570 vn=- li=8 udi=- nc=1
n215n         ==>aRegLoad
n217n     aRegStore ebx                                                                       [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
n76n        ==>acall
n78n      astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
n76n        ==>acall
n58n      BBEnd </block_8>                                                                    [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=570 vn=- li=8 udi=- nc=0
n162n     BBStart <block_13> (freq 180) (extension of previous block)                         [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=570 vn=- li=13 udi=- nc=0
n164n     goto --> block_9 BBStart at n7n                                                     [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=570 vn=- li=13 udi=- nc=1
n219n       GlRegDeps ()                                                                      [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=570 vn=- li=13 udi=- nc=3 flg=0x20
n213n         ==>aRegLoad
n214n         ==>aRegLoad
n218n         PassThrough rbx                                                                 [0x7ffb720833e0] bci=[-1,52,564] rc=1 vc=570 vn=- li=13 udi=- nc=1
n76n            ==>acall
n163n     BBEnd </block_13> =====                                                             [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=570 vn=- li=13 udi=- nc=0

n40n      BBStart <block_4> (freq 24)                                                         [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=570 vn=- li=4 udi=- nc=1
n220n       GlRegDeps ()                                                                      [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=570 vn=- li=4 udi=- nc=5 flg=0x20
n221n         aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]             [0x7ffb720834d0] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0
n222n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083520] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0
n223n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083570] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0
n224n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720835c0] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0
n225n         aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                 [0x7ffb72083610] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0
n64n      astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )   [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=570 vn=- li=4 udi=- nc=1 flg=0x2
n60n        aconst NULL (X==0 sharedMemory )                                                  [0x7ffb72080280] bci=[-1,27,559] rc=3 vc=570 vn=- li=4 udi=- nc=0 flg=0x2
n226n     aRegStore edi                                                                       [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=570 vn=- li=4 udi=- nc=1
n60n        ==>aconst NULL
n67n      goto --> block_6 BBStart at n5n                                                     [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=570 vn=- li=4 udi=- nc=1
n228n       GlRegDeps ()                                                                      [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=570 vn=- li=4 udi=- nc=6 flg=0x20
n227n         PassThrough rdi                                                                 [0x7ffb720836b0] bci=[-1,27,559] rc=1 vc=570 vn=- li=4 udi=- nc=1
n60n            ==>aconst NULL
n221n         ==>aRegLoad
n222n         ==>aRegLoad
n223n         ==>aRegLoad
n224n         ==>aRegLoad
n225n         ==>aRegLoad
n41n      BBEnd </block_4> =====                                                              [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=570 vn=- li=4 udi=- nc=0

n94n      BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                      [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=570 vn=- li=10 udi=- nc=0
n95n      BBEnd </block_10> (cold)                                                            [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=570 vn=- li=10 udi=- nc=0
n229n     BBStart <block_15> (freq 0) (extension of previous block) (cold)                    [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=0
n238n     aRegStore eax                                                                       [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
n237n       aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720839d0] bci=[-1,1,556] rc=2 vc=570 vn=- li=15 udi=- nc=0
n235n     aRegStore esi                                                                       [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
n234n       aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]         [0x7ffb720838e0] bci=[-1,1,556] rc=2 vc=570 vn=- li=15 udi=- nc=0
n232n     aRegStore edx                                                                       [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
n231n       aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]       [0x7ffb720837f0] bci=[-1,1,556] rc=2 vc=570 vn=- li=15 udi=- nc=0
n230n     BBEnd </block_15> (cold) =====                                                      [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
n240n       GlRegDeps ()                                                                      [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=- nc=3 flg=0x20
n233n         PassThrough rdx                                                                 [0x7ffb72083890] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=- nc=1
n231n           ==>aload
n236n         PassThrough rsi                                                                 [0x7ffb72083980] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=- nc=1
n234n           ==>aload
n239n         PassThrough rax                                                                 [0x7ffb72083a70] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=- nc=1
n237n           ==>aload

n92n      BBStart <block_11> (freq 0) (cold)                                                  [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=570 vn=- li=11 udi=- nc=1
n241n       GlRegDeps ()                                                                      [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=570 vn=- li=11 udi=- nc=3 flg=0x20
n242n         aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=2 vc=570 vn=- li=11 udi=- nc=0 flg=0x8000
n243n         aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=2 vc=570 vn=- li=11 udi=- nc=0 flg=0x8000
n244n         aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=2 vc=570 vn=- li=11 udi=- nc=0 flg=0x8000
n252n     astorei  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72083e80] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
n251n       aladd                                                                             [0x7ffb72083e30] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n245n         aload  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]                   [0x7ffb72083c50] bci=[-1,0,556] rc=8 vc=570 vn=- li=11 udi=- nc=0
n250n         i2l                                                                             [0x7ffb72083de0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
n249n           iadd                                                                          [0x7ffb72083d90] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n246n             iload  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]              [0x7ffb72083ca0] bci=[-1,0,556] rc=9 vc=570 vn=- li=11 udi=- nc=0
n248n             iconst 88                                                                   [0x7ffb72083d40] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n98n        aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                       [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n257n     astorei  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084010] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
n256n       aladd                                                                             [0x7ffb72083fc0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n245n         ==>aload
n255n         i2l                                                                             [0x7ffb72083f70] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
n254n           iadd                                                                          [0x7ffb72083f20] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n246n             ==>iload
n253n             iconst 80                                                                   [0x7ffb72083ed0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n101n       aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                       [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n262n     astorei  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720841a0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
n261n       aladd                                                                             [0x7ffb72084150] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n245n         ==>aload
n260n         i2l                                                                             [0x7ffb72084100] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
n259n           iadd                                                                          [0x7ffb720840b0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n246n             ==>iload
n258n             iconst 72                                                                   [0x7ffb72084060] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n104n       aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                       [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n267n     astorei  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084330] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
n266n       aladd                                                                             [0x7ffb720842e0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n245n         ==>aload
n265n         i2l                                                                             [0x7ffb72084290] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
n264n           iadd                                                                          [0x7ffb72084240] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n246n             ==>iload
n263n             iconst 64                                                                   [0x7ffb720841f0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n107n       aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                       [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n272n     astorei  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720844c0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
n271n       aladd                                                                             [0x7ffb72084470] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n245n         ==>aload
n270n         i2l                                                                             [0x7ffb72084420] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
n269n           iadd                                                                          [0x7ffb720843d0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n246n             ==>iload
n268n             iconst 120                                                                  [0x7ffb72084380] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n244n       ==>aRegLoad
n277n     astorei  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084650] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
n276n       aladd                                                                             [0x7ffb72084600] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n245n         ==>aload
n275n         i2l                                                                             [0x7ffb720845b0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
n274n           iadd                                                                          [0x7ffb72084560] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n246n             ==>iload
n273n             iconst 112                                                                  [0x7ffb72084510] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n243n       ==>aRegLoad
n282n     astorei  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]                      [0x7ffb720847e0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
n281n       aladd                                                                             [0x7ffb72084790] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n245n         ==>aload
n280n         i2l                                                                             [0x7ffb72084740] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
n279n           iadd                                                                          [0x7ffb720846f0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n246n             ==>iload
n278n             iconst 104                                                                  [0x7ffb720846a0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n242n       ==>aRegLoad
n287n     astorei  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]                      [0x7ffb72084970] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
n286n       aladd                                                                             [0x7ffb72084920] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n245n         ==>aload
n285n         i2l                                                                             [0x7ffb720848d0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
n284n           iadd                                                                          [0x7ffb72084880] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n246n             ==>iload
n283n             iconst 96                                                                   [0x7ffb72084830] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n119n       aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                           [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n290n     istore  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]                     [0x7ffb72084a60] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=1
n289n       iadd                                                                              [0x7ffb72084a10] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
n246n         ==>iload
n288n         iconst 128                                                                      [0x7ffb720849c0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n125n     igoto                                                                               [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=1
n124n       aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]              [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
n93n      BBEnd </block_11> (cold)                                                            [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=570 vn=- li=11 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 205, symRefCount = 402
</trees>

<cfg>
         0 [0x7ffb72022230] entry
                 in        = []
                 out       = [2(6) ]
                 exception in  = []
                 exception out = []
         1 [0x7ffb72022140] exit
                 in        = [11(0) 9(9726) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7ffb720505f0] BBStart at 0x7ffb720048c0, frequency = 10000
                 in        = [0(6) ]
                 out       = [14(10000) 3(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         3 [0x7ffb72050940] BBStart at 0x7ffb72004aa0, frequency = 785
                 in        = [2(761) ]
                 out       = [4(6) 5(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         4 [0x7ffb72070e10] BBStart at 0x7ffb72005270, frequency = 24
                 in        = [3(6) ]
                 out       = [6(6) ]
                 exception in  = []
                 exception out = []
         5 [0x7ffb72050260] BBStart at 0x7ffb720046e0, frequency = 766
                 in        = [3(761) ]
                 out       = [6(761) ]
                 exception in  = []
                 exception out = [10(0) ]
         6 [0x7ffb72050390] BBStart at 0x7ffb72004780, frequency = 785
                 in        = [5(761) 4(6) ]
                 out       = [12(785) ]
                 exception in  = []
                 exception out = [10(0) ]
         7 [0x7ffb72050130] BBStart at 0x7ffb72004640, frequency = 9726
                 in        = [14(9726) 12(785) ]
                 out       = [8(175) 9(9550) ]
                 exception in  = []
                 exception out = [10(0) ]
         8 [0x7ffb72071170] BBStart at 0x7ffb72080190, frequency = 180
                 in        = [7(175) ]
                 out       = [13(180) ]
                 exception in  = []
                 exception out = [10(0) ]
         9 [0x7ffb720504c0] BBStart at 0x7ffb72004820, frequency = 9726
                 in        = [13(180) 7(9550) ]
                 out       = [1(9726) ]
                 exception in  = []
                 exception out = [10(0) ]
        10 [0x7ffb720a01b0] BBStart at 0x7ffb72080d20, frequency = 0
                 in        = []
                 out       = [15(0) ]
                 exception in  = [9(0) 8(0) 7(0) 6(0) 5(0) 3(0) 2(0) ]
                 exception out = []
        11 [0x7ffb720a0080] BBStart at 0x7ffb72080c80, frequency = 0
                 in        = [15(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
        12 [0x7ffb7215b110] BBStart at 0x7ffb72082170, frequency = 785
                 in        = [6(785) ]
                 out       = [7(785) ]
                 exception in  = []
                 exception out = []
        13 [0x7ffb7215b300] BBStart at 0x7ffb72082260, frequency = 180
                 in        = [8(180) ]
                 out       = [9(180) ]
                 exception in  = []
                 exception out = []
        14 [0x7ffb72146cb0] BBStart at 0x7ffb720824e0, frequency = 9238
                 in        = [2(10000) ]
                 out       = [7(9726) ]
                 exception in  = []
                 exception out = []
        15 [0x7ffb72146f60] BBStart at 0x7ffb72083750, frequency = 0
                 in        = [10(0) ]
                 out       = [11(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7ffb720204f0] Acyclic region
         Subgraph: (* = exit edge)
               (0x7ffb720205c0:0x7ffb72020490)0 --> 2(0x7ffb72020650)
               (0x7ffb72020650:0x7ffb720203d0)2 --> 14(0x7ffb720e1c50) 3(0x7ffb72020730)
               (0x7ffb72020650:0x7ffb720203d0)2 >>> 10(0x7ffb720208d0)
               (0x7ffb72020730:0x7ffb72020370)3 --> 5(0x7ffb72020a90) 4(0x7ffb720209c0)
               (0x7ffb72020730:0x7ffb72020370)3 >>> 10(0x7ffb720208d0)
               (0x7ffb720209c0:0x7ffb72020310)4 --> 6(0x7ffb72020bb0)
               (0x7ffb72020bb0:0x7ffb72020250)6 --> 12(0x7ffb720e0d60)
               (0x7ffb72020bb0:0x7ffb72020250)6 >>> 10(0x7ffb720208d0)
               (0x7ffb72020800:0x7ffb720201f0)7 --> 9(0x7ffb72020e30) 8(0x7ffb72020d60)
               (0x7ffb72020800:0x7ffb720201f0)7 >>> 10(0x7ffb720208d0)
               (0x7ffb72020d60:0x7ffb72020190)8 --> 13(0x7ffb720e1120)
               (0x7ffb72020d60:0x7ffb72020190)8 >>> 10(0x7ffb720208d0)
               (0x7ffb72020e30:0x7ffb72020130)9 --> 1(0x7ffb72020ff0)
               (0x7ffb72020e30:0x7ffb72020130)9 >>> 10(0x7ffb720208d0)
               (0x7ffb72020ff0:0x7ffb72020430)1 -->
               (0x7ffb720208d0:0x7ffb720200d0)10 --> 15(0x7ffb720e2070)
               (0x7ffb720e0120:0x7ffb72020070)11 --> 1(0x7ffb72020ff0)
               (0x7ffb72020a90:0x7ffb720202b0)5 --> 6(0x7ffb72020bb0)
               (0x7ffb72020a90:0x7ffb720202b0)5 >>> 10(0x7ffb720208d0)
               (0x7ffb720e0d60:0x7ffb720e0d00)12 --> 7(0x7ffb72020800)
               (0x7ffb720e1120:0x7ffb720e10c0)13 --> 9(0x7ffb72020e30)
               (0x7ffb720e1c50:0x7ffb720e1bf0)14 --> 7(0x7ffb72020800)
               (0x7ffb720e2070:0x7ffb720e2010)15 --> 11(0x7ffb720e0120)
         0 [0x7ffb72020490] Block
         2 [0x7ffb720203d0] Block
         3 [0x7ffb72020370] Block
         4 [0x7ffb72020310] Block
         6 [0x7ffb72020250] Block
         7 [0x7ffb720201f0] Block
         8 [0x7ffb72020190] Block
         9 [0x7ffb72020130] Block
         1 [0x7ffb72020430] Block
         10 [0x7ffb720200d0] Block
         11 [0x7ffb72020070] Block
         5 [0x7ffb720202b0] Block
         12 [0x7ffb720e0d00] Block
         13 [0x7ffb720e10c0] Block
         14 [0x7ffb720e1bf0] Block
         15 [0x7ffb720e2010] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FFB7200C240
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>

Performing Instruction Selection:


============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n9n      (  0)  BBStart <block_2> (freq 10000)                                                       [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=570 vn=- li=2 udi=- nc=1
 n165n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=570 vn=- li=2 udi=- nc=3 flg=0x20
 n166n    (  3)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720823a0] bci=[-1,0,556] rc=3 vc=570 vn=- li=2 udi=- nc=0
 n167n    (  3)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720823f0] bci=[-1,0,556] rc=3 vc=570 vn=- li=2 udi=- nc=0
 n168n    (  4)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=4 vc=570 vn=- li=2 udi=- nc=0 flg=0x8104
------------------------------
------------------------------
 n9n      (  0)  BBStart <block_2> (freq 10000)                                                       [0x7ffb720048c0] bci=[-1,0,556] rc=0 vc=570 vn=- li=2 udi=- nc=1
 n165n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082350] bci=[-1,0,556] rc=1 vc=570 vn=- li=2 udi=- nc=3 flg=0x20
 n166n    (  2)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72176240)  [0x7ffb720823a0] bci=[-1,0,556] rc=2 vc=570 vn=- li=2 udi=25152 nc=0
 n167n    (  2)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb721762c0)  [0x7ffb720823f0] bci=[-1,0,556] rc=2 vc=570 vn=- li=2 udi=25280 nc=0
 n168n    (  3)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72176340) (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082440] bci=[-1,0,556] rc=3 vc=570 vn=- li=2 udi=25408 nc=0 flg=0x8104
------------------------------

 [0x7ffb72176780]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb72176530]	Label L0032:			# LABEL
	 PRE: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]
========================================
 [0x7ffb72176800]	Fence Relative [ 00007FFB72050690 ]	# FENCE BBStart <block_2> (frequency 10000)

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb72176340, &GPR_0x7ffb721762c0, &GPR_0x7ffb72176240}
------------------------------
 n13n     (  0)  ResolveCHK [#293]                                                                    [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=570 vn=- li=2 udi=- nc=1
 n12n     (  2)    irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=2 vc=570 vn=- li=2 udi=- nc=1 flg=0x1000
 n168n    (  3)      ==>aRegLoad (in &GPR_0x7ffb72176340) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------
adding 2 pad bytes following unresolved data instruction 00007FFB72179610
------------------------------
 n13n     (  0)  ResolveCHK [#293]                                                                    [0x7ffb72004a00] bci=[-1,1,556] rc=0 vc=570 vn=- li=2 udi=- nc=1
 n12n     (  1)    irdbari  java/lang/reflect/Method.override Z[#356  unresolved notAccessed volatile Shadow] [flags 0x2601 0x0 ] (in GPR_0x7ffb72179490) (cannotOverflow )  [0x7ffb720049b0] bci=[-1,1,556] rc=1 vc=570 vn=- li=2 udi=38032 nc=1 flg=0x1000
 n168n    (  2)      ==>aRegLoad (in &GPR_0x7ffb72176340) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------

 [0x7ffb721774c0]	Label L0034:			# LABEL	# (Start of internal control flow)
 [0x7ffb721775f0]	lea	GPR_0x7ffb72177400, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72177710]	cmp	qword ptr [GPR_0x7ffb72177400+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#406 +16]
 [0x7ffb721777a0]	je	Outlined Label L0036			# JE4
 [0x7ffb72178370]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb72176240 : edx] [&GPR_0x7ffb721762c0 : esi]
 [0x7ffb72178120]	Label L0035:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb72177400 : NoReg] [GPR_0x7ffb72177950 : eax] [GPR_0x7ffb72177a10 : esi]
	POST: [GPR_0x7ffb72177400 : NoReg] [GPR_0x7ffb72177950 : eax] [GPR_0x7ffb72177a10 : esi]
 [0x7ffb72178510]	Label L0038:			# LABEL	# (Start of internal control flow)
 [0x7ffb721786c0]	mov	GPR_0x7ffb721785b0, dword ptr [&GPR_0x7ffb72176340]		# L4RegMem
 [0x7ffb72178750]	and	GPR_0x7ffb721785b0, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72178870]	test	word ptr [GPR_0x7ffb721785b0+0x24], 0x0100	# TEST2MemImm2, SymRef [#410 +36]
 [0x7ffb72178900]	jne	Outlined Label L0040			# JNE4
 [0x7ffb72179230]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72177950 : eax] [&GPR_0x7ffb72176240 : edx] [GPR_0x7ffb72177a10 : esi]
 [0x7ffb72178fe0]	Label L0039:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb721785b0 : NoReg] [GPR_0x7ffb72178b70 : eax] [&GPR_0x7ffb72176340 : esi]
	POST: [GPR_0x7ffb721785b0 : NoReg] [GPR_0x7ffb72178b70 : eax] [&GPR_0x7ffb72176340 : esi]
 [0x7ffb721796a0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72179610]	mov	GPR_0x7ffb72179490, dword ptr [&GPR_0x7ffb72176340-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.override Z[#412  unresolved volatile Shadow] [flags 0x2601 0x0 ]
 [0x7ffb72179740]	nop			# Padding (2 bytes)

============================================================
; Live regs: GPR=4 FPR=0 VRF=0 {GPR_0x7ffb72179490, &GPR_0x7ffb72176340, &GPR_0x7ffb721762c0, &GPR_0x7ffb72176240}
------------------------------
 n17n     (  0)  ificmpeq --> block_3 BBStart at n15n ()                                              [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=570 vn=- li=2 udi=- nc=3 flg=0x20
 n12n     (  1)    ==>irdbari (in GPR_0x7ffb72179490) (cannotOverflow )
 n14n     (  1)    iconst 0 (X==0 X>=0 X<=0 )                                                         [0x7ffb72004a50] bci=[-1,4,556] rc=1 vc=570 vn=- li=2 udi=- nc=0 flg=0x302
 n169n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=570 vn=- li=2 udi=- nc=3 flg=0x20
 n166n    (  2)      ==>aRegLoad (in &GPR_0x7ffb72176240)
 n167n    (  2)      ==>aRegLoad (in &GPR_0x7ffb721762c0)
 n168n    (  2)      ==>aRegLoad (in &GPR_0x7ffb72176340) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------
------------------------------
 n17n     (  0)  ificmpeq --> block_3 BBStart at n15n ()                                              [0x7ffb72004b40] bci=[-1,4,556] rc=0 vc=570 vn=- li=2 udi=- nc=3 flg=0x20
 n12n     (  0)    ==>irdbari (in GPR_0x7ffb72179490) (X!=0 cannotOverflow )
 n14n     (  0)    iconst 0 (X==0 X>=0 X<=0 )                                                         [0x7ffb72004a50] bci=[-1,4,556] rc=0 vc=570 vn=- li=2 udi=- nc=0 flg=0x302
 n169n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082490] bci=[-1,4,556] rc=1 vc=570 vn=- li=2 udi=- nc=3 flg=0x20
 n166n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72176240)
 n167n    (  1)      ==>aRegLoad (in &GPR_0x7ffb721762c0)
 n168n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72176340) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------

 [0x7ffb72179e50]	test	GPR_0x7ffb72179490, GPR_0x7ffb72179490		# TEST4RegReg
 [0x7ffb7217a220]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72178b70 : eax] [&GPR_0x7ffb72176240 : edx] [&GPR_0x7ffb72176340 : esi]
 [0x7ffb72179fd0]	je	Label L0016			# JE4
	 PRE: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb72176340, &GPR_0x7ffb721762c0, &GPR_0x7ffb72176240}
------------------------------
 n10n     (  0)  BBEnd </block_2>                                                                     [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=570 vn=- li=2 udi=- nc=0
------------------------------
------------------------------
 n10n     (  0)  BBEnd </block_2>                                                                     [0x7ffb72004910] bci=[-1,4,556] rc=0 vc=570 vn=- li=2 udi=- nc=0
------------------------------

 [0x7ffb7217a410]	Fence Relative [ 00007FFB72050694 ]	# FENCE BBEnd </block_2>

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb72176340, &GPR_0x7ffb721762c0, &GPR_0x7ffb72176240}
------------------------------
 n170n    (  0)  BBStart <block_14> (freq 9238) (extension of previous block)                         [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=570 vn=- li=14 udi=- nc=0
------------------------------
------------------------------
 n170n    (  0)  BBStart <block_14> (freq 9238) (extension of previous block)                         [0x7ffb720824e0] bci=[-1,4,556] rc=0 vc=570 vn=- li=14 udi=- nc=0
------------------------------

........................................
 [0x7ffb7217a530]	Fence Relative [ 00007FFB72146D50 ]	# FENCE BBStart <block_14> (frequency 9238) (extension of previous block)

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb72176340, &GPR_0x7ffb721762c0, &GPR_0x7ffb72176240}
------------------------------
 n171n    (  0)  BBEnd </block_14> =====                                                              [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=570 vn=- li=14 udi=- nc=1
 n175n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=570 vn=- li=14 udi=- nc=3 flg=0x20
 n166n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72176240)
 n167n    (  1)      ==>aRegLoad (in &GPR_0x7ffb721762c0)
 n168n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72176340) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------
------------------------------
 n171n    (  0)  BBEnd </block_14> =====                                                              [0x7ffb72082530] bci=[-1,4,556] rc=0 vc=570 vn=- li=14 udi=- nc=1
 n175n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082670] bci=[-1,4,556] rc=1 vc=570 vn=- li=14 udi=- nc=3 flg=0x20
 n166n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72176240)
 n167n    (  0)      ==>aRegLoad (in &GPR_0x7ffb721762c0)
 n168n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72176340) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------

 [0x7ffb7217a680]	Fence Relative [ 00007FFB72146D54 ]	# FENCE BBEnd </block_14>
 [0x7ffb7217a8c0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb72176240 : edx] [&GPR_0x7ffb721762c0 : esi]
 [0x7ffb7217ace0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb72176240 : edx] [&GPR_0x7ffb721762c0 : esi]
 [0x7ffb7217aa90]	Label L0048:			# LABEL
	 PRE: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n1n      (  0)  BBStart <block_7> (freq 9726)                                                        [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
 n176n    (  1)    GlRegDeps ()                                                                       [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
 n177n    (  3)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082710] bci=[-1,42,562] rc=3 vc=570 vn=- li=7 udi=- nc=0
 n178n    (  3)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082760] bci=[-1,42,562] rc=3 vc=570 vn=- li=7 udi=- nc=0
 n179n    (  3)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=3 vc=570 vn=- li=7 udi=- nc=0 flg=0x8104
------------------------------
------------------------------
 n1n      (  0)  BBStart <block_7> (freq 9726)                                                        [0x7ffb72004640] bci=[-1,42,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
 n176n    (  1)    GlRegDeps ()                                                                       [0x7ffb720826c0] bci=[-1,42,562] rc=1 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
 n177n    (  2)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7217b0b0)  [0x7ffb72082710] bci=[-1,42,562] rc=2 vc=570 vn=- li=7 udi=45232 nc=0
 n178n    (  2)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7217b130)  [0x7ffb72082760] bci=[-1,42,562] rc=2 vc=570 vn=- li=7 udi=45360 nc=0
 n179n    (  2)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7217b1b0) (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb720827b0] bci=[-1,42,562] rc=2 vc=570 vn=- li=7 udi=45488 nc=0 flg=0x8104
------------------------------

 [0x7ffb7217b570]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb7217b320]	Label L0019:			# LABEL
	 PRE: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]
	POST: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]
========================================
 [0x7ffb7217b5f0]	Fence Relative [ 00007FFB720501D0 ]	# FENCE BBStart <block_7> (frequency 9726)

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb7217b1b0, &GPR_0x7ffb7217b130, &GPR_0x7ffb7217b0b0}
------------------------------
 n51n     (  0)  ResolveCHK [#293]                                                                    [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
 n50n     (  6)    l2a                                                                                [0x7ffb72005590] bci=[-1,43,562] rc=6 vc=570 vn=- li=7 udi=- nc=1
 n294n    (  1)      lshl (compressionSequence )                                                      [0x7ffb72084ba0] bci=[-1,43,562] rc=1 vc=570 vn=- li=- udi=- nc=2 flg=0x800
 n293n    (  1)        iu2l                                                                           [0x7ffb72084b50] bci=[-1,43,562] rc=1 vc=570 vn=- li=- udi=- nc=1
 n292n    (  1)          irdbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72084b00] bci=[-1,43,562] rc=1 vc=570 vn=- li=- udi=- nc=1
 n179n    (  2)            ==>aRegLoad (in &GPR_0x7ffb7217b1b0) (X!=0 X>=0 SeenRealReference sharedMemory )
 n291n    (  1)        iconst 3                                                                       [0x7ffb72084ab0] bci=[-1,43,562] rc=1 vc=570 vn=- li=- udi=- nc=0
------------------------------
[    42] O^O IntegerShlEvaluator: replace shift with lea
adding 2 pad bytes following unresolved data instruction 00007FFB7217DDB0
------------------------------
 n51n     (  0)  ResolveCHK [#293]                                                                    [0x7ffb720055e0] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
 n50n     (  5)    l2a (in &GPR_0x7ffb7217df70)                                                       [0x7ffb72005590] bci=[-1,43,562] rc=5 vc=570 vn=- li=7 udi=57200 nc=1
 n294n    (  0)      lshl (in &GPR_0x7ffb7217df70) (compressionSequence )                             [0x7ffb72084ba0] bci=[-1,43,562] rc=0 vc=570 vn=- li=- udi=57200 nc=2 flg=0x800
 n293n    (  0)        iu2l (in GPR_0x7ffb7217dd30)                                                   [0x7ffb72084b50] bci=[-1,43,562] rc=0 vc=570 vn=- li=- udi=56624 nc=1
 n292n    (  0)          irdbari  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#366  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ] (in GPR_0x7ffb7217dd30)  [0x7ffb72084b00] bci=[-1,43,562] rc=0 vc=570 vn=- li=- udi=56624 nc=1
 n179n    (  1)            ==>aRegLoad (in &GPR_0x7ffb7217b1b0) (X!=0 X>=0 SeenRealReference sharedMemory )
 n291n    (  0)        iconst 3                                                                       [0x7ffb72084ab0] bci=[-1,43,562] rc=0 vc=570 vn=- li=- udi=- nc=0
------------------------------

 [0x7ffb7217bfa0]	Label L0065:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217c0d0]	lea	GPR_0x7ffb7217bf20, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217c1f0]	cmp	qword ptr [GPR_0x7ffb7217bf20+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#415 +16]
 [0x7ffb7217c280]	je	Outlined Label L0067			# JE4
 [0x7ffb7217cca0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b0b0 : edx] [&GPR_0x7ffb7217b130 : esi]
 [0x7ffb7217ca50]	Label L0066:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb7217bf20 : NoReg] [GPR_0x7ffb7217c430 : eax] [GPR_0x7ffb7217c4b0 : esi]
	POST: [GPR_0x7ffb7217bf20 : NoReg] [GPR_0x7ffb7217c430 : eax] [GPR_0x7ffb7217c4b0 : esi]
 [0x7ffb7217ce40]	Label L0069:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217cff0]	mov	GPR_0x7ffb7217cee0, dword ptr [&GPR_0x7ffb7217b1b0]		# L4RegMem
 [0x7ffb7217d080]	and	GPR_0x7ffb7217cee0, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7217d1a0]	test	word ptr [GPR_0x7ffb7217cee0+0x24], 0x0100	# TEST2MemImm2, SymRef [#418 +36]
 [0x7ffb7217d230]	jne	Outlined Label L0071			# JNE4
 [0x7ffb7217dad0]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb7217c430 : eax] [&GPR_0x7ffb7217b0b0 : edx] [GPR_0x7ffb7217c4b0 : esi]
 [0x7ffb7217d880]	Label L0070:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb7217cee0 : NoReg] [GPR_0x7ffb7217d4a0 : eax] [&GPR_0x7ffb7217b1b0 : esi]
	POST: [GPR_0x7ffb7217cee0 : NoReg] [GPR_0x7ffb7217d4a0 : eax] [&GPR_0x7ffb7217b1b0 : esi]
 [0x7ffb7217de40]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7217ddb0]	mov	GPR_0x7ffb7217dd30, dword ptr [&GPR_0x7ffb7217b1b0-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#420  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb7217dee0]	nop			# Padding (2 bytes)
 [0x7ffb7217dff0]	lea	&GPR_0x7ffb7217df70, qword ptr [8*GPR_0x7ffb7217dd30]		# LEA8RegMem

============================================================
; Live regs: GPR=4 FPR=0 VRF=0 {&GPR_0x7ffb7217df70, &GPR_0x7ffb7217b1b0, &GPR_0x7ffb7217b130, &GPR_0x7ffb7217b0b0}
------------------------------
 n53n     (  0)  compressedRefs                                                                       [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=- nc=2
 n50n     (  5)    ==>l2a (in &GPR_0x7ffb7217df70)
 n52n     (  1)    lconst 0 (highWordZero X==0 X>=0 X<=0 )                                            [0x7ffb72080000] bci=[-1,43,562] rc=1 vc=570 vn=- li=7 udi=- nc=0 flg=0x4302
------------------------------
------------------------------
 n53n     (  0)  compressedRefs                                                                       [0x7ffb72080050] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=- nc=2
 n50n     (  4)    ==>l2a (in &GPR_0x7ffb7217df70)
 n52n     (  0)    lconst 0 (highWordZero X==0 X>=0 X<=0 )                                            [0x7ffb72080000] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=- nc=0 flg=0x4302
------------------------------


============================================================
; Live regs: GPR=4 FPR=0 VRF=0 {&GPR_0x7ffb7217df70, &GPR_0x7ffb7217b1b0, &GPR_0x7ffb7217b130, &GPR_0x7ffb7217b0b0}
------------------------------
 n54n     (  0)  astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                             [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
 n50n     (  4)    ==>l2a (in &GPR_0x7ffb7217df70)
------------------------------
------------------------------
 n54n     (  0)  astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                             [0x7ffb720800a0] bci=[-1,46,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
 n50n     (  3)    ==>l2a (in &GPR_0x7ffb7217df70)
------------------------------

 [0x7ffb7217e9c0]	mov	qword ptr [vfp], &GPR_0x7ffb7217df70		# S8MemReg, SymRef  caller<auto slot 3>[#421  Auto] [flags 0x7 0x0 ]

============================================================
; Live regs: GPR=4 FPR=0 VRF=0 {&GPR_0x7ffb7217df70, &GPR_0x7ffb7217b1b0, &GPR_0x7ffb7217b130, &GPR_0x7ffb7217b0b0}
------------------------------
 n181n    (  0)  aRegStore ebx                                                                        [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
 n50n     (  3)    ==>l2a (in &GPR_0x7ffb7217df70)
------------------------------
------------------------------
 n181n    (  0)  aRegStore ebx                                                                        [0x7ffb72082850] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=- nc=1
 n50n     (  2)    ==>l2a (in &GPR_0x7ffb7217df70)
------------------------------


============================================================
; Live regs: GPR=4 FPR=0 VRF=0 {&GPR_0x7ffb7217df70, &GPR_0x7ffb7217b1b0, &GPR_0x7ffb7217b130, &GPR_0x7ffb7217b0b0}
------------------------------
 n59n     (  0)  ifacmpeq --> block_8 BBStart at n57n ()                                              [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
 n50n     (  2)    ==>l2a (in &GPR_0x7ffb7217df70)
 n56n     (  1)    aconst NULL (X==0 sharedMemory )                                                   [0x7ffb72080140] bci=[-1,48,563] rc=1 vc=570 vn=- li=7 udi=- nc=0 flg=0x2
 n183n    (  1)    GlRegDeps ()                                                                       [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
 n177n    (  2)      ==>aRegLoad (in &GPR_0x7ffb7217b0b0)
 n178n    (  2)      ==>aRegLoad (in &GPR_0x7ffb7217b130)
 n179n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7217b1b0) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------
------------------------------
 n59n     (  0)  ifacmpeq --> block_8 BBStart at n57n ()                                              [0x7ffb72080230] bci=[-1,48,563] rc=0 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
 n50n     (  1)    ==>l2a (in &GPR_0x7ffb7217df70) (X!=0 sharedMemory )
 n56n     (  0)    aconst NULL (X==0 sharedMemory )                                                   [0x7ffb72080140] bci=[-1,48,563] rc=0 vc=570 vn=- li=7 udi=- nc=0 flg=0x2
 n183n    (  1)    GlRegDeps ()                                                                       [0x7ffb720828f0] bci=[-1,48,563] rc=1 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
 n177n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7217b0b0)
 n178n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7217b130)
 n179n    (  0)      ==>aRegLoad (in &GPR_0x7ffb7217b1b0) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------

 [0x7ffb7217ecd0]	test	&GPR_0x7ffb7217df70, &GPR_0x7ffb7217df70		# TEST8RegReg
 [0x7ffb7217f0a0]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb7217d4a0 : eax] [&GPR_0x7ffb7217b0b0 : edx] [&GPR_0x7ffb7217b1b0 : esi]
 [0x7ffb7217ee50]	je	Label L0017			# JE4
	 PRE: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]
	POST: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb7217df70, &GPR_0x7ffb7217b130, &GPR_0x7ffb7217b0b0}
------------------------------
 n2n      (  0)  BBEnd </block_7> =====                                                               [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=570 vn=- li=7 udi=- nc=1
 n185n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
 n177n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7217b0b0)
 n178n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7217b130)
 n184n    (  1)      PassThrough rbx                                                                  [0x7ffb72082940] bci=[-1,43,562] rc=1 vc=570 vn=- li=7 udi=- nc=1
 n50n     (  1)        ==>l2a (in &GPR_0x7ffb7217df70) (X!=0 sharedMemory )
------------------------------
------------------------------
 n2n      (  0)  BBEnd </block_7> =====                                                               [0x7ffb72004690] bci=[-1,48,563] rc=0 vc=570 vn=- li=7 udi=- nc=1
 n185n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082990] bci=[-1,48,563] rc=1 vc=570 vn=- li=7 udi=- nc=3 flg=0x20
 n177n    (  0)      ==>aRegLoad (in &GPR_0x7ffb7217b0b0)
 n178n    (  0)      ==>aRegLoad (in &GPR_0x7ffb7217b130)
 n184n    (  0)      PassThrough rbx                                                                  [0x7ffb72082940] bci=[-1,43,562] rc=0 vc=570 vn=- li=7 udi=57200 nc=1
 n50n     (  0)        ==>l2a (in &GPR_0x7ffb7217df70) (X!=0 sharedMemory )
------------------------------

 [0x7ffb7217f2f0]	Fence Relative [ 00007FFB720501D4 ]	# FENCE BBEnd </block_7>
 [0x7ffb7217f530]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b0b0 : edx] [&GPR_0x7ffb7217b130 : esi]
 [0x7ffb7217f950]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb7217b0b0 : edx] [&GPR_0x7ffb7217b130 : esi]
 [0x7ffb7217f700]	Label L0074:			# LABEL
	 PRE: [&GPR_0x7ffb7217df70 : ebx] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]
	POST: [&GPR_0x7ffb7217df70 : ebx] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n7n      (  0)  BBStart <block_9> (freq 9726)                                                        [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=570 vn=- li=9 udi=- nc=1
 n186n    (  1)    GlRegDeps ()                                                                       [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=570 vn=- li=9 udi=- nc=3 flg=0x20
 n187n    (  2)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=2 vc=570 vn=- li=9 udi=- nc=0 flg=0x8000
 n188n    (  2)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=2 vc=570 vn=- li=9 udi=- nc=0 flg=0x8000
 n189n    (  3)      aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=3 vc=570 vn=- li=9 udi=- nc=0 flg=0x8100
------------------------------
------------------------------
 n7n      (  0)  BBStart <block_9> (freq 9726)                                                        [0x7ffb72004820] bci=[-1,56,566] rc=0 vc=570 vn=- li=9 udi=- nc=1
 n186n    (  1)    GlRegDeps ()                                                                       [0x7ffb720829e0] bci=[-1,56,566] rc=1 vc=570 vn=- li=9 udi=- nc=3 flg=0x20
 n187n    (  1)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7217fda0) (SeenRealReference sharedMemory )  [0x7ffb72082a30] bci=[-1,58,566] rc=1 vc=570 vn=- li=9 udi=64928 nc=0 flg=0x8000
 n188n    (  1)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7217fe20) (SeenRealReference sharedMemory )  [0x7ffb72082a80] bci=[-1,57,566] rc=1 vc=570 vn=- li=9 udi=65056 nc=0 flg=0x8000
 n189n    (  2)      aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (in &GPR_0x7ffb7217fea0) (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082ad0] bci=[-1,56,566] rc=2 vc=570 vn=- li=9 udi=65184 nc=0 flg=0x8100
------------------------------

 [0x7ffb72180260]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb72180010]	Label L0020:			# LABEL
	 PRE: [&GPR_0x7ffb7217fea0 : ebx] [&GPR_0x7ffb7217fe20 : esi] [&GPR_0x7ffb7217fda0 : edx]
	POST: [&GPR_0x7ffb7217fea0 : ebx] [&GPR_0x7ffb7217fe20 : esi] [&GPR_0x7ffb7217fda0 : edx]
========================================
 [0x7ffb721802e0]	Fence Relative [ 00007FFB72050560 ]	# FENCE BBStart <block_9> (frequency 9726)

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb7217fea0, &GPR_0x7ffb7217fe20, &GPR_0x7ffb7217fda0}
------------------------------
 n84n     (  0)  ResolveAndNULLCHK on n189n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=570 vn=- li=9 udi=- nc=1
 n83n     (  2)    acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=2 vc=570 vn=- li=9 udi=- nc=4 flg=0x20
 n82n     (  1)      aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]                          [0x7ffb72080960] bci=[-1,61,566] rc=1 vc=570 vn=- li=9 udi=- nc=1
 n189n    (  2)        ==>aRegLoad (in &GPR_0x7ffb7217fea0) (X>=0 SeenRealReference sharedMemory )
 n189n    (  2)      ==>aRegLoad (in &GPR_0x7ffb7217fea0) (X>=0 SeenRealReference sharedMemory )
 n188n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7217fe20) (SeenRealReference sharedMemory )
 n187n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7217fda0) (SeenRealReference sharedMemory )
------------------------------
  Profiled target frequency 1.000000 * Can't find suitable method from profile info
[    43] O^O useLastITableCache for n83n itableIndex=0: jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
------------------------------
 n84n     (  0)  ResolveAndNULLCHK on n189n [#32]                                                     [0x7ffb72080a00] bci=[-1,61,566] rc=0 vc=570 vn=- li=9 udi=- nc=1
 n83n     (  1)    acalli  jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[#372  unresolved interface Method] (Interface class) [flags 0x400 0x0 ] (in &GPR_0x7ffb721833f0) (sharedMemory )  [0x7ffb720809b0] bci=[-1,61,566] rc=1 vc=570 vn=- li=9 udi=13296 nc=4 flg=0x20
 n82n     (  0)      aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (in GPR_0x7ffb721815a0)  [0x7ffb72080960] bci=[-1,61,566] rc=0 vc=570 vn=- li=9 udi=5536 nc=1
 n189n    (  0)        ==>aRegLoad (in &GPR_0x7ffb7217fea0) (X!=0 X>=0 SeenRealReference sharedMemory )
 n189n    (  0)      ==>aRegLoad (in &GPR_0x7ffb7217fea0) (X!=0 X>=0 SeenRealReference sharedMemory )
 n188n    (  0)      ==>aRegLoad (in &GPR_0x7ffb7217fe20) (SeenRealReference sharedMemory )
 n187n    (  0)      ==>aRegLoad (in &GPR_0x7ffb7217fda0) (SeenRealReference sharedMemory )
------------------------------

 [0x7ffb72181480]	mov	&GPR_0x7ffb72181200, &GPR_0x7ffb7217fea0		# MOV8RegReg
 [0x7ffb72181620]	mov	GPR_0x7ffb721815a0, dword ptr [&GPR_0x7ffb7217fea0]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb721816b0]	and	GPR_0x7ffb721815a0, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb72183470]	Label L0080:			# LABEL	# (Start of internal control flow)
	 PRE: [&GPR_0x7ffb72181200 : eax] [&GPR_0x7ffb7217fe20 : esi] [&GPR_0x7ffb7217fda0 : edx]
 [0x7ffb72181a70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721819d0]	mov	GPR_0x7ffb72181950, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72181b10]	cmp	GPR_0x7ffb72181950, GPR_0x7ffb721815a0		# CMP8RegReg
 [0x7ffb72181ba0]	jne	Label L0083			# JNE1
 [0x7ffb72181c40]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb72181ce0]	jmp	Label L0081			# JMP4
 [0x7ffb72181d80]	Label L0083:			# LABEL
 [0x7ffb72182060]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72181fc0]	mov	GPR_0x7ffb72181f40, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72182100]	cmp	GPR_0x7ffb72181f40, GPR_0x7ffb721815a0		# CMP8RegReg
 [0x7ffb72182190]	jne	Label L0096			# JNE1
 [0x7ffb72182230]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb721822d0]	jmp	Label L0081			# JMP4
 [0x7ffb721824b0]	Label L0097:			# LABEL
 [0x7ffb72182550]	mov	GPR_0x7ffb721823f0, 0x00000178	# MOV4RegImm4
 [0x7ffb72182670]	sub	GPR_0x7ffb721823f0, qword ptr [GPR_0x7ffb72182370+0x18]		# SUB8RegMem, SymRef [#423 +24]
 [0x7ffb72182790]	jmp	dword ptr [GPR_0x7ffb721815a0+1*GPR_0x7ffb721823f0]		# JMPMem
 [0x7ffb72182820]	Label L0096:			# LABEL
 [0x7ffb72182950]	mov	GPR_0x7ffb72182370, qword ptr [GPR_0x7ffb721815a0+0x60]		# L8RegMem, SymRef [#425 +96]
 [0x7ffb72182a70]	cmp	dword ptr [GPR_0x7ffb72182370], 0x000a5700	# CMP4MemImm4
 [0x7ffb72182b00]	jne	Snippet Label L0084		# JNE4	# (IPic Data)
 [0x7ffb72182df0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb7217fea0 : ebx] [&GPR_0x7ffb7217fda0 : edx] [&GPR_0x7ffb7217fe20 : esi]
 [0x7ffb72182ba0]	call	Label L0097			# CALLImm4
	 PRE: [GPR_0x7ffb721823f0 : r8d]
 [0x7ffb72183760]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb721823f0 : r8d]
 [0x7ffb72183510]	Label L0081:			# LABEL	# (End of internal control flow)
	 PRE: [&GPR_0x7ffb72181200 : eax] [&GPR_0x7ffb7217fe20 : esi] [&GPR_0x7ffb7217fda0 : edx]
	POST: [GPR_0x7ffb72182370 : edi] [GPR_0x7ffb721815a0 : NoReg] [D_GPR_0x7ffb72182ef0 : ecx] [D_GPR_0x7ffb72182f70 : edx] [D_GPR_0x7ffb72182ff0 : esi] [D_GPR_0x7ffb72183070 : r8d] [D_GPR_0x7ffb721830f0 : r10d] [D_GPR_0x7ffb72183170 : r11d] [D_GPR_0x7ffb721831f0 : r12d] [D_GPR_0x7ffb72183270 : r13d] [D_GPR_0x7ffb721832f0 : r14d] [D_GPR_0x7ffb72183370 : r15d] [GPR_0x7ffb720099b0 : ebp] [&GPR_0x7ffb721833f0 : eax]

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {&GPR_0x7ffb721833f0}
------------------------------
 n85n     (  0)  areturn                                                                              [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=570 vn=- li=9 udi=- nc=1
 n83n     (  1)    ==>acalli (in &GPR_0x7ffb721833f0) (sharedMemory )
------------------------------
------------------------------
 n85n     (  0)  areturn                                                                              [0x7ffb72080a50] bci=[-1,64,566] rc=0 vc=570 vn=- li=9 udi=- nc=1
 n83n     (  0)    ==>acalli (in &GPR_0x7ffb721833f0) (sharedMemory )
------------------------------

 [0x7ffb72184440]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb721833f0 : eax] [D_GPR_0x7ffb72182ef0 : ecx] [D_GPR_0x7ffb72182f70 : edx] [GPR_0x7ffb72182370 : edi] [D_GPR_0x7ffb72182ff0 : esi] [D_GPR_0x7ffb72183070 : r8d] [D_GPR_0x7ffb721830f0 : r10d] [D_GPR_0x7ffb72183170 : r11d] [D_GPR_0x7ffb721831f0 : r12d] [D_GPR_0x7ffb72183270 : r13d] [D_GPR_0x7ffb721832f0 : r14d] [D_GPR_0x7ffb72183370 : r15d]
 [0x7ffb72184210]	ret                             # RET
	 PRE: [&GPR_0x7ffb721833f0 : eax]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n8n      (  0)  BBEnd </block_9> =====                                                               [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=570 vn=- li=9 udi=- nc=0
------------------------------
------------------------------
 n8n      (  0)  BBEnd </block_9> =====                                                               [0x7ffb72004870] bci=[-1,64,566] rc=0 vc=570 vn=- li=9 udi=- nc=0
------------------------------

 [0x7ffb72184580]	Fence Relative [ 00007FFB72050564 ]	# FENCE BBEnd </block_9>
 [0x7ffb721847c0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb721833f0 : eax]
 [0x7ffb721848a0]	Label L0098:			# LABEL

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n15n     (  0)  BBStart <block_3> (freq 785)                                                         [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n190n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=570 vn=- li=3 udi=- nc=3 flg=0x20
 n191n    (  3)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72082b70] bci=[-1,7,557] rc=3 vc=570 vn=- li=3 udi=- nc=0
 n192n    (  4)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=4 vc=570 vn=- li=3 udi=- nc=0 flg=0x8100
 n193n    (  6)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=6 vc=570 vn=- li=3 udi=- nc=0 flg=0x8104
------------------------------
------------------------------
 n15n     (  0)  BBStart <block_3> (freq 785)                                                         [0x7ffb72004aa0] bci=[-1,7,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n190n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082b20] bci=[-1,7,557] rc=1 vc=570 vn=- li=3 udi=- nc=3 flg=0x20
 n191n    (  2)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72184c30)  [0x7ffb72082b70] bci=[-1,7,557] rc=2 vc=570 vn=- li=3 udi=19504 nc=0
 n192n    (  3)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72184cb0) (X>=0 SeenRealReference sharedMemory )  [0x7ffb72082bc0] bci=[-1,31,559] rc=3 vc=570 vn=- li=3 udi=19632 nc=0 flg=0x8100
 n193n    (  5)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72082c10] bci=[-1,13,558] rc=5 vc=570 vn=- li=3 udi=19760 nc=0 flg=0x8104
------------------------------

 [0x7ffb721850f0]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb72184ea0]	Label L0016:			# LABEL
	 PRE: [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx]
	POST: [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx]
========================================
 [0x7ffb72185170]	Fence Relative [ 00007FFB720509E0 ]	# FENCE BBStart <block_3> (frequency 785)

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n19n     (  0)  treetop                                                                              [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n18n     (  6)    acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ]  [0x7ffb72004b90] bci=[-1,7,557] rc=6 vc=570 vn=- li=3 udi=- nc=0
------------------------------
------------------------------
 n19n     (  0)  treetop                                                                              [0x7ffb72004be0] bci=[-1,7,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n18n     (  5)    acall  jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;[#357  native static Method] [flags 0x500 0x0 ] (in &GPR_0x7ffb721864f0)  [0x7ffb72004b90] bci=[-1,7,557] rc=5 vc=570 vn=- li=3 udi=25840 nc=0
------------------------------

 [0x7ffb72186570]	Label L0112:			# LABEL	# (Start of internal control flow)
 [0x7ffb72185ed0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72185e30]	call	Snippet Label L0114     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72186860]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb72184cb0 : esi]
 [0x7ffb72186610]	Label L0113:			# LABEL	# (End of internal control flow)
	POST: [D_GPR_0x7ffb72185f70 : ecx] [D_GPR_0x7ffb72185ff0 : edx] [D_GPR_0x7ffb72186070 : edi] [D_GPR_0x7ffb721860f0 : esi] [D_GPR_0x7ffb72186170 : r8d] [D_GPR_0x7ffb721861f0 : r10d] [D_GPR_0x7ffb72186270 : r11d] [D_GPR_0x7ffb721862f0 : r12d] [D_GPR_0x7ffb72186370 : r13d] [D_GPR_0x7ffb721863f0 : r14d] [D_GPR_0x7ffb72186470 : r15d] [GPR_0x7ffb720099b0 : ebp] [&GPR_0x7ffb721864f0 : eax]

============================================================
; Live regs: GPR=4 FPR=0 VRF=0 {&GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n20n     (  0)  astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                             [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n18n     (  5)    ==>acall (in &GPR_0x7ffb721864f0)
------------------------------
------------------------------
 n20n     (  0)  astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                             [0x7ffb72004c30] bci=[-1,10,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n18n     (  4)    ==>acall (in &GPR_0x7ffb721864f0)
------------------------------

 [0x7ffb72186d80]	mov	qword ptr [vfp], &GPR_0x7ffb721864f0		# S8MemReg, SymRef  caller<auto slot 3>[#428  Auto] [flags 0x7 0x0 ]

============================================================
; Live regs: GPR=4 FPR=0 VRF=0 {&GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n25n     (  0)  ResolveCHK [#293]                                                                    [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n24n     (  6)    l2a                                                                                [0x7ffb72004d70] bci=[-1,14,558] rc=6 vc=570 vn=- li=3 udi=- nc=1
 n299n    (  1)      lshl (compressionSequence )                                                      [0x7ffb72084d30] bci=[-1,14,558] rc=1 vc=570 vn=- li=- udi=- nc=2 flg=0x800
 n298n    (  1)        iu2l                                                                           [0x7ffb72084ce0] bci=[-1,14,558] rc=1 vc=570 vn=- li=- udi=- nc=1
 n297n    (  1)          irdbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ]  [0x7ffb72084c90] bci=[-1,14,558] rc=1 vc=570 vn=- li=- udi=- nc=1
 n193n    (  5)            ==>aRegLoad (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )
 n296n    (  1)        iconst 3                                                                       [0x7ffb72084c40] bci=[-1,14,558] rc=1 vc=570 vn=- li=- udi=- nc=0
------------------------------
[    44] O^O IntegerShlEvaluator: replace shift with lea
adding 2 pad bytes following unresolved data instruction 00007FFB721897E0
------------------------------
 n25n     (  0)  ResolveCHK [#293]                                                                    [0x7ffb72004dc0] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n24n     (  5)    l2a (in &GPR_0x7ffb721899a0)                                                       [0x7ffb72004d70] bci=[-1,14,558] rc=5 vc=570 vn=- li=3 udi=39328 nc=1
 n299n    (  0)      lshl (in &GPR_0x7ffb721899a0) (compressionSequence )                             [0x7ffb72084d30] bci=[-1,14,558] rc=0 vc=570 vn=- li=- udi=39328 nc=2 flg=0x800
 n298n    (  0)        iu2l (in GPR_0x7ffb72189760)                                                   [0x7ffb72084ce0] bci=[-1,14,558] rc=0 vc=570 vn=- li=- udi=38752 nc=1
 n297n    (  0)          irdbari  java/lang/reflect/Method.clazz Ljava/lang/Class;[#359  unresolved notAccessed volatile Shadow] [flags 0x2607 0x0 ] (in GPR_0x7ffb72189760)  [0x7ffb72084c90] bci=[-1,14,558] rc=0 vc=570 vn=- li=- udi=38752 nc=1
 n193n    (  4)            ==>aRegLoad (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )
 n296n    (  0)        iconst 3                                                                       [0x7ffb72084c40] bci=[-1,14,558] rc=0 vc=570 vn=- li=- udi=- nc=0
------------------------------

 [0x7ffb72187990]	Label L0129:			# LABEL	# (Start of internal control flow)
 [0x7ffb72187ac0]	lea	GPR_0x7ffb72187910, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72187be0]	cmp	qword ptr [GPR_0x7ffb72187910+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#431 +16]
 [0x7ffb72187c70]	je	Outlined Label L0131			# JE4
 [0x7ffb721886d0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb721864f0 : eax] [&GPR_0x7ffb72184d30 : ebx] [D_GPR_0x7ffb72185f70 : ecx] [D_GPR_0x7ffb72185ff0 : edx] [D_GPR_0x7ffb72186070 : edi] [D_GPR_0x7ffb721860f0 : esi] [D_GPR_0x7ffb72186170 : r8d] [&GPR_0x7ffb72184cb0 : r9d] [D_GPR_0x7ffb721861f0 : r10d] [D_GPR_0x7ffb72186270 : r11d] [D_GPR_0x7ffb721862f0 : r12d] [D_GPR_0x7ffb72186370 : r13d] [D_GPR_0x7ffb721863f0 : r14d] [D_GPR_0x7ffb72186470 : r15d]
 [0x7ffb72188480]	Label L0130:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb72187910 : NoReg] [GPR_0x7ffb72187e20 : eax] [GPR_0x7ffb72187ea0 : esi]
	POST: [GPR_0x7ffb72187910 : NoReg] [GPR_0x7ffb72187e20 : eax] [GPR_0x7ffb72187ea0 : esi]
 [0x7ffb72188870]	Label L0133:			# LABEL	# (Start of internal control flow)
 [0x7ffb72188a20]	mov	GPR_0x7ffb72188910, dword ptr [&GPR_0x7ffb72184d30]		# L4RegMem
 [0x7ffb72188ab0]	and	GPR_0x7ffb72188910, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72188bd0]	test	word ptr [GPR_0x7ffb72188910+0x24], 0x0100	# TEST2MemImm2, SymRef [#434 +36]
 [0x7ffb72188c60]	jne	Outlined Label L0135			# JNE4
 [0x7ffb72189500]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72187e20 : eax] [&GPR_0x7ffb72184d30 : ebx] [GPR_0x7ffb72187ea0 : esi] [&GPR_0x7ffb72184cb0 : r9d]
 [0x7ffb721892b0]	Label L0134:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb72188910 : NoReg] [GPR_0x7ffb72188ed0 : eax] [&GPR_0x7ffb72184d30 : esi]
	POST: [GPR_0x7ffb72188910 : NoReg] [GPR_0x7ffb72188ed0 : eax] [&GPR_0x7ffb72184d30 : esi]
 [0x7ffb72189870]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721897e0]	mov	GPR_0x7ffb72189760, dword ptr [&GPR_0x7ffb72184d30-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.clazz Ljava/lang/Class;[#436  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb72189910]	nop			# Padding (2 bytes)
 [0x7ffb72189a20]	lea	&GPR_0x7ffb721899a0, qword ptr [8*GPR_0x7ffb72189760]		# LEA8RegMem

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {&GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n28n     (  0)  astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )    [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1 flg=0x4
 n193n    (  4)    ==>aRegLoad (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------
------------------------------
 n28n     (  0)  astore  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )    [0x7ffb72004eb0] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1 flg=0x4
 n193n    (  3)    ==>aRegLoad (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------

 [0x7ffb7218a310]	mov	qword ptr [vfp], &GPR_0x7ffb72184d30		# S8MemReg, SymRef  <pending push temp 0>[#437  Auto] [flags 0x7 0x800 ]

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {&GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n30n     (  0)  astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                         [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n18n     (  4)    ==>acall (in &GPR_0x7ffb721864f0)
------------------------------
------------------------------
 n30n     (  0)  astore  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                         [0x7ffb72004f50] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n18n     (  3)    ==>acall (in &GPR_0x7ffb721864f0)
------------------------------

 [0x7ffb7218a6a0]	mov	qword ptr [vfp], &GPR_0x7ffb721864f0		# S8MemReg, SymRef  <pending push temp 1>[#438  Auto] [flags 0x7 0x800 ]

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {&GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n27n     (  0)  compressedRefs                                                                       [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=2
 n24n     (  5)    ==>l2a (in &GPR_0x7ffb721899a0)
 n26n     (  1)    lconst 0 (highWordZero X==0 X>=0 X<=0 )                                            [0x7ffb72004e10] bci=[-1,14,558] rc=1 vc=570 vn=- li=3 udi=- nc=0 flg=0x4302
------------------------------
------------------------------
 n27n     (  0)  compressedRefs                                                                       [0x7ffb72004e60] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=2
 n24n     (  4)    ==>l2a (in &GPR_0x7ffb721899a0)
 n26n     (  0)    lconst 0 (highWordZero X==0 X>=0 X<=0 )                                            [0x7ffb72004e10] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=0 flg=0x4302
------------------------------


============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {&GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n35n     (  0)  astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                         [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n24n     (  4)    ==>l2a (in &GPR_0x7ffb721899a0)
------------------------------
------------------------------
 n35n     (  0)  astore  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                         [0x7ffb720050e0] bci=[-1,18,559] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n24n     (  3)    ==>l2a (in &GPR_0x7ffb721899a0)
------------------------------

 [0x7ffb7218aac0]	mov	qword ptr [vfp], &GPR_0x7ffb721899a0		# S8MemReg, SymRef  <pending push temp 2>[#439  Auto] [flags 0x7 0x800 ]

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {&GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n34n     (  0)  treetop                                                                              [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n33n     (  2)    irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=2 vc=570 vn=- li=3 udi=- nc=1 flg=0x1000
 n193n    (  3)      ==>aRegLoad (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------
------------------------------
 n34n     (  0)  treetop                                                                              [0x7ffb72005090] bci=[-1,18,559] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n33n     (  1)    irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (in GPR_0x7ffb7218bda0) (cannotOverflow )  [0x7ffb72005040] bci=[-1,18,559] rc=1 vc=570 vn=- li=3 udi=48544 nc=1 flg=0x1000
 n193n    (  2)      ==>aRegLoad (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------

 [0x7ffb7218b000]	Label L0139:			# LABEL	# (Start of internal control flow)
 [0x7ffb7218b1b0]	mov	GPR_0x7ffb7218b0a0, dword ptr [&GPR_0x7ffb72184d30]		# L4RegMem
 [0x7ffb7218b240]	and	GPR_0x7ffb7218b0a0, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7218b360]	test	word ptr [GPR_0x7ffb7218b0a0+0x24], 0x0100	# TEST2MemImm2, SymRef [#441 +36]
 [0x7ffb7218b3f0]	jne	Outlined Label L0141			# JNE4
 [0x7ffb7218bc90]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72188ed0 : eax] [&GPR_0x7ffb72184d30 : ebx] [&GPR_0x7ffb72184d30 : esi] [&GPR_0x7ffb72184cb0 : r9d]
 [0x7ffb7218ba40]	Label L0140:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb7218b0a0 : NoReg] [GPR_0x7ffb7218b660 : eax] [&GPR_0x7ffb72184d30 : esi]
	POST: [GPR_0x7ffb7218b0a0 : NoReg] [GPR_0x7ffb7218b660 : eax] [&GPR_0x7ffb72184d30 : esi]
 [0x7ffb7218be20]	mov	GPR_0x7ffb7218bda0, dword ptr [&GPR_0x7ffb72184d30+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#443  Shadow +80] [flags 0x80603 0x0 ]

============================================================
; Live regs: GPR=6 FPR=0 VRF=0 {GPR_0x7ffb7218bda0, &GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n38n     (  0)  treetop                                                                              [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n37n     (  2)    icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ]  [0x7ffb72005180] bci=[-1,21,559] rc=2 vc=570 vn=- li=3 udi=- nc=1
 n33n     (  1)      ==>irdbari (in GPR_0x7ffb7218bda0) (cannotOverflow )
------------------------------
------------------------------
 n38n     (  0)  treetop                                                                              [0x7ffb720051d0] bci=[-1,21,559] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n37n     (  1)    icall  java/lang/reflect/Modifier.isStatic(I)Z[#365  static Method] [flags 0x500 0x0 ] (in GPR_0x7ffb7218d200)  [0x7ffb72005180] bci=[-1,21,559] rc=1 vc=570 vn=- li=3 udi=53760 nc=1
 n33n     (  0)      ==>irdbari (in GPR_0x7ffb7218bda0) (cannotOverflow )
------------------------------

 [0x7ffb7218d280]	Label L0143:			# LABEL	# (Start of internal control flow)
	 PRE: [GPR_0x7ffb7218bda0 : eax]
 [0x7ffb7218cbe0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7218cb40]	call	Snippet Label L0145     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb7218d570]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb7218b660 : eax] [&GPR_0x7ffb72184d30 : ebx] [&GPR_0x7ffb72184d30 : esi] [&GPR_0x7ffb72184cb0 : r9d]
 [0x7ffb7218d320]	Label L0144:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb7218bda0 : eax]
	POST: [D_GPR_0x7ffb7218cc80 : ecx] [D_GPR_0x7ffb7218cd00 : edx] [D_GPR_0x7ffb7218cd80 : edi] [D_GPR_0x7ffb7218ce00 : esi] [D_GPR_0x7ffb7218ce80 : r8d] [D_GPR_0x7ffb7218cf00 : r10d] [D_GPR_0x7ffb7218cf80 : r11d] [D_GPR_0x7ffb7218d000 : r12d] [D_GPR_0x7ffb7218d080 : r13d] [D_GPR_0x7ffb7218d100 : r14d] [D_GPR_0x7ffb7218d180 : r15d] [GPR_0x7ffb720099b0 : ebp] [GPR_0x7ffb7218d200 : eax]

============================================================
; Live regs: GPR=6 FPR=0 VRF=0 {GPR_0x7ffb7218d200, &GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n194n    (  0)  aRegStore ebx                                                                        [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n18n     (  3)    ==>acall (in &GPR_0x7ffb721864f0)
------------------------------
------------------------------
 n194n    (  0)  aRegStore ebx                                                                        [0x7ffb72082c60] bci=[-1,7,557] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n18n     (  2)    ==>acall (in &GPR_0x7ffb721864f0)
------------------------------


============================================================
; Live regs: GPR=6 FPR=0 VRF=0 {GPR_0x7ffb7218d200, &GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n195n    (  0)  aRegStore r8d                                                                        [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n24n     (  3)    ==>l2a (in &GPR_0x7ffb721899a0)
------------------------------
------------------------------
 n195n    (  0)  aRegStore r8d                                                                        [0x7ffb72082cb0] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=- nc=1
 n24n     (  2)    ==>l2a (in &GPR_0x7ffb721899a0)
------------------------------


============================================================
; Live regs: GPR=6 FPR=0 VRF=0 {GPR_0x7ffb7218d200, &GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n48n     (  0)  ificmpne --> block_4 BBStart at n40n ()                                              [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=570 vn=- li=3 udi=- nc=3 flg=0x20
 n37n     (  1)    ==>icall (in GPR_0x7ffb7218d200)
 n39n     (  1)    iconst 0 (X==0 X>=0 X<=0 )                                                         [0x7ffb72005220] bci=[-1,24,559] rc=1 vc=570 vn=- li=3 udi=- nc=0 flg=0x302
 n198n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=570 vn=- li=3 udi=- nc=5 flg=0x20
 n196n    (  1)      PassThrough r8                                                                   [0x7ffb72082d00] bci=[-1,14,558] rc=1 vc=570 vn=- li=3 udi=- nc=1
 n24n     (  2)        ==>l2a (in &GPR_0x7ffb721899a0)
 n191n    (  2)      ==>aRegLoad (in &GPR_0x7ffb72184c30)
 n192n    (  3)      ==>aRegLoad (in &GPR_0x7ffb72184cb0) (X>=0 SeenRealReference sharedMemory )
 n193n    (  2)      ==>aRegLoad (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )
 n197n    (  1)      PassThrough rbx                                                                  [0x7ffb72082d50] bci=[-1,7,557] rc=1 vc=570 vn=- li=3 udi=- nc=1
 n18n     (  2)        ==>acall (in &GPR_0x7ffb721864f0)
------------------------------
------------------------------
 n48n     (  0)  ificmpne --> block_4 BBStart at n40n ()                                              [0x7ffb720054f0] bci=[-1,24,559] rc=0 vc=570 vn=- li=3 udi=- nc=3 flg=0x20
 n37n     (  0)    ==>icall (in GPR_0x7ffb7218d200)
 n39n     (  0)    iconst 0 (X==0 X>=0 X<=0 )                                                         [0x7ffb72005220] bci=[-1,24,559] rc=0 vc=570 vn=- li=3 udi=- nc=0 flg=0x302
 n198n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082da0] bci=[-1,24,559] rc=1 vc=570 vn=- li=3 udi=- nc=5 flg=0x20
 n196n    (  0)      PassThrough r8                                                                   [0x7ffb72082d00] bci=[-1,14,558] rc=0 vc=570 vn=- li=3 udi=39328 nc=1
 n24n     (  1)        ==>l2a (in &GPR_0x7ffb721899a0)
 n191n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72184c30)
 n192n    (  2)      ==>aRegLoad (in &GPR_0x7ffb72184cb0) (X>=0 SeenRealReference sharedMemory )
 n193n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )
 n197n    (  0)      PassThrough rbx                                                                  [0x7ffb72082d50] bci=[-1,7,557] rc=0 vc=570 vn=- li=3 udi=25840 nc=1
 n18n     (  1)        ==>acall (in &GPR_0x7ffb721864f0)
------------------------------

 [0x7ffb7218db00]	test	GPR_0x7ffb7218d200, GPR_0x7ffb7218d200		# TEST4RegReg
 [0x7ffb7218dfc0]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb7218d200 : eax] [&GPR_0x7ffb72184d30 : ebx] [D_GPR_0x7ffb7218cc80 : ecx] [D_GPR_0x7ffb7218cd00 : edx] [D_GPR_0x7ffb7218cd80 : edi] [D_GPR_0x7ffb7218ce00 : esi] [D_GPR_0x7ffb7218ce80 : r8d] [&GPR_0x7ffb72184cb0 : r9d] [D_GPR_0x7ffb7218cf00 : r10d] [D_GPR_0x7ffb7218cf80 : r11d] [D_GPR_0x7ffb7218d000 : r12d] [D_GPR_0x7ffb7218d080 : r13d] [D_GPR_0x7ffb7218d100 : r14d] [D_GPR_0x7ffb7218d180 : r15d]
 [0x7ffb7218dd00]	jne	Label L0018			# JNE4
	 PRE: [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb721899a0 : r8d]
	POST: [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb721899a0 : r8d]

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {&GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n16n     (  0)  BBEnd </block_3>                                                                     [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=570 vn=- li=3 udi=- nc=0
------------------------------
------------------------------
 n16n     (  0)  BBEnd </block_3>                                                                     [0x7ffb72004af0] bci=[-1,24,559] rc=0 vc=570 vn=- li=3 udi=- nc=0
------------------------------

 [0x7ffb7218e210]	Fence Relative [ 00007FFB720509E4 ]	# FENCE BBEnd </block_3>

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {&GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n3n      (  0)  BBStart <block_5> (freq 766) (extension of previous block)                           [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=570 vn=- li=5 udi=- nc=0
------------------------------
------------------------------
 n3n      (  0)  BBStart <block_5> (freq 766) (extension of previous block)                           [0x7ffb720046e0] bci=[-1,31,559] rc=0 vc=570 vn=- li=5 udi=- nc=0
------------------------------

........................................
 [0x7ffb7218e330]	Fence Relative [ 00007FFB72050300 ]	# FENCE BBStart <block_5> (frequency 766) (extension of previous block)

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {&GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n70n     (  0)  NULLCHK on n192n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=570 vn=- li=5 udi=- nc=1
 n69n     (  2)    aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=2 vc=570 vn=- li=5 udi=- nc=1 flg=0x104
 n192n    (  2)      ==>aRegLoad (in &GPR_0x7ffb72184cb0) (X>=0 SeenRealReference sharedMemory )
------------------------------
------------------------------
 n70n     (  0)  NULLCHK on n192n [#32]                                                               [0x7ffb720805a0] bci=[-1,32,559] rc=0 vc=570 vn=- li=5 udi=- nc=1
 n69n     (  1)    aloadi  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ] (in GPR_0x7ffb7218e570) (X!=0 X>=0 sharedMemory )  [0x7ffb72080550] bci=[-1,32,559] rc=1 vc=570 vn=- li=5 udi=58736 nc=1 flg=0x104
 n192n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72184cb0) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------

 [0x7ffb7218e5f0]	mov	GPR_0x7ffb7218e570, dword ptr [&GPR_0x7ffb72184cb0]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb7218e680]	and	GPR_0x7ffb7218e570, 0xffffffffffffff00	# AND8RegImm4

============================================================
; Live regs: GPR=6 FPR=0 VRF=0 {GPR_0x7ffb7218e570, &GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n199n    (  0)  aRegStore edi                                                                        [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=570 vn=- li=5 udi=- nc=1
 n72n     (  3)    aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=3 vc=570 vn=- li=5 udi=- nc=1 flg=0x4
 n69n     (  1)      ==>aloadi (in GPR_0x7ffb7218e570) (X!=0 X>=0 sharedMemory )
------------------------------
------------------------------
 n199n    (  0)  aRegStore edi                                                                        [0x7ffb72082df0] bci=[-1,32,559] rc=0 vc=570 vn=- li=5 udi=- nc=1
 n72n     (  2)    aloadi  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ] (in &GPR_0x7ffb7218e9a0) (X!=0 sharedMemory )  [0x7ffb72080640] bci=[-1,32,559] rc=2 vc=570 vn=- li=5 udi=59808 nc=1 flg=0x4
 n69n     (  0)      ==>aloadi (in GPR_0x7ffb7218e570) (X!=0 X>=0 sharedMemory )
------------------------------

 [0x7ffb7218ea20]	mov	&GPR_0x7ffb7218e9a0, qword ptr [GPR_0x7ffb7218e570+0x30]		# L8RegMem, SymRef  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]

============================================================
; Live regs: GPR=6 FPR=0 VRF=0 {&GPR_0x7ffb7218e9a0, &GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n73n     (  0)  astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )    [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=570 vn=- li=5 udi=- nc=1 flg=0x4
 n72n     (  2)    ==>aloadi (in &GPR_0x7ffb7218e9a0) (X!=0 sharedMemory )
------------------------------
------------------------------
 n73n     (  0)  astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )    [0x7ffb72080690] bci=[-1,35,559] rc=0 vc=570 vn=- li=5 udi=- nc=1 flg=0x4
 n72n     (  1)    ==>aloadi (in &GPR_0x7ffb7218e9a0) (X!=0 sharedMemory )
------------------------------

 [0x7ffb7218ed00]	mov	qword ptr [vfp], &GPR_0x7ffb7218e9a0		# S8MemReg, SymRef  <pending push temp 3>[#447  Auto] [flags 0x7 0x800 ]

============================================================
; Live regs: GPR=6 FPR=0 VRF=0 {&GPR_0x7ffb7218e9a0, &GPR_0x7ffb721899a0, &GPR_0x7ffb721864f0, &GPR_0x7ffb72184d30, &GPR_0x7ffb72184cb0, &GPR_0x7ffb72184c30}
------------------------------
 n4n      (  0)  BBEnd </block_5> =====                                                               [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=570 vn=- li=5 udi=- nc=1
 n203n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=570 vn=- li=5 udi=- nc=6 flg=0x20
 n200n    (  1)      PassThrough rdi                                                                  [0x7ffb72082e40] bci=[-1,32,559] rc=1 vc=570 vn=- li=5 udi=- nc=1
 n72n     (  1)        ==>aloadi (in &GPR_0x7ffb7218e9a0) (X!=0 sharedMemory )
 n201n    (  1)      PassThrough r8                                                                   [0x7ffb72082e90] bci=[-1,14,558] rc=1 vc=570 vn=- li=5 udi=- nc=1
 n24n     (  1)        ==>l2a (in &GPR_0x7ffb721899a0)
 n191n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72184c30)
 n192n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72184cb0) (X!=0 X>=0 SeenRealReference sharedMemory )
 n193n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )
 n202n    (  1)      PassThrough rbx                                                                  [0x7ffb72082ee0] bci=[-1,7,557] rc=1 vc=570 vn=- li=5 udi=- nc=1
 n18n     (  1)        ==>acall (in &GPR_0x7ffb721864f0)
------------------------------
------------------------------
 n4n      (  0)  BBEnd </block_5> =====                                                               [0x7ffb72004730] bci=[-1,35,559] rc=0 vc=570 vn=- li=5 udi=- nc=1
 n203n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082f30] bci=[-1,35,559] rc=1 vc=570 vn=- li=5 udi=- nc=6 flg=0x20
 n200n    (  0)      PassThrough rdi                                                                  [0x7ffb72082e40] bci=[-1,32,559] rc=0 vc=570 vn=- li=5 udi=59808 nc=1
 n72n     (  0)        ==>aloadi (in &GPR_0x7ffb7218e9a0) (X!=0 sharedMemory )
 n201n    (  0)      PassThrough r8                                                                   [0x7ffb72082e90] bci=[-1,14,558] rc=0 vc=570 vn=- li=5 udi=39328 nc=1
 n24n     (  0)        ==>l2a (in &GPR_0x7ffb721899a0)
 n191n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72184c30)
 n192n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72184cb0) (X!=0 X>=0 SeenRealReference sharedMemory )
 n193n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72184d30) (X!=0 X>=0 SeenRealReference sharedMemory )
 n202n    (  0)      PassThrough rbx                                                                  [0x7ffb72082ee0] bci=[-1,7,557] rc=0 vc=570 vn=- li=5 udi=25840 nc=1
 n18n     (  0)        ==>acall (in &GPR_0x7ffb721864f0)
------------------------------

 [0x7ffb7218f010]	Fence Relative [ 00007FFB72050304 ]	# FENCE BBEnd </block_5>
 [0x7ffb7218f250]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb721899a0 : r8d] [&GPR_0x7ffb72184cb0 : r9d]
 [0x7ffb7218f740]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb721899a0 : r8d] [&GPR_0x7ffb72184cb0 : r9d]
 [0x7ffb7218f4f0]	Label L0160:			# LABEL
	 PRE: [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb721899a0 : r8d] [&GPR_0x7ffb7218e9a0 : edi]
	POST: [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb721899a0 : r8d] [&GPR_0x7ffb7218e9a0 : edi]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n5n      (  0)  BBStart <block_6> (freq 785)                                                         [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=570 vn=- li=6 udi=- nc=1
 n204n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=570 vn=- li=6 udi=- nc=6 flg=0x20
 n205n    (  2)      aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=2 vc=570 vn=- li=6 udi=- nc=0 flg=0x8000
 n206n    (  2)      aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=2 vc=570 vn=- li=6 udi=- nc=0 flg=0x8000
 n207n    (  2)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083070] bci=[-1,35,559] rc=2 vc=570 vn=- li=6 udi=- nc=0
 n208n    (  2)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720830c0] bci=[-1,35,559] rc=2 vc=570 vn=- li=6 udi=- nc=0
 n209n    (  4)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=4 vc=570 vn=- li=6 udi=- nc=0 flg=0x8104
 n210n    (  2)      aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=2 vc=570 vn=- li=6 udi=- nc=0 flg=0x8000
------------------------------
------------------------------
 n5n      (  0)  BBStart <block_6> (freq 785)                                                         [0x7ffb72004780] bci=[-1,35,559] rc=0 vc=570 vn=- li=6 udi=- nc=1
 n204n    (  1)    GlRegDeps ()                                                                       [0x7ffb72082f80] bci=[-1,35,559] rc=1 vc=570 vn=- li=6 udi=- nc=6 flg=0x20
 n205n    (  1)      aRegLoad edi   <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (in &GPR_0x7ffb7218fde0) (SeenRealReference sharedMemory )  [0x7ffb72082fd0] bci=[-1,28,559] rc=1 vc=570 vn=- li=6 udi=64992 nc=0 flg=0x8000
 n206n    (  1)      aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (in &GPR_0x7ffb7218fe60) (SeenRealReference sharedMemory )  [0x7ffb72083020] bci=[-1,28,559] rc=1 vc=570 vn=- li=6 udi=65120 nc=0 flg=0x8000
 n207n    (  1)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7218fee0)  [0x7ffb72083070] bci=[-1,35,559] rc=1 vc=570 vn=- li=6 udi=65248 nc=0
 n208n    (  1)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7218ff60)  [0x7ffb720830c0] bci=[-1,35,559] rc=1 vc=570 vn=- li=6 udi=65376 nc=0
 n209n    (  3)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72220000) (X!=0 X>=0 SeenRealReference sharedMemory )  [0x7ffb72083110] bci=[-1,35,559] rc=3 vc=570 vn=- li=6 udi=- nc=0 flg=0x8104
 n210n    (  1)      aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (in &GPR_0x7ffb72220080) (SeenRealReference sharedMemory )  [0x7ffb72083160] bci=[-1,28,559] rc=1 vc=570 vn=- li=6 udi=128 nc=0 flg=0x8000
------------------------------

 [0x7ffb72220510]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb722202c0]	Label L0021:			# LABEL
	 PRE: [&GPR_0x7ffb72220080 : ebx] [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb7218ff60 : esi] [&GPR_0x7ffb7218fee0 : edx] [&GPR_0x7ffb7218fe60 : r8d] [&GPR_0x7ffb7218fde0 : edi]
	POST: [&GPR_0x7ffb72220080 : ebx] [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb7218ff60 : esi] [&GPR_0x7ffb7218fee0 : edx] [&GPR_0x7ffb7218fe60 : r8d] [&GPR_0x7ffb7218fde0 : edi]
========================================
 [0x7ffb72220590]	Fence Relative [ 00007FFB72050430 ]	# FENCE BBStart <block_6> (frequency 785)

============================================================
; Live regs: GPR=6 FPR=0 VRF=0 {&GPR_0x7ffb72220080, &GPR_0x7ffb72220000, &GPR_0x7ffb7218ff60, &GPR_0x7ffb7218fee0, &GPR_0x7ffb7218fe60, &GPR_0x7ffb7218fde0}
------------------------------
 n88n     (  0)  treetop                                                                              [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=570 vn=- li=6 udi=- nc=1
 n87n     (  2)    irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=2 vc=570 vn=- li=6 udi=- nc=1 flg=0x1000
 n209n    (  3)      ==>aRegLoad (in &GPR_0x7ffb72220000) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------
------------------------------
 n88n     (  0)  treetop                                                                              [0x7ffb72080b40] bci=[-1,36,559] rc=0 vc=570 vn=- li=6 udi=- nc=1
 n87n     (  1)    irdbari  java/lang/reflect/Method.modifiers I[#362  Shadow +80] [flags 0x80603 0x0 ] (in GPR_0x7ffb72221cb0) (cannotOverflow )  [0x7ffb72080af0] bci=[-1,36,559] rc=1 vc=570 vn=- li=6 udi=7344 nc=1 flg=0x1000
 n209n    (  2)      ==>aRegLoad (in &GPR_0x7ffb72220000) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------

 [0x7ffb72220ed0]	Label L0177:			# LABEL	# (Start of internal control flow)
 [0x7ffb72221080]	mov	GPR_0x7ffb72220f70, dword ptr [&GPR_0x7ffb72220000]		# L4RegMem
 [0x7ffb72221110]	and	GPR_0x7ffb72220f70, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72221230]	test	word ptr [GPR_0x7ffb72220f70+0x24], 0x0100	# TEST2MemImm2, SymRef [#449 +36]
 [0x7ffb722212c0]	jne	Outlined Label L0179			# JNE4
 [0x7ffb72221ba0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb72220080 : ebx] [&GPR_0x7ffb7218fee0 : edx] [&GPR_0x7ffb7218fde0 : edi] [&GPR_0x7ffb7218ff60 : esi] [&GPR_0x7ffb7218fe60 : r8d]
 [0x7ffb72221950]	Label L0178:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb72220f70 : NoReg] [GPR_0x7ffb72221530 : eax] [&GPR_0x7ffb72220000 : esi]
	POST: [GPR_0x7ffb72220f70 : NoReg] [GPR_0x7ffb72221530 : eax] [&GPR_0x7ffb72220000 : esi]
 [0x7ffb72221d30]	mov	GPR_0x7ffb72221cb0, dword ptr [&GPR_0x7ffb72220000+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#451  Shadow +80] [flags 0x80603 0x0 ]

============================================================
; Live regs: GPR=7 FPR=0 VRF=0 {GPR_0x7ffb72221cb0, &GPR_0x7ffb72220080, &GPR_0x7ffb72220000, &GPR_0x7ffb7218ff60, &GPR_0x7ffb7218fee0, &GPR_0x7ffb7218fe60, &GPR_0x7ffb7218fde0}
------------------------------
 n90n     (  0)  treetop                                                                              [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=570 vn=- li=6 udi=- nc=1
 n89n     (  1)    call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=1 vc=570 vn=- li=6 udi=- nc=5 flg=0x20
 n209n    (  2)      ==>aRegLoad (in &GPR_0x7ffb72220000) (X!=0 X>=0 SeenRealReference sharedMemory )
 n210n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72220080) (SeenRealReference sharedMemory )
 n206n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7218fe60) (SeenRealReference sharedMemory )
 n205n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7218fde0) (SeenRealReference sharedMemory )
 n87n     (  1)      ==>irdbari (in GPR_0x7ffb72221cb0) (cannotOverflow )
------------------------------
------------------------------
 n90n     (  0)  treetop                                                                              [0x7ffb72080be0] bci=[-1,39,558] rc=0 vc=570 vn=- li=6 udi=- nc=1
 n89n     (  0)    call  java/lang/reflect/AccessibleObject.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V[#378  final virtual Method -184] [flags 0x20500 0x0 ] ()  [0x7ffb72080b90] bci=[-1,39,558] rc=0 vc=570 vn=- li=6 udi=- nc=5 flg=0x20
 n209n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72220000) (X!=0 X>=0 SeenRealReference sharedMemory )
 n210n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72220080) (SeenRealReference sharedMemory )
 n206n    (  0)      ==>aRegLoad (in &GPR_0x7ffb7218fe60) (SeenRealReference sharedMemory )
 n205n    (  0)      ==>aRegLoad (in &GPR_0x7ffb7218fde0) (SeenRealReference sharedMemory )
 n87n     (  0)      ==>irdbari (in GPR_0x7ffb72221cb0) (cannotOverflow )
------------------------------

 [0x7ffb72222920]	mov	&GPR_0x7ffb722228a0, &GPR_0x7ffb72220000		# MOV8RegReg
 [0x7ffb72222a40]	mov	qword ptr [rsp], GPR_0x7ffb72221cb0		# S8MemReg
 [0x7ffb722233c0]	Label L0181:			# LABEL	# (Start of internal control flow)
	 PRE: [&GPR_0x7ffb722228a0 : eax] [&GPR_0x7ffb72220080 : esi] [&GPR_0x7ffb7218fe60 : edx] [&GPR_0x7ffb7218fde0 : ecx]
 [0x7ffb72222d20]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72222c80]	call	Snippet Label L0183     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb722236b0]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72221530 : eax] [&GPR_0x7ffb72220080 : ebx] [&GPR_0x7ffb7218fee0 : edx] [&GPR_0x7ffb7218fde0 : edi] [&GPR_0x7ffb72220000 : esi] [&GPR_0x7ffb7218fe60 : r8d]
 [0x7ffb72223460]	Label L0182:			# LABEL	# (End of internal control flow)
	 PRE: [&GPR_0x7ffb722228a0 : eax] [&GPR_0x7ffb72220080 : esi] [&GPR_0x7ffb7218fe60 : edx] [&GPR_0x7ffb7218fde0 : ecx]
	POST: [D_GPR_0x7ffb72222dc0 : eax] [D_GPR_0x7ffb72222e40 : ecx] [D_GPR_0x7ffb72222ec0 : edx] [D_GPR_0x7ffb72222f40 : edi] [D_GPR_0x7ffb72222fc0 : esi] [D_GPR_0x7ffb72223040 : r8d] [D_GPR_0x7ffb722230c0 : r10d] [D_GPR_0x7ffb72223140 : r11d] [D_GPR_0x7ffb722231c0 : r12d] [D_GPR_0x7ffb72223240 : r13d] [D_GPR_0x7ffb722232c0 : r14d] [D_GPR_0x7ffb72223340 : r15d] [GPR_0x7ffb720099b0 : ebp]

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb72220000, &GPR_0x7ffb7218ff60, &GPR_0x7ffb7218fee0}
------------------------------
 n6n      (  0)  BBEnd </block_6>                                                                     [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=570 vn=- li=6 udi=- nc=0
------------------------------
------------------------------
 n6n      (  0)  BBEnd </block_6>                                                                     [0x7ffb720047d0] bci=[-1,42,562] rc=0 vc=570 vn=- li=6 udi=- nc=0
------------------------------

 [0x7ffb72223b40]	Fence Relative [ 00007FFB72050434 ]	# FENCE BBEnd </block_6>

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb72220000, &GPR_0x7ffb7218ff60, &GPR_0x7ffb7218fee0}
------------------------------
 n159n    (  0)  BBStart <block_12> (freq 785) (extension of previous block)                          [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=570 vn=- li=12 udi=- nc=0
------------------------------
------------------------------
 n159n    (  0)  BBStart <block_12> (freq 785) (extension of previous block)                          [0x7ffb72082170] bci=[-1,42,562] rc=0 vc=570 vn=- li=12 udi=- nc=0
------------------------------

........................................
 [0x7ffb72223c60]	Fence Relative [ 00007FFB7215B1B0 ]	# FENCE BBStart <block_12> (frequency 785) (extension of previous block)

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb72220000, &GPR_0x7ffb7218ff60, &GPR_0x7ffb7218fee0}
------------------------------
 n161n    (  0)  goto --> block_7 BBStart at n1n                                                      [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=570 vn=- li=12 udi=- nc=1
 n211n    (  1)    GlRegDeps ()                                                                       [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=570 vn=- li=12 udi=- nc=3 flg=0x20
 n207n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7218fee0)
 n208n    (  1)      ==>aRegLoad (in &GPR_0x7ffb7218ff60)
 n209n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72220000) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------
------------------------------
 n161n    (  0)  goto --> block_7 BBStart at n1n                                                      [0x7ffb72082210] bci=[-1,39,558] rc=0 vc=570 vn=- li=12 udi=- nc=1
 n211n    (  1)    GlRegDeps ()                                                                       [0x7ffb720831b0] bci=[-1,39,558] rc=1 vc=570 vn=- li=12 udi=- nc=3 flg=0x20
 n207n    (  0)      ==>aRegLoad (in &GPR_0x7ffb7218fee0)
 n208n    (  0)      ==>aRegLoad (in &GPR_0x7ffb7218ff60)
 n209n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72220000) (X!=0 X>=0 SeenRealReference sharedMemory )
------------------------------

 [0x7ffb722240f0]	assocRegs                       # ASSOCREGS
	POST: [D_GPR_0x7ffb72222dc0 : eax] [&GPR_0x7ffb72220000 : ebx] [D_GPR_0x7ffb72222e40 : ecx] [D_GPR_0x7ffb72222ec0 : edx] [D_GPR_0x7ffb72222f40 : edi] [D_GPR_0x7ffb72222fc0 : esi] [D_GPR_0x7ffb72223040 : r8d] [&GPR_0x7ffb7218ff60 : r9d] [D_GPR_0x7ffb722230c0 : r10d] [D_GPR_0x7ffb72223140 : r11d] [D_GPR_0x7ffb722231c0 : r12d] [D_GPR_0x7ffb72223240 : r13d] [D_GPR_0x7ffb722232c0 : r14d] [D_GPR_0x7ffb72223340 : r15d]
 [0x7ffb72223ea0]	jmp	Label L0019			# JMP4
	 PRE: [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb7218ff60 : esi] [&GPR_0x7ffb7218fee0 : edx]
	POST: [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb7218ff60 : esi] [&GPR_0x7ffb7218fee0 : edx]

============================================================
	block_12 branches backwards, so free all symbols in the _variableSizeSymRefPendingFreeList
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n160n    (  0)  BBEnd </block_12> =====                                                              [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=570 vn=- li=12 udi=- nc=0
------------------------------
------------------------------
 n160n    (  0)  BBEnd </block_12> =====                                                              [0x7ffb720821c0] bci=[-1,42,562] rc=0 vc=570 vn=- li=12 udi=- nc=0
------------------------------

 [0x7ffb72224260]	Fence Relative [ 00007FFB7215B1B4 ]	# FENCE BBEnd </block_12>
 [0x7ffb722244a0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb7218fee0 : edx] [&GPR_0x7ffb7218ff60 : esi]
 [0x7ffb72224580]	Label L0192:			# LABEL

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n57n     (  0)  BBStart <block_8> (freq 180)                                                         [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
 n212n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=570 vn=- li=8 udi=- nc=3 flg=0x20
 n213n    (  2)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083250] bci=[-1,51,564] rc=2 vc=570 vn=- li=8 udi=- nc=0
 n214n    (  2)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720832a0] bci=[-1,51,564] rc=2 vc=570 vn=- li=8 udi=- nc=0
 n215n    (  2)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=2 vc=570 vn=- li=8 udi=- nc=0 flg=0x8004
------------------------------
------------------------------
 n57n     (  0)  BBStart <block_8> (freq 180)                                                         [0x7ffb72080190] bci=[-1,51,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
 n212n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083200] bci=[-1,51,564] rc=1 vc=570 vn=- li=8 udi=- nc=3 flg=0x20
 n213n    (  1)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72224910)  [0x7ffb72083250] bci=[-1,51,564] rc=1 vc=570 vn=- li=8 udi=18704 nc=0
 n214n    (  1)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72224990)  [0x7ffb720832a0] bci=[-1,51,564] rc=1 vc=570 vn=- li=8 udi=18832 nc=0
 n215n    (  1)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72224a10) (X!=0 SeenRealReference sharedMemory )  [0x7ffb720832f0] bci=[-1,51,564] rc=1 vc=570 vn=- li=8 udi=18960 nc=0 flg=0x8004
------------------------------

 [0x7ffb72224dd0]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb72224b80]	Label L0017:			# LABEL
	 PRE: [&GPR_0x7ffb72224a10 : eax] [&GPR_0x7ffb72224990 : esi] [&GPR_0x7ffb72224910 : edx]
	POST: [&GPR_0x7ffb72224a10 : eax] [&GPR_0x7ffb72224990 : esi] [&GPR_0x7ffb72224910 : edx]
========================================
 [0x7ffb72224e50]	Fence Relative [ 00007FFB72071210 ]	# FENCE BBStart <block_8> (frequency 180)

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb72224a10, &GPR_0x7ffb72224990, &GPR_0x7ffb72224910}
------------------------------
 n77n     (  0)  treetop                                                                              [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
 n76n     (  4)    acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ]  [0x7ffb72080780] bci=[-1,52,564] rc=4 vc=570 vn=- li=8 udi=- nc=1
 n215n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72224a10) (X!=0 SeenRealReference sharedMemory )
------------------------------
------------------------------
 n77n     (  0)  treetop                                                                              [0x7ffb720807d0] bci=[-1,52,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
 n76n     (  3)    acall  java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;[#371  final special Method] [flags 0x20500 0x0 ] (in &GPR_0x7ffb722261d0)  [0x7ffb72080780] bci=[-1,52,564] rc=3 vc=570 vn=- li=8 udi=25040 nc=1
 n215n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72224a10) (X!=0 SeenRealReference sharedMemory )
------------------------------

 [0x7ffb72226a50]	Label L0208:			# LABEL	# (Start of internal control flow)
	 PRE: [&GPR_0x7ffb72224a10 : eax]
 [0x7ffb72225bb0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72225b10]	call	Snippet Label L0210     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72226d40]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72224a10 : eax] [&GPR_0x7ffb72224910 : edx] [&GPR_0x7ffb72224990 : esi]
 [0x7ffb72226af0]	Label L0209:			# LABEL	# (End of internal control flow)
	 PRE: [&GPR_0x7ffb72224a10 : eax]
	POST: [D_GPR_0x7ffb72225c50 : ecx] [D_GPR_0x7ffb72225cd0 : edx] [D_GPR_0x7ffb72225d50 : edi] [D_GPR_0x7ffb72225dd0 : esi] [D_GPR_0x7ffb72225e50 : r8d] [D_GPR_0x7ffb72225ed0 : r10d] [D_GPR_0x7ffb72225f50 : r11d] [D_GPR_0x7ffb72225fd0 : r12d] [D_GPR_0x7ffb72226050 : r13d] [D_GPR_0x7ffb722260d0 : r14d] [D_GPR_0x7ffb72226150 : r15d] [GPR_0x7ffb720099b0 : ebp] [&GPR_0x7ffb722261d0 : eax]

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb722261d0, &GPR_0x7ffb72224990, &GPR_0x7ffb72224910}
------------------------------
 n217n    (  0)  aRegStore ebx                                                                        [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
 n76n     (  3)    ==>acall (in &GPR_0x7ffb722261d0)
------------------------------
------------------------------
 n217n    (  0)  aRegStore ebx                                                                        [0x7ffb72083390] bci=[-1,52,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
 n76n     (  2)    ==>acall (in &GPR_0x7ffb722261d0)
------------------------------


============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb722261d0, &GPR_0x7ffb72224990, &GPR_0x7ffb72224910}
------------------------------
 n78n     (  0)  astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                             [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
 n76n     (  2)    ==>acall (in &GPR_0x7ffb722261d0)
------------------------------
------------------------------
 n78n     (  0)  astore  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                             [0x7ffb72080820] bci=[-1,55,564] rc=0 vc=570 vn=- li=8 udi=- nc=1
 n76n     (  1)    ==>acall (in &GPR_0x7ffb722261d0)
------------------------------

 [0x7ffb722272c0]	mov	qword ptr [vfp], &GPR_0x7ffb722261d0		# S8MemReg, SymRef  caller<auto slot 3>[#455  Auto] [flags 0x7 0x0 ]

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb722261d0, &GPR_0x7ffb72224990, &GPR_0x7ffb72224910}
------------------------------
 n58n     (  0)  BBEnd </block_8>                                                                     [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=570 vn=- li=8 udi=- nc=0
------------------------------
------------------------------
 n58n     (  0)  BBEnd </block_8>                                                                     [0x7ffb720801e0] bci=[-1,55,564] rc=0 vc=570 vn=- li=8 udi=- nc=0
------------------------------

 [0x7ffb72227510]	Fence Relative [ 00007FFB72071214 ]	# FENCE BBEnd </block_8>

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb722261d0, &GPR_0x7ffb72224990, &GPR_0x7ffb72224910}
------------------------------
 n162n    (  0)  BBStart <block_13> (freq 180) (extension of previous block)                          [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=570 vn=- li=13 udi=- nc=0
------------------------------
------------------------------
 n162n    (  0)  BBStart <block_13> (freq 180) (extension of previous block)                          [0x7ffb72082260] bci=[-1,56,566] rc=0 vc=570 vn=- li=13 udi=- nc=0
------------------------------

........................................
 [0x7ffb72227630]	Fence Relative [ 00007FFB7215B3A0 ]	# FENCE BBStart <block_13> (frequency 180) (extension of previous block)

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb722261d0, &GPR_0x7ffb72224990, &GPR_0x7ffb72224910}
------------------------------
 n164n    (  0)  goto --> block_9 BBStart at n7n                                                      [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=570 vn=- li=13 udi=- nc=1
 n219n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=570 vn=- li=13 udi=- nc=3 flg=0x20
 n213n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72224910)
 n214n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72224990)
 n218n    (  1)      PassThrough rbx                                                                  [0x7ffb720833e0] bci=[-1,52,564] rc=1 vc=570 vn=- li=13 udi=- nc=1
 n76n     (  1)        ==>acall (in &GPR_0x7ffb722261d0)
------------------------------
------------------------------
 n164n    (  0)  goto --> block_9 BBStart at n7n                                                      [0x7ffb72082300] bci=[-1,55,564] rc=0 vc=570 vn=- li=13 udi=- nc=1
 n219n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083430] bci=[-1,55,564] rc=1 vc=570 vn=- li=13 udi=- nc=3 flg=0x20
 n213n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72224910)
 n214n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72224990)
 n218n    (  0)      PassThrough rbx                                                                  [0x7ffb720833e0] bci=[-1,52,564] rc=0 vc=570 vn=- li=13 udi=25040 nc=1
 n76n     (  0)        ==>acall (in &GPR_0x7ffb722261d0)
------------------------------

 [0x7ffb72227b60]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb722261d0 : eax] [&GPR_0x7ffb72224990 : ebx] [D_GPR_0x7ffb72225c50 : ecx] [D_GPR_0x7ffb72225cd0 : edx] [D_GPR_0x7ffb72225d50 : edi] [D_GPR_0x7ffb72225dd0 : esi] [D_GPR_0x7ffb72225e50 : r8d] [&GPR_0x7ffb72224910 : r9d] [D_GPR_0x7ffb72225ed0 : r10d] [D_GPR_0x7ffb72225f50 : r11d] [D_GPR_0x7ffb72225fd0 : r12d] [D_GPR_0x7ffb72226050 : r13d] [D_GPR_0x7ffb722260d0 : r14d] [D_GPR_0x7ffb72226150 : r15d]
 [0x7ffb722278a0]	jmp	Label L0020			# JMP4
	 PRE: [&GPR_0x7ffb722261d0 : ebx] [&GPR_0x7ffb72224990 : esi] [&GPR_0x7ffb72224910 : edx]
	POST: [&GPR_0x7ffb722261d0 : ebx] [&GPR_0x7ffb72224990 : esi] [&GPR_0x7ffb72224910 : edx]

============================================================
	block_13 branches backwards, so free all symbols in the _variableSizeSymRefPendingFreeList
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n163n    (  0)  BBEnd </block_13> =====                                                              [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=570 vn=- li=13 udi=- nc=0
------------------------------
------------------------------
 n163n    (  0)  BBEnd </block_13> =====                                                              [0x7ffb720822b0] bci=[-1,56,566] rc=0 vc=570 vn=- li=13 udi=- nc=0
------------------------------

 [0x7ffb72227d00]	Fence Relative [ 00007FFB7215B3A4 ]	# FENCE BBEnd </block_13>
 [0x7ffb72227f40]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb722261d0 : ebx] [&GPR_0x7ffb72224910 : edx] [&GPR_0x7ffb72224990 : esi]
 [0x7ffb72228020]	Label L0224:			# LABEL

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n40n     (  0)  BBStart <block_4> (freq 24)                                                          [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=570 vn=- li=4 udi=- nc=1
 n220n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=570 vn=- li=4 udi=- nc=5 flg=0x20
 n221n    (  2)      aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]              [0x7ffb720834d0] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0
 n222n    (  2)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083520] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0
 n223n    (  2)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb72083570] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0
 n224n    (  2)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720835c0] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0
 n225n    (  2)      aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                  [0x7ffb72083610] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0
------------------------------
------------------------------
 n40n     (  0)  BBStart <block_4> (freq 24)                                                          [0x7ffb72005270] bci=[-1,27,559] rc=0 vc=570 vn=- li=4 udi=- nc=1
 n220n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083480] bci=[-1,27,559] rc=1 vc=570 vn=- li=4 udi=- nc=5 flg=0x20
 n221n    (  1)      aRegLoad r8d   <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (in &GPR_0x7ffb72228510)  [0x7ffb720834d0] bci=[-1,27,559] rc=1 vc=570 vn=- li=4 udi=34064 nc=0
 n222n    (  1)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72228590)  [0x7ffb72083520] bci=[-1,27,559] rc=1 vc=570 vn=- li=4 udi=34192 nc=0
 n223n    (  1)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72228610)  [0x7ffb72083570] bci=[-1,27,559] rc=1 vc=570 vn=- li=4 udi=34320 nc=0
 n224n    (  1)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb72228690)  [0x7ffb720835c0] bci=[-1,27,559] rc=1 vc=570 vn=- li=4 udi=34448 nc=0
 n225n    (  1)      aRegLoad ebx   caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (in &GPR_0x7ffb72228710)  [0x7ffb72083610] bci=[-1,27,559] rc=1 vc=570 vn=- li=4 udi=34576 nc=0
------------------------------

 [0x7ffb72228b50]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb72228900]	Label L0018:			# LABEL
	 PRE: [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228590 : edx] [&GPR_0x7ffb72228510 : r8d]
	POST: [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228590 : edx] [&GPR_0x7ffb72228510 : r8d]
========================================
 [0x7ffb72228bd0]	Fence Relative [ 00007FFB72070EB0 ]	# FENCE BBStart <block_4> (frequency 24)

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {&GPR_0x7ffb72228710, &GPR_0x7ffb72228690, &GPR_0x7ffb72228610, &GPR_0x7ffb72228590, &GPR_0x7ffb72228510}
------------------------------
 n64n     (  0)  astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )    [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=570 vn=- li=4 udi=- nc=1 flg=0x2
 n60n     (  3)    aconst NULL (X==0 sharedMemory )                                                   [0x7ffb72080280] bci=[-1,27,559] rc=3 vc=570 vn=- li=4 udi=- nc=0 flg=0x2
------------------------------
------------------------------
 n64n     (  0)  astore  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (X==0 sharedMemory )    [0x7ffb720803c0] bci=[-1,28,559] rc=0 vc=570 vn=- li=4 udi=- nc=1 flg=0x2
 n60n     (  2)    aconst NULL (X==0 sharedMemory )                                                   [0x7ffb72080280] bci=[-1,27,559] rc=2 vc=570 vn=- li=4 udi=- nc=0 flg=0x2
------------------------------

 [0x7ffb72229270]	mov	qword ptr [vfp], 0x00000000	# S8MemImm4, SymRef  <pending push temp 3>[#456  Auto] [flags 0x7 0x800 ]

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {&GPR_0x7ffb72228710, &GPR_0x7ffb72228690, &GPR_0x7ffb72228610, &GPR_0x7ffb72228590, &GPR_0x7ffb72228510}
------------------------------
 n226n    (  0)  aRegStore edi                                                                        [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=570 vn=- li=4 udi=- nc=1
 n60n     (  2)    ==>aconst NULL (X==0 sharedMemory )
------------------------------
------------------------------
 n226n    (  0)  aRegStore edi                                                                        [0x7ffb72083660] bci=[-1,27,559] rc=0 vc=570 vn=- li=4 udi=- nc=1
 n60n     (  1)    ==>aconst NULL (in GPR_0x7ffb722294c0) (X==0 sharedMemory )
------------------------------

 [0x7ffb72229540]	xor	GPR_0x7ffb722294c0, GPR_0x7ffb722294c0		# XOR4RegReg

============================================================
; Live regs: GPR=6 FPR=0 VRF=0 {GPR_0x7ffb722294c0, &GPR_0x7ffb72228710, &GPR_0x7ffb72228690, &GPR_0x7ffb72228610, &GPR_0x7ffb72228590, &GPR_0x7ffb72228510}
------------------------------
 n67n     (  0)  goto --> block_6 BBStart at n5n                                                      [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=570 vn=- li=4 udi=- nc=1
 n228n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=570 vn=- li=4 udi=- nc=6 flg=0x20
 n227n    (  1)      PassThrough rdi                                                                  [0x7ffb720836b0] bci=[-1,27,559] rc=1 vc=570 vn=- li=4 udi=- nc=1
 n60n     (  1)        ==>aconst NULL (in GPR_0x7ffb722294c0) (X==0 sharedMemory )
 n221n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72228510)
 n222n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72228590)
 n223n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72228610)
 n224n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72228690)
 n225n    (  1)      ==>aRegLoad (in &GPR_0x7ffb72228710)
------------------------------
------------------------------
 n67n     (  0)  goto --> block_6 BBStart at n5n                                                      [0x7ffb720804b0] bci=[-1,28,559] rc=0 vc=570 vn=- li=4 udi=- nc=1
 n228n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083700] bci=[-1,28,559] rc=1 vc=570 vn=- li=4 udi=- nc=6 flg=0x20
 n227n    (  0)      PassThrough rdi                                                                  [0x7ffb720836b0] bci=[-1,27,559] rc=0 vc=570 vn=- li=4 udi=38080 nc=1
 n60n     (  0)        ==>aconst NULL (in GPR_0x7ffb722294c0) (X==0 sharedMemory )
 n221n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72228510)
 n222n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72228590)
 n223n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72228610)
 n224n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72228690)
 n225n    (  0)      ==>aRegLoad (in &GPR_0x7ffb72228710)
------------------------------

 [0x7ffb72229b90]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228590 : edx] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228510 : r8d]
 [0x7ffb722298d0]	jmp	Label L0021			# JMP4
	 PRE: [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228590 : edx] [&GPR_0x7ffb72228510 : r8d] [GPR_0x7ffb722294c0 : edi]
	POST: [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228590 : edx] [&GPR_0x7ffb72228510 : r8d] [GPR_0x7ffb722294c0 : edi]

============================================================
	block_4 branches backwards, so free all symbols in the _variableSizeSymRefPendingFreeList
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n41n     (  0)  BBEnd </block_4> =====                                                               [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=570 vn=- li=4 udi=- nc=0
------------------------------
------------------------------
 n41n     (  0)  BBEnd </block_4> =====                                                               [0x7ffb720052c0] bci=[-1,28,559] rc=0 vc=570 vn=- li=4 udi=- nc=0
------------------------------

 [0x7ffb72229d30]	Fence Relative [ 00007FFB72070EB4 ]	# FENCE BBEnd </block_4>
 [0x7ffb72229f70]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228590 : edx] [GPR_0x7ffb722294c0 : edi] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228510 : r8d]
 [0x7ffb7222a050]	Label L0240:			# LABEL

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n94n     (  0)  BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                       [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=570 vn=- li=10 udi=- nc=0
------------------------------
------------------------------
 n94n     (  0)  BBStart <block_10> (freq 0) (catches ...) (OSR handler) (cold)                       [0x7ffb72080d20] bci=[-1,1,556] rc=0 vc=570 vn=- li=10 udi=- nc=0
------------------------------

 [0x7ffb7222a260]	Label L0256:			# LABEL
========================================
 [0x7ffb7222a300]	Fence Relative [ 00007FFB720A0250 ]	# FENCE BBStart <block_10> (frequency 0) (catches ...) (cold)

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n95n     (  0)  BBEnd </block_10> (cold)                                                             [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=570 vn=- li=10 udi=- nc=0
------------------------------
------------------------------
 n95n     (  0)  BBEnd </block_10> (cold)                                                             [0x7ffb72080d70] bci=[-1,1,556] rc=0 vc=570 vn=- li=10 udi=- nc=0
------------------------------

 [0x7ffb7222a470]	Fence Relative [ 00007FFB720A0254 ]	# FENCE BBEnd </block_10>

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n229n    (  0)  BBStart <block_15> (freq 0) (extension of previous block) (cold)                     [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=0
------------------------------
------------------------------
 n229n    (  0)  BBStart <block_15> (freq 0) (extension of previous block) (cold)                     [0x7ffb72083750] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=0
------------------------------

........................................
 [0x7ffb7222a590]	Fence Relative [ 00007FFB72147000 ]	# FENCE BBStart <block_15> (frequency 0) (extension of previous block) (cold)

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n238n    (  0)  aRegStore eax                                                                        [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
 n237n    (  2)    aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ]  [0x7ffb720839d0] bci=[-1,1,556] rc=2 vc=570 vn=- li=15 udi=- nc=0
------------------------------
------------------------------
 n238n    (  0)  aRegStore eax                                                                        [0x7ffb72083a20] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
 n237n    (  1)    aload  this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7222a7d0)  [0x7ffb720839d0] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=42960 nc=0
------------------------------

 [0x7ffb7222a850]	mov	&GPR_0x7ffb7222a7d0, qword ptr [vfp]		# L8RegMem, SymRef  this<'this' parm Ljava/lang/reflect/Method;>[#457  Parm] [flags 0xc0000107 0x0 ]

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {&GPR_0x7ffb7222a7d0}
------------------------------
 n235n    (  0)  aRegStore esi                                                                        [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
 n234n    (  2)    aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ]          [0x7ffb720838e0] bci=[-1,1,556] rc=2 vc=570 vn=- li=15 udi=- nc=0
------------------------------
------------------------------
 n235n    (  0)  aRegStore esi                                                                        [0x7ffb72083930] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
 n234n    (  1)    aload  obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7222abd0)  [0x7ffb720838e0] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=43984 nc=0
------------------------------

 [0x7ffb7222ac50]	mov	&GPR_0x7ffb7222abd0, qword ptr [vfp+0x8]		# L8RegMem, SymRef  obj<parm 1 Ljava/lang/Object;>[#458  Parm] [flags 0xc0000107 0x0 ]

============================================================
; Live regs: GPR=2 FPR=0 VRF=0 {&GPR_0x7ffb7222abd0, &GPR_0x7ffb7222a7d0}
------------------------------
 n232n    (  0)  aRegStore edx                                                                        [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
 n231n    (  2)    aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ]        [0x7ffb720837f0] bci=[-1,1,556] rc=2 vc=570 vn=- li=15 udi=- nc=0
------------------------------
------------------------------
 n232n    (  0)  aRegStore edx                                                                        [0x7ffb72083840] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
 n231n    (  1)    aload  args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7222afd0)  [0x7ffb720837f0] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=45008 nc=0
------------------------------

 [0x7ffb7222b050]	mov	&GPR_0x7ffb7222afd0, qword ptr [vfp+0x10]		# L8RegMem, SymRef  args<parm 2 [Ljava/lang/Object;>[#459  Parm] [flags 0xc0000107 0x0 ]

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb7222afd0, &GPR_0x7ffb7222abd0, &GPR_0x7ffb7222a7d0}
------------------------------
 n230n    (  0)  BBEnd </block_15> (cold) =====                                                       [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
 n240n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=- nc=3 flg=0x20
 n233n    (  1)      PassThrough rdx                                                                  [0x7ffb72083890] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=- nc=1
 n231n    (  1)        ==>aload (in &GPR_0x7ffb7222afd0)
 n236n    (  1)      PassThrough rsi                                                                  [0x7ffb72083980] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=- nc=1
 n234n    (  1)        ==>aload (in &GPR_0x7ffb7222abd0)
 n239n    (  1)      PassThrough rax                                                                  [0x7ffb72083a70] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=- nc=1
 n237n    (  1)        ==>aload (in &GPR_0x7ffb7222a7d0)
------------------------------
------------------------------
 n230n    (  0)  BBEnd </block_15> (cold) =====                                                       [0x7ffb720837a0] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=- nc=1
 n240n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083ac0] bci=[-1,1,556] rc=1 vc=570 vn=- li=15 udi=- nc=3 flg=0x20
 n233n    (  0)      PassThrough rdx                                                                  [0x7ffb72083890] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=45008 nc=1
 n231n    (  0)        ==>aload (in &GPR_0x7ffb7222afd0)
 n236n    (  0)      PassThrough rsi                                                                  [0x7ffb72083980] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=43984 nc=1
 n234n    (  0)        ==>aload (in &GPR_0x7ffb7222abd0)
 n239n    (  0)      PassThrough rax                                                                  [0x7ffb72083a70] bci=[-1,1,556] rc=0 vc=570 vn=- li=15 udi=42960 nc=1
 n237n    (  0)        ==>aload (in &GPR_0x7ffb7222a7d0)
------------------------------

 [0x7ffb7222b370]	Fence Relative [ 00007FFB72147004 ]	# FENCE BBEnd </block_15>
 [0x7ffb7222b5b0]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb7222b9d0]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb7222b780]	Label L0272:			# LABEL
	 PRE: [&GPR_0x7ffb7222a7d0 : eax] [&GPR_0x7ffb7222abd0 : esi] [&GPR_0x7ffb7222afd0 : edx]
	POST: [&GPR_0x7ffb7222a7d0 : eax] [&GPR_0x7ffb7222abd0 : esi] [&GPR_0x7ffb7222afd0 : edx]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n92n     (  0)  BBStart <block_11> (freq 0) (cold)                                                   [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=570 vn=- li=11 udi=- nc=1
 n241n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=570 vn=- li=11 udi=- nc=3 flg=0x20
 n242n    (  2)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=2 vc=570 vn=- li=11 udi=- nc=0 flg=0x8000
 n243n    (  2)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=2 vc=570 vn=- li=11 udi=- nc=0 flg=0x8000
 n244n    (  2)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=2 vc=570 vn=- li=11 udi=- nc=0 flg=0x8000
------------------------------
------------------------------
 n92n     (  0)  BBStart <block_11> (freq 0) (cold)                                                   [0x7ffb72080c80] bci=[-1,1,556] rc=0 vc=570 vn=- li=11 udi=- nc=1
 n241n    (  1)    GlRegDeps ()                                                                       [0x7ffb72083b10] bci=[-1,1,556] rc=1 vc=570 vn=- li=11 udi=- nc=3 flg=0x20
 n242n    (  1)      aRegLoad edx   args<parm 2 [Ljava/lang/Object;>[#355  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7222bec0) (SeenRealReference sharedMemory )  [0x7ffb72083b60] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=48832 nc=0 flg=0x8000
 n243n    (  1)      aRegLoad esi   obj<parm 1 Ljava/lang/Object;>[#354  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7222bf40) (SeenRealReference sharedMemory )  [0x7ffb72083bb0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=48960 nc=0 flg=0x8000
 n244n    (  1)      aRegLoad eax   this<'this' parm Ljava/lang/reflect/Method;>[#353  Parm] [flags 0xc0000107 0x0 ] (in &GPR_0x7ffb7222bfc0) (SeenRealReference sharedMemory )  [0x7ffb72083c00] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=49088 nc=0 flg=0x8000
------------------------------

 [0x7ffb7222c380]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb7222c130]	Label L0288:			# LABEL
	 PRE: [&GPR_0x7ffb7222bfc0 : eax] [&GPR_0x7ffb7222bf40 : esi] [&GPR_0x7ffb7222bec0 : edx]
	POST: [&GPR_0x7ffb7222bfc0 : eax] [&GPR_0x7ffb7222bf40 : esi] [&GPR_0x7ffb7222bec0 : edx]
========================================
 [0x7ffb7222c400]	Fence Relative [ 00007FFB720A0120 ]	# FENCE BBStart <block_11> (frequency 0) (cold)

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {&GPR_0x7ffb7222bfc0, &GPR_0x7ffb7222bf40, &GPR_0x7ffb7222bec0}
------------------------------
 n252n    (  0)  astorei  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]                       [0x7ffb72083e80] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n251n    (  1)    aladd                                                                              [0x7ffb72083e30] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  8)      aload  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]                    [0x7ffb72083c50] bci=[-1,0,556] rc=8 vc=570 vn=- li=11 udi=- nc=0
 n250n    (  1)      i2l                                                                              [0x7ffb72083de0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
 n249n    (  1)        iadd                                                                           [0x7ffb72083d90] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n246n    (  9)          iload  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]               [0x7ffb72083ca0] bci=[-1,0,556] rc=9 vc=570 vn=- li=11 udi=- nc=0
 n248n    (  1)          iconst 88                                                                    [0x7ffb72083d40] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
 n98n     (  1)    aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ]                        [0x7ffb72080e60] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
------------------------------
Entering UpcastingNoOverflow mode at node 72083de0
[    45] O^O analyseAddForLEA
[    46] O^O analyseAddForLEA: checking that second node is a memory reference 58
Add a sign extension instruction to 64-bit in Upcasting Mode 7222cfb0
------------------------------
 n252n    (  0)  astorei  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ] (cannotOverflow sharedMemory storeAlreadyEvaluated )  [0x7ffb72083e80] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2 flg=0x1000
 n251n    (  0)    aladd                                                                              [0x7ffb72083e30] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  7)      aload  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ] (in GPR_0x7ffb7222d0d0)  [0x7ffb72083c50] bci=[-1,0,556] rc=7 vc=570 vn=- li=11 udi=53456 nc=0
 n250n    (  0)      i2l                                                                              [0x7ffb72083de0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=5 nc=1
 n249n    (  0)        iadd (in GPR_0x7ffb7222ce10)                                                   [0x7ffb72083d90] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=52752 nc=2
 n246n    (  8)          iload  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ] (in GPR_0x7ffb7222cd00)  [0x7ffb72083ca0] bci=[-1,0,556] rc=8 vc=570 vn=- li=11 udi=52480 nc=0
 n248n    (  0)          iconst 88                                                                    [0x7ffb72083d40] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=1 nc=0
 n98n     (  0)    aload  <pending push temp 0>[#360  Auto] [flags 0x7 0x800 ] (in &GPR_0x7ffb7222cad0)  [0x7ffb72080e60] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=51920 nc=0
------------------------------

 [0x7ffb7222cb50]	mov	&GPR_0x7ffb7222cad0, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 0>[#460  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222cd80]	mov	GPR_0x7ffb7222cd00, dword ptr [GPR_0x7ffb720099b0+0x15c]		# L4RegMem, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb7222cf20]	lea	GPR_0x7ffb7222ce10, dword ptr [GPR_0x7ffb7222cd00+0x58]		# LEA4RegMem, SymRef [#463 +88]
 [0x7ffb7222cfb0]	movsxd	GPR_0x7ffb7222ce10, GPR_0x7ffb7222ce10		# MOVSXReg8Reg4
 [0x7ffb7222d150]	mov	GPR_0x7ffb7222d0d0, qword ptr [GPR_0x7ffb720099b0+0x968]		# L8RegMem, SymRef  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]
 [0x7ffb7222d1e0]	mov	qword ptr [GPR_0x7ffb7222ce10+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222cad0		# S8MemReg, SymRef  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {GPR_0x7ffb7222d0d0, GPR_0x7ffb7222cd00, &GPR_0x7ffb7222bfc0, &GPR_0x7ffb7222bf40, &GPR_0x7ffb7222bec0}
------------------------------
 n257n    (  0)  astorei  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]                       [0x7ffb72084010] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n256n    (  1)    aladd                                                                              [0x7ffb72083fc0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  7)      ==>aload (in GPR_0x7ffb7222d0d0)
 n255n    (  1)      i2l                                                                              [0x7ffb72083f70] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
 n254n    (  1)        iadd                                                                           [0x7ffb72083f20] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n246n    (  8)          ==>iload (in GPR_0x7ffb7222cd00)
 n253n    (  1)          iconst 80                                                                    [0x7ffb72083ed0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
 n101n    (  1)    aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ]                        [0x7ffb72080f50] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
------------------------------
Entering UpcastingNoOverflow mode at node 72083f70
[    47] O^O analyseAddForLEA
[    48] O^O analyseAddForLEA: checking that second node is a memory reference 50
Add a sign extension instruction to 64-bit in Upcasting Mode 7222dd50
------------------------------
 n257n    (  0)  astorei  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ] (cannotOverflow sharedMemory storeAlreadyEvaluated )  [0x7ffb72084010] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2 flg=0x1000
 n256n    (  0)    aladd                                                                              [0x7ffb72083fc0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  6)      ==>aload (in GPR_0x7ffb7222d0d0)
 n255n    (  0)      i2l                                                                              [0x7ffb72083f70] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=5 nc=1
 n254n    (  0)        iadd (in GPR_0x7ffb7222dbb0)                                                   [0x7ffb72083f20] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=56240 nc=2
 n246n    (  7)          ==>iload (in GPR_0x7ffb7222cd00)
 n253n    (  0)          iconst 80                                                                    [0x7ffb72083ed0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=1 nc=0
 n101n    (  0)    aload  <pending push temp 1>[#361  Auto] [flags 0x7 0x800 ] (in &GPR_0x7ffb7222da10)  [0x7ffb72080f50] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=55824 nc=0
------------------------------

 [0x7ffb7222da90]	mov	&GPR_0x7ffb7222da10, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 1>[#465  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222dcc0]	lea	GPR_0x7ffb7222dbb0, dword ptr [GPR_0x7ffb7222cd00+0x50]		# LEA4RegMem, SymRef [#467 +80]
 [0x7ffb7222dd50]	movsxd	GPR_0x7ffb7222dbb0, GPR_0x7ffb7222dbb0		# MOVSXReg8Reg4
 [0x7ffb7222dde0]	mov	qword ptr [GPR_0x7ffb7222dbb0+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222da10		# S8MemReg, SymRef  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {GPR_0x7ffb7222d0d0, GPR_0x7ffb7222cd00, &GPR_0x7ffb7222bfc0, &GPR_0x7ffb7222bf40, &GPR_0x7ffb7222bec0}
------------------------------
 n262n    (  0)  astorei  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]                       [0x7ffb720841a0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n261n    (  1)    aladd                                                                              [0x7ffb72084150] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  6)      ==>aload (in GPR_0x7ffb7222d0d0)
 n260n    (  1)      i2l                                                                              [0x7ffb72084100] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
 n259n    (  1)        iadd                                                                           [0x7ffb720840b0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n246n    (  7)          ==>iload (in GPR_0x7ffb7222cd00)
 n258n    (  1)          iconst 72                                                                    [0x7ffb72084060] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
 n104n    (  1)    aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ]                        [0x7ffb72081040] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
------------------------------
Entering UpcastingNoOverflow mode at node 72084100
[    49] O^O analyseAddForLEA
[    50] O^O analyseAddForLEA: checking that second node is a memory reference 48
Add a sign extension instruction to 64-bit in Upcasting Mode 7222e790
------------------------------
 n262n    (  0)  astorei  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ] (cannotOverflow sharedMemory storeAlreadyEvaluated )  [0x7ffb720841a0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2 flg=0x1000
 n261n    (  0)    aladd                                                                              [0x7ffb72084150] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  5)      ==>aload (in GPR_0x7ffb7222d0d0)
 n260n    (  0)      i2l                                                                              [0x7ffb72084100] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=5 nc=1
 n259n    (  0)        iadd (in GPR_0x7ffb7222e5f0)                                                   [0x7ffb720840b0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=58864 nc=2
 n246n    (  6)          ==>iload (in GPR_0x7ffb7222cd00)
 n258n    (  0)          iconst 72                                                                    [0x7ffb72084060] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=1 nc=0
 n104n    (  0)    aload  <pending push temp 2>[#363  Auto] [flags 0x7 0x800 ] (in &GPR_0x7ffb7222e450)  [0x7ffb72081040] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=58448 nc=0
------------------------------

 [0x7ffb7222e4d0]	mov	&GPR_0x7ffb7222e450, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 2>[#468  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222e700]	lea	GPR_0x7ffb7222e5f0, dword ptr [GPR_0x7ffb7222cd00+0x48]		# LEA4RegMem, SymRef [#470 +72]
 [0x7ffb7222e790]	movsxd	GPR_0x7ffb7222e5f0, GPR_0x7ffb7222e5f0		# MOVSXReg8Reg4
 [0x7ffb7222e820]	mov	qword ptr [GPR_0x7ffb7222e5f0+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222e450		# S8MemReg, SymRef  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {GPR_0x7ffb7222d0d0, GPR_0x7ffb7222cd00, &GPR_0x7ffb7222bfc0, &GPR_0x7ffb7222bf40, &GPR_0x7ffb7222bec0}
------------------------------
 n267n    (  0)  astorei  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]                       [0x7ffb72084330] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n266n    (  1)    aladd                                                                              [0x7ffb720842e0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  5)      ==>aload (in GPR_0x7ffb7222d0d0)
 n265n    (  1)      i2l                                                                              [0x7ffb72084290] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
 n264n    (  1)        iadd                                                                           [0x7ffb72084240] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n246n    (  6)          ==>iload (in GPR_0x7ffb7222cd00)
 n263n    (  1)          iconst 64                                                                    [0x7ffb720841f0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
 n107n    (  1)    aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ]                        [0x7ffb72081130] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
------------------------------
Entering UpcastingNoOverflow mode at node 72084290
[    51] O^O analyseAddForLEA
[    52] O^O analyseAddForLEA: checking that second node is a memory reference 40
Add a sign extension instruction to 64-bit in Upcasting Mode 7222f1d0
------------------------------
 n267n    (  0)  astorei  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ] (cannotOverflow sharedMemory storeAlreadyEvaluated )  [0x7ffb72084330] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2 flg=0x1000
 n266n    (  0)    aladd                                                                              [0x7ffb720842e0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  4)      ==>aload (in GPR_0x7ffb7222d0d0)
 n265n    (  0)      i2l                                                                              [0x7ffb72084290] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=5 nc=1
 n264n    (  0)        iadd (in GPR_0x7ffb7222f030)                                                   [0x7ffb72084240] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=61488 nc=2
 n246n    (  5)          ==>iload (in GPR_0x7ffb7222cd00)
 n263n    (  0)          iconst 64                                                                    [0x7ffb720841f0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=1 nc=0
 n107n    (  0)    aload  <pending push temp 3>[#367  Auto] [flags 0x7 0x800 ] (in &GPR_0x7ffb7222ee90)  [0x7ffb72081130] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=61072 nc=0
------------------------------

 [0x7ffb7222ef10]	mov	&GPR_0x7ffb7222ee90, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 3>[#471  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222f140]	lea	GPR_0x7ffb7222f030, dword ptr [GPR_0x7ffb7222cd00+0x40]		# LEA4RegMem, SymRef [#473 +64]
 [0x7ffb7222f1d0]	movsxd	GPR_0x7ffb7222f030, GPR_0x7ffb7222f030		# MOVSXReg8Reg4
 [0x7ffb7222f260]	mov	qword ptr [GPR_0x7ffb7222f030+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222ee90		# S8MemReg, SymRef  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]

============================================================
; Live regs: GPR=5 FPR=0 VRF=0 {GPR_0x7ffb7222d0d0, GPR_0x7ffb7222cd00, &GPR_0x7ffb7222bfc0, &GPR_0x7ffb7222bf40, &GPR_0x7ffb7222bec0}
------------------------------
 n272n    (  0)  astorei  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]                       [0x7ffb720844c0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n271n    (  1)    aladd                                                                              [0x7ffb72084470] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  4)      ==>aload (in GPR_0x7ffb7222d0d0)
 n270n    (  1)      i2l                                                                              [0x7ffb72084420] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
 n269n    (  1)        iadd                                                                           [0x7ffb720843d0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n246n    (  5)          ==>iload (in GPR_0x7ffb7222cd00)
 n268n    (  1)          iconst 120                                                                   [0x7ffb72084380] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
 n244n    (  1)    ==>aRegLoad (in &GPR_0x7ffb7222bfc0) (SeenRealReference sharedMemory )
------------------------------
Entering UpcastingNoOverflow mode at node 72084420
[    53] O^O analyseAddForLEA
[    54] O^O analyseAddForLEA: checking that second node is a memory reference 78
Add a sign extension instruction to 64-bit in Upcasting Mode 7222f9c0
------------------------------
 n272n    (  0)  astorei  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ] (cannotOverflow sharedMemory storeAlreadyEvaluated )  [0x7ffb720844c0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2 flg=0x1000
 n271n    (  0)    aladd                                                                              [0x7ffb72084470] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  3)      ==>aload (in GPR_0x7ffb7222d0d0)
 n270n    (  0)      i2l                                                                              [0x7ffb72084420] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=5 nc=1
 n269n    (  0)        iadd (in GPR_0x7ffb7222f820)                                                   [0x7ffb720843d0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=63520 nc=2
 n246n    (  4)          ==>iload (in GPR_0x7ffb7222cd00)
 n268n    (  0)          iconst 120                                                                   [0x7ffb72084380] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=1 nc=0
 n244n    (  0)    ==>aRegLoad (in &GPR_0x7ffb7222bfc0) (SeenRealReference sharedMemory )
------------------------------

 [0x7ffb7222f930]	lea	GPR_0x7ffb7222f820, dword ptr [GPR_0x7ffb7222cd00+0x78]		# LEA4RegMem, SymRef [#475 +120]
 [0x7ffb7222f9c0]	movsxd	GPR_0x7ffb7222f820, GPR_0x7ffb7222f820		# MOVSXReg8Reg4
 [0x7ffb7222fa50]	mov	qword ptr [GPR_0x7ffb7222f820+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222bfc0		# S8MemReg, SymRef  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]

============================================================
; Live regs: GPR=4 FPR=0 VRF=0 {GPR_0x7ffb7222d0d0, GPR_0x7ffb7222cd00, &GPR_0x7ffb7222bf40, &GPR_0x7ffb7222bec0}
------------------------------
 n277n    (  0)  astorei  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]                       [0x7ffb72084650] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n276n    (  1)    aladd                                                                              [0x7ffb72084600] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  3)      ==>aload (in GPR_0x7ffb7222d0d0)
 n275n    (  1)      i2l                                                                              [0x7ffb720845b0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
 n274n    (  1)        iadd                                                                           [0x7ffb72084560] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n246n    (  4)          ==>iload (in GPR_0x7ffb7222cd00)
 n273n    (  1)          iconst 112                                                                   [0x7ffb72084510] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
 n243n    (  1)    ==>aRegLoad (in &GPR_0x7ffb7222bf40) (SeenRealReference sharedMemory )
------------------------------
Entering UpcastingNoOverflow mode at node 720845b0
[    55] O^O analyseAddForLEA
[    56] O^O analyseAddForLEA: checking that second node is a memory reference 70
Add a sign extension instruction to 64-bit in Upcasting Mode 72230090
------------------------------
 n277n    (  0)  astorei  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ] (cannotOverflow sharedMemory storeAlreadyEvaluated )  [0x7ffb72084650] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2 flg=0x1000
 n276n    (  0)    aladd                                                                              [0x7ffb72084600] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  2)      ==>aload (in GPR_0x7ffb7222d0d0)
 n275n    (  0)      i2l                                                                              [0x7ffb720845b0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=5 nc=1
 n274n    (  0)        iadd (in GPR_0x7ffb7222fe90)                                                   [0x7ffb72084560] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=65168 nc=2
 n246n    (  3)          ==>iload (in GPR_0x7ffb7222cd00)
 n273n    (  0)          iconst 112                                                                   [0x7ffb72084510] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=1 nc=0
 n243n    (  0)    ==>aRegLoad (in &GPR_0x7ffb7222bf40) (SeenRealReference sharedMemory )
------------------------------

 [0x7ffb72230000]	lea	GPR_0x7ffb7222fe90, dword ptr [GPR_0x7ffb7222cd00+0x70]		# LEA4RegMem, SymRef [#477 +112]
 [0x7ffb72230090]	movsxd	GPR_0x7ffb7222fe90, GPR_0x7ffb7222fe90		# MOVSXReg8Reg4
 [0x7ffb72230120]	mov	qword ptr [GPR_0x7ffb7222fe90+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222bf40		# S8MemReg, SymRef  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]

============================================================
; Live regs: GPR=3 FPR=0 VRF=0 {GPR_0x7ffb7222d0d0, GPR_0x7ffb7222cd00, &GPR_0x7ffb7222bec0}
------------------------------
 n282n    (  0)  astorei  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]                       [0x7ffb720847e0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n281n    (  1)    aladd                                                                              [0x7ffb72084790] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  2)      ==>aload (in GPR_0x7ffb7222d0d0)
 n280n    (  1)      i2l                                                                              [0x7ffb72084740] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
 n279n    (  1)        iadd                                                                           [0x7ffb720846f0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n246n    (  3)          ==>iload (in GPR_0x7ffb7222cd00)
 n278n    (  1)          iconst 104                                                                   [0x7ffb720846a0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
 n242n    (  1)    ==>aRegLoad (in &GPR_0x7ffb7222bec0) (SeenRealReference sharedMemory )
------------------------------
Entering UpcastingNoOverflow mode at node 72084740
[    57] O^O analyseAddForLEA
[    58] O^O analyseAddForLEA: checking that second node is a memory reference 68
Add a sign extension instruction to 64-bit in Upcasting Mode 72230700
------------------------------
 n282n    (  0)  astorei  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ] (cannotOverflow sharedMemory storeAlreadyEvaluated )  [0x7ffb720847e0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2 flg=0x1000
 n281n    (  0)    aladd                                                                              [0x7ffb72084790] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  1)      ==>aload (in GPR_0x7ffb7222d0d0)
 n280n    (  0)      i2l                                                                              [0x7ffb72084740] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=5 nc=1
 n279n    (  0)        iadd (in GPR_0x7ffb72230560)                                                   [0x7ffb720846f0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=1376 nc=2
 n246n    (  2)          ==>iload (in GPR_0x7ffb7222cd00)
 n278n    (  0)          iconst 104                                                                   [0x7ffb720846a0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=1 nc=0
 n242n    (  0)    ==>aRegLoad (in &GPR_0x7ffb7222bec0) (SeenRealReference sharedMemory )
------------------------------

 [0x7ffb72230670]	lea	GPR_0x7ffb72230560, dword ptr [GPR_0x7ffb7222cd00+0x68]		# LEA4RegMem, SymRef [#479 +104]
 [0x7ffb72230700]	movsxd	GPR_0x7ffb72230560, GPR_0x7ffb72230560		# MOVSXReg8Reg4
 [0x7ffb72230790]	mov	qword ptr [GPR_0x7ffb72230560+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222bec0		# S8MemReg, SymRef  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]

============================================================
; Live regs: GPR=2 FPR=0 VRF=0 {GPR_0x7ffb7222d0d0, GPR_0x7ffb7222cd00}
------------------------------
 n287n    (  0)  astorei  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]                       [0x7ffb72084970] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n286n    (  1)    aladd                                                                              [0x7ffb72084920] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  1)      ==>aload (in GPR_0x7ffb7222d0d0)
 n285n    (  1)      i2l                                                                              [0x7ffb720848d0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=1
 n284n    (  1)        iadd                                                                           [0x7ffb72084880] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n246n    (  2)          ==>iload (in GPR_0x7ffb7222cd00)
 n283n    (  1)          iconst 96                                                                    [0x7ffb72084830] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
 n119n    (  1)    aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ]                            [0x7ffb720814f0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
------------------------------
Entering UpcastingNoOverflow mode at node 720848d0
[    59] O^O analyseAddForLEA
[    60] O^O analyseAddForLEA: checking that second node is a memory reference 60
Add a sign extension instruction to 64-bit in Upcasting Mode 72230fc0
------------------------------
 n287n    (  0)  astorei  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ] (cannotOverflow sharedMemory storeAlreadyEvaluated )  [0x7ffb72084970] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2 flg=0x1000
 n286n    (  0)    aladd                                                                              [0x7ffb72084920] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=2
 n245n    (  0)      ==>aload (in GPR_0x7ffb7222d0d0)
 n285n    (  0)      i2l                                                                              [0x7ffb720848d0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=5 nc=1
 n284n    (  0)        iadd (in GPR_0x7ffb72230e20)                                                   [0x7ffb72084880] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=3616 nc=2
 n246n    (  1)          ==>iload (in GPR_0x7ffb7222cd00)
 n283n    (  0)          iconst 96                                                                    [0x7ffb72084830] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=1 nc=0
 n119n    (  0)    aload  caller<auto slot 3>[#358  Auto] [flags 0x7 0x0 ] (in &GPR_0x7ffb72230c80)   [0x7ffb720814f0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=3200 nc=0
------------------------------

 [0x7ffb72230d00]	mov	&GPR_0x7ffb72230c80, qword ptr [vfp]		# L8RegMem, SymRef  caller<auto slot 3>[#480  Auto] [flags 0x7 0x0 ]
 [0x7ffb72230f30]	lea	GPR_0x7ffb72230e20, dword ptr [GPR_0x7ffb7222cd00+0x60]		# LEA4RegMem, SymRef [#482 +96]
 [0x7ffb72230fc0]	movsxd	GPR_0x7ffb72230e20, GPR_0x7ffb72230e20		# MOVSXReg8Reg4
 [0x7ffb72231050]	mov	qword ptr [GPR_0x7ffb72230e20+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb72230c80		# S8MemReg, SymRef  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {GPR_0x7ffb7222cd00}
------------------------------
 n290n    (  0)  istore  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]                      [0x7ffb72084a60] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=1
 n289n    (  1)    iadd                                                                               [0x7ffb72084a10] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=2
 n246n    (  1)      ==>iload (in GPR_0x7ffb7222cd00)
 n288n    (  1)      iconst 128                                                                       [0x7ffb720849c0] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
------------------------------
[    61] O^O analyseAddForLEA
[    62] O^O analyseAddForLEA: checking that second node is a memory reference 80
------------------------------
 n290n    (  0)  istore  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]                      [0x7ffb72084a60] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=1
 n289n    (  0)    iadd (in GPR_0x7ffb7222cd00)                                                       [0x7ffb72084a10] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=52480 nc=2
 n246n    (  0)      ==>iload (in GPR_0x7ffb7222cd00)
 n288n    (  0)      iconst 128                                                                       [0x7ffb720849c0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=0
------------------------------

 [0x7ffb72231520]	sub	GPR_0x7ffb7222cd00, 0xffffffffffffff80	# SUB4RegImms
 [0x7ffb72231640]	mov	dword ptr [GPR_0x7ffb720099b0+0x15c], GPR_0x7ffb7222cd00		# S4MemReg, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n125n    (  0)  igoto                                                                                [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=1
 n124n    (  1)    aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]               [0x7ffb72081680] bci=[-1,0,556] rc=1 vc=570 vn=- li=11 udi=- nc=0
------------------------------
------------------------------
 n125n    (  0)  igoto                                                                                [0x7ffb720816d0] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=- nc=1
 n124n    (  0)    aload  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ] (in GPR_0x7ffb72231940)  [0x7ffb72081680] bci=[-1,0,556] rc=0 vc=570 vn=- li=11 udi=6464 nc=0
------------------------------

 [0x7ffb722319c0]	mov	GPR_0x7ffb72231940, qword ptr [GPR_0x7ffb720099b0+0x970]		# L8RegMem, SymRef  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]
 [0x7ffb72231a50]	jmp	GPR_0x7ffb72231940			# JMPReg

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n93n     (  0)  BBEnd </block_11> (cold)                                                             [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=570 vn=- li=11 udi=- nc=0
------------------------------
------------------------------
 n93n     (  0)  BBEnd </block_11> (cold)                                                             [0x7ffb72080cd0] bci=[-1,1,556] rc=0 vc=570 vn=- li=11 udi=- nc=0
------------------------------

 [0x7ffb72231c50]	Fence Relative [ 00007FFB720A0124 ]	# FENCE BBEnd </block_11>
 [0x7ffb72231e90]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb7222bfc0 : eax] [&GPR_0x7ffb7222bec0 : edx] [&GPR_0x7ffb7222bf40 : esi]
 [0x7ffb72231f70]	Label L0304:			# LABEL

============================================================
	instruction selection is complete so free all symbols in the _variableSizeSymRefPendingFreeList

<instructions
	title="Post Instruction Selection Instructions"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

                +--------------------------------------- instruction address
                |       +------------------------------------------ 
                |       |       +----------------------------------------- instruction
                |       |       |
                V       V       V
 [0x7ffb72174df0]	Label L0022:			# LABEL
 [0x7ffb72174f60]	mov	GPR_0x7ffb72174cd0, 0x0000000000078438	# MOV8RegImm64
 [0x7ffb721752b0]	mov	qword ptr [GPR_0x7ffb72175000+0x18], GPR_0x7ffb721750c0		# S8MemReg, SymRef [#402 +24]
	 PRE: [GPR_0x7ffb721750c0 : eax] [GPR_0x7ffb72175000 : esp]
	POST: [GPR_0x7ffb721750c0 : eax] [GPR_0x7ffb72175000 : esp]
 [0x7ffb721754f0]	mov	qword ptr [GPR_0x7ffb72175000+0x10], GPR_0x7ffb72175340		# S8MemReg, SymRef [#403 +16]
	 PRE: [GPR_0x7ffb72175340 : esi] [GPR_0x7ffb72175000 : esp]
	POST: [GPR_0x7ffb72175340 : esi] [GPR_0x7ffb72175000 : esp]
 [0x7ffb72175730]	mov	qword ptr [GPR_0x7ffb72175000+0x8], GPR_0x7ffb72175580		# S8MemReg, SymRef [#404 +8]
	 PRE: [GPR_0x7ffb72175580 : edx] [GPR_0x7ffb72175000 : esp]
	POST: [GPR_0x7ffb72175580 : edx] [GPR_0x7ffb72175000 : esp]
 [0x7ffb72175a10]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb721757c0]	jmp	j2iTransition           # JMP4 (00007FFBC390DA70)# JMP4
	 PRE: [GPR_0x7ffb72174cd0 : edi]
 [0x7ffb72175a90]	nop			# Alignment (boundary=8, margin=8)
 [0x7ffb72175b20]	jmp	Label L0022			# JMP4
 [0x7ffb72175bc0]	.short	0xcccc		# DWImm2
 [0x7ffb72175c50]	.int	0x00000005		# DDImm4
 [0x7ffb72175f50]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72174cd0 : edi]
 [0x7ffb72175d20]	ProcEntry                       # PROCENTRY
	POST: [GPR_0x7ffb720099b0 : ebp]
 [0x7ffb72176780]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb72176530]	Label L0032:			# LABEL
	 PRE: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]
========================================
 [0x7ffb72176800]	Fence Relative [ 00007FFB72050690 ]	# FENCE BBStart <block_2> (frequency 10000)
 [0x7ffb721774c0]	Label L0034:			# LABEL	# (Start of internal control flow)
 [0x7ffb721775f0]	lea	GPR_0x7ffb72177400, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72177710]	cmp	qword ptr [GPR_0x7ffb72177400+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#406 +16]
 [0x7ffb721777a0]	je	Outlined Label L0036			# JE4
 [0x7ffb72178370]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb72176240 : edx] [&GPR_0x7ffb721762c0 : esi]
 [0x7ffb72178120]	Label L0035:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb72177400 : NoReg] [GPR_0x7ffb72177950 : eax] [GPR_0x7ffb72177a10 : esi]
	POST: [GPR_0x7ffb72177400 : NoReg] [GPR_0x7ffb72177950 : eax] [GPR_0x7ffb72177a10 : esi]
 [0x7ffb72178510]	Label L0038:			# LABEL	# (Start of internal control flow)
 [0x7ffb721786c0]	mov	GPR_0x7ffb721785b0, dword ptr [&GPR_0x7ffb72176340]		# L4RegMem
 [0x7ffb72178750]	and	GPR_0x7ffb721785b0, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72178870]	test	word ptr [GPR_0x7ffb721785b0+0x24], 0x0100	# TEST2MemImm2, SymRef [#410 +36]
 [0x7ffb72178900]	jne	Outlined Label L0040			# JNE4
 [0x7ffb72179230]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72177950 : eax] [&GPR_0x7ffb72176240 : edx] [GPR_0x7ffb72177a10 : esi]
 [0x7ffb72178fe0]	Label L0039:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb721785b0 : NoReg] [GPR_0x7ffb72178b70 : eax] [&GPR_0x7ffb72176340 : esi]
	POST: [GPR_0x7ffb721785b0 : NoReg] [GPR_0x7ffb72178b70 : eax] [&GPR_0x7ffb72176340 : esi]
 [0x7ffb721796a0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72179610]	mov	GPR_0x7ffb72179490, dword ptr [&GPR_0x7ffb72176340-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.override Z[#412  unresolved volatile Shadow] [flags 0x2601 0x0 ]
 [0x7ffb72179740]	nop			# Padding (2 bytes)
 [0x7ffb72179e50]	test	GPR_0x7ffb72179490, GPR_0x7ffb72179490		# TEST4RegReg
 [0x7ffb7217a220]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72178b70 : eax] [&GPR_0x7ffb72176240 : edx] [&GPR_0x7ffb72176340 : esi]
 [0x7ffb72179fd0]	je	Label L0016			# JE4
	 PRE: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]
 [0x7ffb7217a410]	Fence Relative [ 00007FFB72050694 ]	# FENCE BBEnd </block_2>
........................................
 [0x7ffb7217a530]	Fence Relative [ 00007FFB72146D50 ]	# FENCE BBStart <block_14> (frequency 9238) (extension of previous block)
 [0x7ffb7217a680]	Fence Relative [ 00007FFB72146D54 ]	# FENCE BBEnd </block_14>
 [0x7ffb7217a8c0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb72176240 : edx] [&GPR_0x7ffb721762c0 : esi]
 [0x7ffb7217ace0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb72176240 : edx] [&GPR_0x7ffb721762c0 : esi]
 [0x7ffb7217aa90]	Label L0048:			# LABEL
	 PRE: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]
	POST: [&GPR_0x7ffb72176340 : eax] [&GPR_0x7ffb721762c0 : esi] [&GPR_0x7ffb72176240 : edx]
 [0x7ffb7217b570]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb7217b320]	Label L0019:			# LABEL
	 PRE: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]
	POST: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]
========================================
 [0x7ffb7217b5f0]	Fence Relative [ 00007FFB720501D0 ]	# FENCE BBStart <block_7> (frequency 9726)
 [0x7ffb7217bfa0]	Label L0065:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217c0d0]	lea	GPR_0x7ffb7217bf20, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217c1f0]	cmp	qword ptr [GPR_0x7ffb7217bf20+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#415 +16]
 [0x7ffb7217c280]	je	Outlined Label L0067			# JE4
 [0x7ffb7217cca0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b0b0 : edx] [&GPR_0x7ffb7217b130 : esi]
 [0x7ffb7217ca50]	Label L0066:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb7217bf20 : NoReg] [GPR_0x7ffb7217c430 : eax] [GPR_0x7ffb7217c4b0 : esi]
	POST: [GPR_0x7ffb7217bf20 : NoReg] [GPR_0x7ffb7217c430 : eax] [GPR_0x7ffb7217c4b0 : esi]
 [0x7ffb7217ce40]	Label L0069:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217cff0]	mov	GPR_0x7ffb7217cee0, dword ptr [&GPR_0x7ffb7217b1b0]		# L4RegMem
 [0x7ffb7217d080]	and	GPR_0x7ffb7217cee0, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7217d1a0]	test	word ptr [GPR_0x7ffb7217cee0+0x24], 0x0100	# TEST2MemImm2, SymRef [#418 +36]
 [0x7ffb7217d230]	jne	Outlined Label L0071			# JNE4
 [0x7ffb7217dad0]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb7217c430 : eax] [&GPR_0x7ffb7217b0b0 : edx] [GPR_0x7ffb7217c4b0 : esi]
 [0x7ffb7217d880]	Label L0070:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb7217cee0 : NoReg] [GPR_0x7ffb7217d4a0 : eax] [&GPR_0x7ffb7217b1b0 : esi]
	POST: [GPR_0x7ffb7217cee0 : NoReg] [GPR_0x7ffb7217d4a0 : eax] [&GPR_0x7ffb7217b1b0 : esi]
 [0x7ffb7217de40]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7217ddb0]	mov	GPR_0x7ffb7217dd30, dword ptr [&GPR_0x7ffb7217b1b0-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#420  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb7217dee0]	nop			# Padding (2 bytes)
 [0x7ffb7217dff0]	lea	&GPR_0x7ffb7217df70, qword ptr [8*GPR_0x7ffb7217dd30]		# LEA8RegMem
 [0x7ffb7217e9c0]	mov	qword ptr [vfp], &GPR_0x7ffb7217df70		# S8MemReg, SymRef  caller<auto slot 3>[#421  Auto] [flags 0x7 0x0 ]
 [0x7ffb7217ecd0]	test	&GPR_0x7ffb7217df70, &GPR_0x7ffb7217df70		# TEST8RegReg
 [0x7ffb7217f0a0]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb7217d4a0 : eax] [&GPR_0x7ffb7217b0b0 : edx] [&GPR_0x7ffb7217b1b0 : esi]
 [0x7ffb7217ee50]	je	Label L0017			# JE4
	 PRE: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]
	POST: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]
 [0x7ffb7217f2f0]	Fence Relative [ 00007FFB720501D4 ]	# FENCE BBEnd </block_7>
 [0x7ffb7217f530]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb7217b1b0 : eax] [&GPR_0x7ffb7217b0b0 : edx] [&GPR_0x7ffb7217b130 : esi]
 [0x7ffb7217f950]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb7217b0b0 : edx] [&GPR_0x7ffb7217b130 : esi]
 [0x7ffb7217f700]	Label L0074:			# LABEL
	 PRE: [&GPR_0x7ffb7217df70 : ebx] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]
	POST: [&GPR_0x7ffb7217df70 : ebx] [&GPR_0x7ffb7217b130 : esi] [&GPR_0x7ffb7217b0b0 : edx]
 [0x7ffb72180260]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb72180010]	Label L0020:			# LABEL
	 PRE: [&GPR_0x7ffb7217fea0 : ebx] [&GPR_0x7ffb7217fe20 : esi] [&GPR_0x7ffb7217fda0 : edx]
	POST: [&GPR_0x7ffb7217fea0 : ebx] [&GPR_0x7ffb7217fe20 : esi] [&GPR_0x7ffb7217fda0 : edx]
========================================
 [0x7ffb721802e0]	Fence Relative [ 00007FFB72050560 ]	# FENCE BBStart <block_9> (frequency 9726)
 [0x7ffb72181480]	mov	&GPR_0x7ffb72181200, &GPR_0x7ffb7217fea0		# MOV8RegReg
 [0x7ffb72181620]	mov	GPR_0x7ffb721815a0, dword ptr [&GPR_0x7ffb7217fea0]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb721816b0]	and	GPR_0x7ffb721815a0, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb72183470]	Label L0080:			# LABEL	# (Start of internal control flow)
	 PRE: [&GPR_0x7ffb72181200 : eax] [&GPR_0x7ffb7217fe20 : esi] [&GPR_0x7ffb7217fda0 : edx]
 [0x7ffb72181a70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721819d0]	mov	GPR_0x7ffb72181950, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72181b10]	cmp	GPR_0x7ffb72181950, GPR_0x7ffb721815a0		# CMP8RegReg
 [0x7ffb72181ba0]	jne	Label L0083			# JNE1
 [0x7ffb72181c40]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb72181ce0]	jmp	Label L0081			# JMP4
 [0x7ffb72181d80]	Label L0083:			# LABEL
 [0x7ffb72182060]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72181fc0]	mov	GPR_0x7ffb72181f40, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72182100]	cmp	GPR_0x7ffb72181f40, GPR_0x7ffb721815a0		# CMP8RegReg
 [0x7ffb72182190]	jne	Label L0096			# JNE1
 [0x7ffb72182230]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb721822d0]	jmp	Label L0081			# JMP4
 [0x7ffb721824b0]	Label L0097:			# LABEL
 [0x7ffb72182550]	mov	GPR_0x7ffb721823f0, 0x00000178	# MOV4RegImm4
 [0x7ffb72182670]	sub	GPR_0x7ffb721823f0, qword ptr [GPR_0x7ffb72182370+0x18]		# SUB8RegMem, SymRef [#423 +24]
 [0x7ffb72182790]	jmp	dword ptr [GPR_0x7ffb721815a0+1*GPR_0x7ffb721823f0]		# JMPMem
 [0x7ffb72182820]	Label L0096:			# LABEL
 [0x7ffb72182950]	mov	GPR_0x7ffb72182370, qword ptr [GPR_0x7ffb721815a0+0x60]		# L8RegMem, SymRef [#425 +96]
 [0x7ffb72182a70]	cmp	dword ptr [GPR_0x7ffb72182370], 0x000a5700	# CMP4MemImm4
 [0x7ffb72182b00]	jne	Snippet Label L0084		# JNE4	# (IPic Data)
 [0x7ffb72182df0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb7217fea0 : ebx] [&GPR_0x7ffb7217fda0 : edx] [&GPR_0x7ffb7217fe20 : esi]
 [0x7ffb72182ba0]	call	Label L0097			# CALLImm4
	 PRE: [GPR_0x7ffb721823f0 : r8d]
 [0x7ffb72183760]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb721823f0 : r8d]
 [0x7ffb72183510]	Label L0081:			# LABEL	# (End of internal control flow)
	 PRE: [&GPR_0x7ffb72181200 : eax] [&GPR_0x7ffb7217fe20 : esi] [&GPR_0x7ffb7217fda0 : edx]
	POST: [GPR_0x7ffb72182370 : edi] [GPR_0x7ffb721815a0 : NoReg] [D_GPR_0x7ffb72182ef0 : ecx] [D_GPR_0x7ffb72182f70 : edx] [D_GPR_0x7ffb72182ff0 : esi] [D_GPR_0x7ffb72183070 : r8d] [D_GPR_0x7ffb721830f0 : r10d] [D_GPR_0x7ffb72183170 : r11d] [D_GPR_0x7ffb721831f0 : r12d] [D_GPR_0x7ffb72183270 : r13d] [D_GPR_0x7ffb721832f0 : r14d] [D_GPR_0x7ffb72183370 : r15d] [GPR_0x7ffb720099b0 : ebp] [&GPR_0x7ffb721833f0 : eax]
 [0x7ffb72184440]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb721833f0 : eax] [D_GPR_0x7ffb72182ef0 : ecx] [D_GPR_0x7ffb72182f70 : edx] [GPR_0x7ffb72182370 : edi] [D_GPR_0x7ffb72182ff0 : esi] [D_GPR_0x7ffb72183070 : r8d] [D_GPR_0x7ffb721830f0 : r10d] [D_GPR_0x7ffb72183170 : r11d] [D_GPR_0x7ffb721831f0 : r12d] [D_GPR_0x7ffb72183270 : r13d] [D_GPR_0x7ffb721832f0 : r14d] [D_GPR_0x7ffb72183370 : r15d]
 [0x7ffb72184210]	ret                             # RET
	 PRE: [&GPR_0x7ffb721833f0 : eax]
 [0x7ffb72184580]	Fence Relative [ 00007FFB72050564 ]	# FENCE BBEnd </block_9>
 [0x7ffb721847c0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb721833f0 : eax]
 [0x7ffb721848a0]	Label L0098:			# LABEL
 [0x7ffb721850f0]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb72184ea0]	Label L0016:			# LABEL
	 PRE: [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx]
	POST: [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx]
========================================
 [0x7ffb72185170]	Fence Relative [ 00007FFB720509E0 ]	# FENCE BBStart <block_3> (frequency 785)
 [0x7ffb72186570]	Label L0112:			# LABEL	# (Start of internal control flow)
 [0x7ffb72185ed0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72185e30]	call	Snippet Label L0114     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72186860]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb72184cb0 : esi]
 [0x7ffb72186610]	Label L0113:			# LABEL	# (End of internal control flow)
	POST: [D_GPR_0x7ffb72185f70 : ecx] [D_GPR_0x7ffb72185ff0 : edx] [D_GPR_0x7ffb72186070 : edi] [D_GPR_0x7ffb721860f0 : esi] [D_GPR_0x7ffb72186170 : r8d] [D_GPR_0x7ffb721861f0 : r10d] [D_GPR_0x7ffb72186270 : r11d] [D_GPR_0x7ffb721862f0 : r12d] [D_GPR_0x7ffb72186370 : r13d] [D_GPR_0x7ffb721863f0 : r14d] [D_GPR_0x7ffb72186470 : r15d] [GPR_0x7ffb720099b0 : ebp] [&GPR_0x7ffb721864f0 : eax]
 [0x7ffb72186d80]	mov	qword ptr [vfp], &GPR_0x7ffb721864f0		# S8MemReg, SymRef  caller<auto slot 3>[#428  Auto] [flags 0x7 0x0 ]
 [0x7ffb72187990]	Label L0129:			# LABEL	# (Start of internal control flow)
 [0x7ffb72187ac0]	lea	GPR_0x7ffb72187910, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72187be0]	cmp	qword ptr [GPR_0x7ffb72187910+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#431 +16]
 [0x7ffb72187c70]	je	Outlined Label L0131			# JE4
 [0x7ffb721886d0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb721864f0 : eax] [&GPR_0x7ffb72184d30 : ebx] [D_GPR_0x7ffb72185f70 : ecx] [D_GPR_0x7ffb72185ff0 : edx] [D_GPR_0x7ffb72186070 : edi] [D_GPR_0x7ffb721860f0 : esi] [D_GPR_0x7ffb72186170 : r8d] [&GPR_0x7ffb72184cb0 : r9d] [D_GPR_0x7ffb721861f0 : r10d] [D_GPR_0x7ffb72186270 : r11d] [D_GPR_0x7ffb721862f0 : r12d] [D_GPR_0x7ffb72186370 : r13d] [D_GPR_0x7ffb721863f0 : r14d] [D_GPR_0x7ffb72186470 : r15d]
 [0x7ffb72188480]	Label L0130:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb72187910 : NoReg] [GPR_0x7ffb72187e20 : eax] [GPR_0x7ffb72187ea0 : esi]
	POST: [GPR_0x7ffb72187910 : NoReg] [GPR_0x7ffb72187e20 : eax] [GPR_0x7ffb72187ea0 : esi]
 [0x7ffb72188870]	Label L0133:			# LABEL	# (Start of internal control flow)
 [0x7ffb72188a20]	mov	GPR_0x7ffb72188910, dword ptr [&GPR_0x7ffb72184d30]		# L4RegMem
 [0x7ffb72188ab0]	and	GPR_0x7ffb72188910, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72188bd0]	test	word ptr [GPR_0x7ffb72188910+0x24], 0x0100	# TEST2MemImm2, SymRef [#434 +36]
 [0x7ffb72188c60]	jne	Outlined Label L0135			# JNE4
 [0x7ffb72189500]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72187e20 : eax] [&GPR_0x7ffb72184d30 : ebx] [GPR_0x7ffb72187ea0 : esi] [&GPR_0x7ffb72184cb0 : r9d]
 [0x7ffb721892b0]	Label L0134:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb72188910 : NoReg] [GPR_0x7ffb72188ed0 : eax] [&GPR_0x7ffb72184d30 : esi]
	POST: [GPR_0x7ffb72188910 : NoReg] [GPR_0x7ffb72188ed0 : eax] [&GPR_0x7ffb72184d30 : esi]
 [0x7ffb72189870]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721897e0]	mov	GPR_0x7ffb72189760, dword ptr [&GPR_0x7ffb72184d30-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.clazz Ljava/lang/Class;[#436  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb72189910]	nop			# Padding (2 bytes)
 [0x7ffb72189a20]	lea	&GPR_0x7ffb721899a0, qword ptr [8*GPR_0x7ffb72189760]		# LEA8RegMem
 [0x7ffb7218a310]	mov	qword ptr [vfp], &GPR_0x7ffb72184d30		# S8MemReg, SymRef  <pending push temp 0>[#437  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218a6a0]	mov	qword ptr [vfp], &GPR_0x7ffb721864f0		# S8MemReg, SymRef  <pending push temp 1>[#438  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218aac0]	mov	qword ptr [vfp], &GPR_0x7ffb721899a0		# S8MemReg, SymRef  <pending push temp 2>[#439  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218b000]	Label L0139:			# LABEL	# (Start of internal control flow)
 [0x7ffb7218b1b0]	mov	GPR_0x7ffb7218b0a0, dword ptr [&GPR_0x7ffb72184d30]		# L4RegMem
 [0x7ffb7218b240]	and	GPR_0x7ffb7218b0a0, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7218b360]	test	word ptr [GPR_0x7ffb7218b0a0+0x24], 0x0100	# TEST2MemImm2, SymRef [#441 +36]
 [0x7ffb7218b3f0]	jne	Outlined Label L0141			# JNE4
 [0x7ffb7218bc90]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72188ed0 : eax] [&GPR_0x7ffb72184d30 : ebx] [&GPR_0x7ffb72184d30 : esi] [&GPR_0x7ffb72184cb0 : r9d]
 [0x7ffb7218ba40]	Label L0140:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb7218b0a0 : NoReg] [GPR_0x7ffb7218b660 : eax] [&GPR_0x7ffb72184d30 : esi]
	POST: [GPR_0x7ffb7218b0a0 : NoReg] [GPR_0x7ffb7218b660 : eax] [&GPR_0x7ffb72184d30 : esi]
 [0x7ffb7218be20]	mov	GPR_0x7ffb7218bda0, dword ptr [&GPR_0x7ffb72184d30+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#443  Shadow +80] [flags 0x80603 0x0 ]
 [0x7ffb7218d280]	Label L0143:			# LABEL	# (Start of internal control flow)
	 PRE: [GPR_0x7ffb7218bda0 : eax]
 [0x7ffb7218cbe0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7218cb40]	call	Snippet Label L0145     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb7218d570]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb7218b660 : eax] [&GPR_0x7ffb72184d30 : ebx] [&GPR_0x7ffb72184d30 : esi] [&GPR_0x7ffb72184cb0 : r9d]
 [0x7ffb7218d320]	Label L0144:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb7218bda0 : eax]
	POST: [D_GPR_0x7ffb7218cc80 : ecx] [D_GPR_0x7ffb7218cd00 : edx] [D_GPR_0x7ffb7218cd80 : edi] [D_GPR_0x7ffb7218ce00 : esi] [D_GPR_0x7ffb7218ce80 : r8d] [D_GPR_0x7ffb7218cf00 : r10d] [D_GPR_0x7ffb7218cf80 : r11d] [D_GPR_0x7ffb7218d000 : r12d] [D_GPR_0x7ffb7218d080 : r13d] [D_GPR_0x7ffb7218d100 : r14d] [D_GPR_0x7ffb7218d180 : r15d] [GPR_0x7ffb720099b0 : ebp] [GPR_0x7ffb7218d200 : eax]
 [0x7ffb7218db00]	test	GPR_0x7ffb7218d200, GPR_0x7ffb7218d200		# TEST4RegReg
 [0x7ffb7218dfc0]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb7218d200 : eax] [&GPR_0x7ffb72184d30 : ebx] [D_GPR_0x7ffb7218cc80 : ecx] [D_GPR_0x7ffb7218cd00 : edx] [D_GPR_0x7ffb7218cd80 : edi] [D_GPR_0x7ffb7218ce00 : esi] [D_GPR_0x7ffb7218ce80 : r8d] [&GPR_0x7ffb72184cb0 : r9d] [D_GPR_0x7ffb7218cf00 : r10d] [D_GPR_0x7ffb7218cf80 : r11d] [D_GPR_0x7ffb7218d000 : r12d] [D_GPR_0x7ffb7218d080 : r13d] [D_GPR_0x7ffb7218d100 : r14d] [D_GPR_0x7ffb7218d180 : r15d]
 [0x7ffb7218dd00]	jne	Label L0018			# JNE4
	 PRE: [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb721899a0 : r8d]
	POST: [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb721899a0 : r8d]
 [0x7ffb7218e210]	Fence Relative [ 00007FFB720509E4 ]	# FENCE BBEnd </block_3>
........................................
 [0x7ffb7218e330]	Fence Relative [ 00007FFB72050300 ]	# FENCE BBStart <block_5> (frequency 766) (extension of previous block)
 [0x7ffb7218e5f0]	mov	GPR_0x7ffb7218e570, dword ptr [&GPR_0x7ffb72184cb0]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb7218e680]	and	GPR_0x7ffb7218e570, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb7218ea20]	mov	&GPR_0x7ffb7218e9a0, qword ptr [GPR_0x7ffb7218e570+0x30]		# L8RegMem, SymRef  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]
 [0x7ffb7218ed00]	mov	qword ptr [vfp], &GPR_0x7ffb7218e9a0		# S8MemReg, SymRef  <pending push temp 3>[#447  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218f010]	Fence Relative [ 00007FFB72050304 ]	# FENCE BBEnd </block_5>
 [0x7ffb7218f250]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb721899a0 : r8d] [&GPR_0x7ffb72184cb0 : r9d]
 [0x7ffb7218f740]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb721899a0 : r8d] [&GPR_0x7ffb72184cb0 : r9d]
 [0x7ffb7218f4f0]	Label L0160:			# LABEL
	 PRE: [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb721899a0 : r8d] [&GPR_0x7ffb7218e9a0 : edi]
	POST: [&GPR_0x7ffb721864f0 : ebx] [&GPR_0x7ffb72184d30 : eax] [&GPR_0x7ffb72184cb0 : esi] [&GPR_0x7ffb72184c30 : edx] [&GPR_0x7ffb721899a0 : r8d] [&GPR_0x7ffb7218e9a0 : edi]
 [0x7ffb72220510]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb722202c0]	Label L0021:			# LABEL
	 PRE: [&GPR_0x7ffb72220080 : ebx] [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb7218ff60 : esi] [&GPR_0x7ffb7218fee0 : edx] [&GPR_0x7ffb7218fe60 : r8d] [&GPR_0x7ffb7218fde0 : edi]
	POST: [&GPR_0x7ffb72220080 : ebx] [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb7218ff60 : esi] [&GPR_0x7ffb7218fee0 : edx] [&GPR_0x7ffb7218fe60 : r8d] [&GPR_0x7ffb7218fde0 : edi]
========================================
 [0x7ffb72220590]	Fence Relative [ 00007FFB72050430 ]	# FENCE BBStart <block_6> (frequency 785)
 [0x7ffb72220ed0]	Label L0177:			# LABEL	# (Start of internal control flow)
 [0x7ffb72221080]	mov	GPR_0x7ffb72220f70, dword ptr [&GPR_0x7ffb72220000]		# L4RegMem
 [0x7ffb72221110]	and	GPR_0x7ffb72220f70, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72221230]	test	word ptr [GPR_0x7ffb72220f70+0x24], 0x0100	# TEST2MemImm2, SymRef [#449 +36]
 [0x7ffb722212c0]	jne	Outlined Label L0179			# JNE4
 [0x7ffb72221ba0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb72220080 : ebx] [&GPR_0x7ffb7218fee0 : edx] [&GPR_0x7ffb7218fde0 : edi] [&GPR_0x7ffb7218ff60 : esi] [&GPR_0x7ffb7218fe60 : r8d]
 [0x7ffb72221950]	Label L0178:			# LABEL	# (End of internal control flow)
	 PRE: [GPR_0x7ffb72220f70 : NoReg] [GPR_0x7ffb72221530 : eax] [&GPR_0x7ffb72220000 : esi]
	POST: [GPR_0x7ffb72220f70 : NoReg] [GPR_0x7ffb72221530 : eax] [&GPR_0x7ffb72220000 : esi]
 [0x7ffb72221d30]	mov	GPR_0x7ffb72221cb0, dword ptr [&GPR_0x7ffb72220000+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#451  Shadow +80] [flags 0x80603 0x0 ]
 [0x7ffb72222920]	mov	&GPR_0x7ffb722228a0, &GPR_0x7ffb72220000		# MOV8RegReg
 [0x7ffb72222a40]	mov	qword ptr [rsp], GPR_0x7ffb72221cb0		# S8MemReg
 [0x7ffb722233c0]	Label L0181:			# LABEL	# (Start of internal control flow)
	 PRE: [&GPR_0x7ffb722228a0 : eax] [&GPR_0x7ffb72220080 : esi] [&GPR_0x7ffb7218fe60 : edx] [&GPR_0x7ffb7218fde0 : ecx]
 [0x7ffb72222d20]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72222c80]	call	Snippet Label L0183     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb722236b0]	assocRegs                       # ASSOCREGS
	POST: [GPR_0x7ffb72221530 : eax] [&GPR_0x7ffb72220080 : ebx] [&GPR_0x7ffb7218fee0 : edx] [&GPR_0x7ffb7218fde0 : edi] [&GPR_0x7ffb72220000 : esi] [&GPR_0x7ffb7218fe60 : r8d]
 [0x7ffb72223460]	Label L0182:			# LABEL	# (End of internal control flow)
	 PRE: [&GPR_0x7ffb722228a0 : eax] [&GPR_0x7ffb72220080 : esi] [&GPR_0x7ffb7218fe60 : edx] [&GPR_0x7ffb7218fde0 : ecx]
	POST: [D_GPR_0x7ffb72222dc0 : eax] [D_GPR_0x7ffb72222e40 : ecx] [D_GPR_0x7ffb72222ec0 : edx] [D_GPR_0x7ffb72222f40 : edi] [D_GPR_0x7ffb72222fc0 : esi] [D_GPR_0x7ffb72223040 : r8d] [D_GPR_0x7ffb722230c0 : r10d] [D_GPR_0x7ffb72223140 : r11d] [D_GPR_0x7ffb722231c0 : r12d] [D_GPR_0x7ffb72223240 : r13d] [D_GPR_0x7ffb722232c0 : r14d] [D_GPR_0x7ffb72223340 : r15d] [GPR_0x7ffb720099b0 : ebp]
 [0x7ffb72223b40]	Fence Relative [ 00007FFB72050434 ]	# FENCE BBEnd </block_6>
........................................
 [0x7ffb72223c60]	Fence Relative [ 00007FFB7215B1B0 ]	# FENCE BBStart <block_12> (frequency 785) (extension of previous block)
 [0x7ffb722240f0]	assocRegs                       # ASSOCREGS
	POST: [D_GPR_0x7ffb72222dc0 : eax] [&GPR_0x7ffb72220000 : ebx] [D_GPR_0x7ffb72222e40 : ecx] [D_GPR_0x7ffb72222ec0 : edx] [D_GPR_0x7ffb72222f40 : edi] [D_GPR_0x7ffb72222fc0 : esi] [D_GPR_0x7ffb72223040 : r8d] [&GPR_0x7ffb7218ff60 : r9d] [D_GPR_0x7ffb722230c0 : r10d] [D_GPR_0x7ffb72223140 : r11d] [D_GPR_0x7ffb722231c0 : r12d] [D_GPR_0x7ffb72223240 : r13d] [D_GPR_0x7ffb722232c0 : r14d] [D_GPR_0x7ffb72223340 : r15d]
 [0x7ffb72223ea0]	jmp	Label L0019			# JMP4
	 PRE: [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb7218ff60 : esi] [&GPR_0x7ffb7218fee0 : edx]
	POST: [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb7218ff60 : esi] [&GPR_0x7ffb7218fee0 : edx]
 [0x7ffb72224260]	Fence Relative [ 00007FFB7215B1B4 ]	# FENCE BBEnd </block_12>
 [0x7ffb722244a0]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72220000 : eax] [&GPR_0x7ffb7218fee0 : edx] [&GPR_0x7ffb7218ff60 : esi]
 [0x7ffb72224580]	Label L0192:			# LABEL
 [0x7ffb72224dd0]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb72224b80]	Label L0017:			# LABEL
	 PRE: [&GPR_0x7ffb72224a10 : eax] [&GPR_0x7ffb72224990 : esi] [&GPR_0x7ffb72224910 : edx]
	POST: [&GPR_0x7ffb72224a10 : eax] [&GPR_0x7ffb72224990 : esi] [&GPR_0x7ffb72224910 : edx]
========================================
 [0x7ffb72224e50]	Fence Relative [ 00007FFB72071210 ]	# FENCE BBStart <block_8> (frequency 180)
 [0x7ffb72226a50]	Label L0208:			# LABEL	# (Start of internal control flow)
	 PRE: [&GPR_0x7ffb72224a10 : eax]
 [0x7ffb72225bb0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72225b10]	call	Snippet Label L0210     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72226d40]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72224a10 : eax] [&GPR_0x7ffb72224910 : edx] [&GPR_0x7ffb72224990 : esi]
 [0x7ffb72226af0]	Label L0209:			# LABEL	# (End of internal control flow)
	 PRE: [&GPR_0x7ffb72224a10 : eax]
	POST: [D_GPR_0x7ffb72225c50 : ecx] [D_GPR_0x7ffb72225cd0 : edx] [D_GPR_0x7ffb72225d50 : edi] [D_GPR_0x7ffb72225dd0 : esi] [D_GPR_0x7ffb72225e50 : r8d] [D_GPR_0x7ffb72225ed0 : r10d] [D_GPR_0x7ffb72225f50 : r11d] [D_GPR_0x7ffb72225fd0 : r12d] [D_GPR_0x7ffb72226050 : r13d] [D_GPR_0x7ffb722260d0 : r14d] [D_GPR_0x7ffb72226150 : r15d] [GPR_0x7ffb720099b0 : ebp] [&GPR_0x7ffb722261d0 : eax]
 [0x7ffb722272c0]	mov	qword ptr [vfp], &GPR_0x7ffb722261d0		# S8MemReg, SymRef  caller<auto slot 3>[#455  Auto] [flags 0x7 0x0 ]
 [0x7ffb72227510]	Fence Relative [ 00007FFB72071214 ]	# FENCE BBEnd </block_8>
........................................
 [0x7ffb72227630]	Fence Relative [ 00007FFB7215B3A0 ]	# FENCE BBStart <block_13> (frequency 180) (extension of previous block)
 [0x7ffb72227b60]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb722261d0 : eax] [&GPR_0x7ffb72224990 : ebx] [D_GPR_0x7ffb72225c50 : ecx] [D_GPR_0x7ffb72225cd0 : edx] [D_GPR_0x7ffb72225d50 : edi] [D_GPR_0x7ffb72225dd0 : esi] [D_GPR_0x7ffb72225e50 : r8d] [&GPR_0x7ffb72224910 : r9d] [D_GPR_0x7ffb72225ed0 : r10d] [D_GPR_0x7ffb72225f50 : r11d] [D_GPR_0x7ffb72225fd0 : r12d] [D_GPR_0x7ffb72226050 : r13d] [D_GPR_0x7ffb722260d0 : r14d] [D_GPR_0x7ffb72226150 : r15d]
 [0x7ffb722278a0]	jmp	Label L0020			# JMP4
	 PRE: [&GPR_0x7ffb722261d0 : ebx] [&GPR_0x7ffb72224990 : esi] [&GPR_0x7ffb72224910 : edx]
	POST: [&GPR_0x7ffb722261d0 : ebx] [&GPR_0x7ffb72224990 : esi] [&GPR_0x7ffb72224910 : edx]
 [0x7ffb72227d00]	Fence Relative [ 00007FFB7215B3A4 ]	# FENCE BBEnd </block_13>
 [0x7ffb72227f40]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb722261d0 : ebx] [&GPR_0x7ffb72224910 : edx] [&GPR_0x7ffb72224990 : esi]
 [0x7ffb72228020]	Label L0224:			# LABEL
 [0x7ffb72228b50]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb72228900]	Label L0018:			# LABEL
	 PRE: [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228590 : edx] [&GPR_0x7ffb72228510 : r8d]
	POST: [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228590 : edx] [&GPR_0x7ffb72228510 : r8d]
========================================
 [0x7ffb72228bd0]	Fence Relative [ 00007FFB72070EB0 ]	# FENCE BBStart <block_4> (frequency 24)
 [0x7ffb72229270]	mov	qword ptr [vfp], 0x00000000	# S8MemImm4, SymRef  <pending push temp 3>[#456  Auto] [flags 0x7 0x800 ]
 [0x7ffb72229540]	xor	GPR_0x7ffb722294c0, GPR_0x7ffb722294c0		# XOR4RegReg
 [0x7ffb72229b90]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228590 : edx] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228510 : r8d]
 [0x7ffb722298d0]	jmp	Label L0021			# JMP4
	 PRE: [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228590 : edx] [&GPR_0x7ffb72228510 : r8d] [GPR_0x7ffb722294c0 : edi]
	POST: [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228590 : edx] [&GPR_0x7ffb72228510 : r8d] [GPR_0x7ffb722294c0 : edi]
 [0x7ffb72229d30]	Fence Relative [ 00007FFB72070EB4 ]	# FENCE BBEnd </block_4>
 [0x7ffb72229f70]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb72228690 : eax] [&GPR_0x7ffb72228710 : ebx] [&GPR_0x7ffb72228590 : edx] [GPR_0x7ffb722294c0 : edi] [&GPR_0x7ffb72228610 : esi] [&GPR_0x7ffb72228510 : r8d]
 [0x7ffb7222a050]	Label L0240:			# LABEL
 [0x7ffb7222a260]	Label L0256:			# LABEL
========================================
 [0x7ffb7222a300]	Fence Relative [ 00007FFB720A0250 ]	# FENCE BBStart <block_10> (frequency 0) (catches ...) (cold)
 [0x7ffb7222a470]	Fence Relative [ 00007FFB720A0254 ]	# FENCE BBEnd </block_10>
........................................
 [0x7ffb7222a590]	Fence Relative [ 00007FFB72147000 ]	# FENCE BBStart <block_15> (frequency 0) (extension of previous block) (cold)
 [0x7ffb7222a850]	mov	&GPR_0x7ffb7222a7d0, qword ptr [vfp]		# L8RegMem, SymRef  this<'this' parm Ljava/lang/reflect/Method;>[#457  Parm] [flags 0xc0000107 0x0 ]
 [0x7ffb7222ac50]	mov	&GPR_0x7ffb7222abd0, qword ptr [vfp+0x8]		# L8RegMem, SymRef  obj<parm 1 Ljava/lang/Object;>[#458  Parm] [flags 0xc0000107 0x0 ]
 [0x7ffb7222b050]	mov	&GPR_0x7ffb7222afd0, qword ptr [vfp+0x10]		# L8RegMem, SymRef  args<parm 2 [Ljava/lang/Object;>[#459  Parm] [flags 0xc0000107 0x0 ]
 [0x7ffb7222b370]	Fence Relative [ 00007FFB72147004 ]	# FENCE BBEnd </block_15>
 [0x7ffb7222b5b0]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb7222b9d0]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb7222b780]	Label L0272:			# LABEL
	 PRE: [&GPR_0x7ffb7222a7d0 : eax] [&GPR_0x7ffb7222abd0 : esi] [&GPR_0x7ffb7222afd0 : edx]
	POST: [&GPR_0x7ffb7222a7d0 : eax] [&GPR_0x7ffb7222abd0 : esi] [&GPR_0x7ffb7222afd0 : edx]
 [0x7ffb7222c380]	assocRegs                       # ASSOCREGS
	POST: None
 [0x7ffb7222c130]	Label L0288:			# LABEL
	 PRE: [&GPR_0x7ffb7222bfc0 : eax] [&GPR_0x7ffb7222bf40 : esi] [&GPR_0x7ffb7222bec0 : edx]
	POST: [&GPR_0x7ffb7222bfc0 : eax] [&GPR_0x7ffb7222bf40 : esi] [&GPR_0x7ffb7222bec0 : edx]
========================================
 [0x7ffb7222c400]	Fence Relative [ 00007FFB720A0120 ]	# FENCE BBStart <block_11> (frequency 0) (cold)
 [0x7ffb7222cb50]	mov	&GPR_0x7ffb7222cad0, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 0>[#460  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222cd80]	mov	GPR_0x7ffb7222cd00, dword ptr [GPR_0x7ffb720099b0+0x15c]		# L4RegMem, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb7222cf20]	lea	GPR_0x7ffb7222ce10, dword ptr [GPR_0x7ffb7222cd00+0x58]		# LEA4RegMem, SymRef [#463 +88]
 [0x7ffb7222cfb0]	movsxd	GPR_0x7ffb7222ce10, GPR_0x7ffb7222ce10		# MOVSXReg8Reg4
 [0x7ffb7222d150]	mov	GPR_0x7ffb7222d0d0, qword ptr [GPR_0x7ffb720099b0+0x968]		# L8RegMem, SymRef  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]
 [0x7ffb7222d1e0]	mov	qword ptr [GPR_0x7ffb7222ce10+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222cad0		# S8MemReg, SymRef  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222da90]	mov	&GPR_0x7ffb7222da10, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 1>[#465  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222dcc0]	lea	GPR_0x7ffb7222dbb0, dword ptr [GPR_0x7ffb7222cd00+0x50]		# LEA4RegMem, SymRef [#467 +80]
 [0x7ffb7222dd50]	movsxd	GPR_0x7ffb7222dbb0, GPR_0x7ffb7222dbb0		# MOVSXReg8Reg4
 [0x7ffb7222dde0]	mov	qword ptr [GPR_0x7ffb7222dbb0+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222da10		# S8MemReg, SymRef  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222e4d0]	mov	&GPR_0x7ffb7222e450, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 2>[#468  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222e700]	lea	GPR_0x7ffb7222e5f0, dword ptr [GPR_0x7ffb7222cd00+0x48]		# LEA4RegMem, SymRef [#470 +72]
 [0x7ffb7222e790]	movsxd	GPR_0x7ffb7222e5f0, GPR_0x7ffb7222e5f0		# MOVSXReg8Reg4
 [0x7ffb7222e820]	mov	qword ptr [GPR_0x7ffb7222e5f0+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222e450		# S8MemReg, SymRef  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222ef10]	mov	&GPR_0x7ffb7222ee90, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 3>[#471  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222f140]	lea	GPR_0x7ffb7222f030, dword ptr [GPR_0x7ffb7222cd00+0x40]		# LEA4RegMem, SymRef [#473 +64]
 [0x7ffb7222f1d0]	movsxd	GPR_0x7ffb7222f030, GPR_0x7ffb7222f030		# MOVSXReg8Reg4
 [0x7ffb7222f260]	mov	qword ptr [GPR_0x7ffb7222f030+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222ee90		# S8MemReg, SymRef  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222f930]	lea	GPR_0x7ffb7222f820, dword ptr [GPR_0x7ffb7222cd00+0x78]		# LEA4RegMem, SymRef [#475 +120]
 [0x7ffb7222f9c0]	movsxd	GPR_0x7ffb7222f820, GPR_0x7ffb7222f820		# MOVSXReg8Reg4
 [0x7ffb7222fa50]	mov	qword ptr [GPR_0x7ffb7222f820+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222bfc0		# S8MemReg, SymRef  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230000]	lea	GPR_0x7ffb7222fe90, dword ptr [GPR_0x7ffb7222cd00+0x70]		# LEA4RegMem, SymRef [#477 +112]
 [0x7ffb72230090]	movsxd	GPR_0x7ffb7222fe90, GPR_0x7ffb7222fe90		# MOVSXReg8Reg4
 [0x7ffb72230120]	mov	qword ptr [GPR_0x7ffb7222fe90+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222bf40		# S8MemReg, SymRef  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230670]	lea	GPR_0x7ffb72230560, dword ptr [GPR_0x7ffb7222cd00+0x68]		# LEA4RegMem, SymRef [#479 +104]
 [0x7ffb72230700]	movsxd	GPR_0x7ffb72230560, GPR_0x7ffb72230560		# MOVSXReg8Reg4
 [0x7ffb72230790]	mov	qword ptr [GPR_0x7ffb72230560+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb7222bec0		# S8MemReg, SymRef  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230d00]	mov	&GPR_0x7ffb72230c80, qword ptr [vfp]		# L8RegMem, SymRef  caller<auto slot 3>[#480  Auto] [flags 0x7 0x0 ]
 [0x7ffb72230f30]	lea	GPR_0x7ffb72230e20, dword ptr [GPR_0x7ffb7222cd00+0x60]		# LEA4RegMem, SymRef [#482 +96]
 [0x7ffb72230fc0]	movsxd	GPR_0x7ffb72230e20, GPR_0x7ffb72230e20		# MOVSXReg8Reg4
 [0x7ffb72231050]	mov	qword ptr [GPR_0x7ffb72230e20+1*GPR_0x7ffb7222d0d0], &GPR_0x7ffb72230c80		# S8MemReg, SymRef  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72231520]	sub	GPR_0x7ffb7222cd00, 0xffffffffffffff80	# SUB4RegImms
 [0x7ffb72231640]	mov	dword ptr [GPR_0x7ffb720099b0+0x15c], GPR_0x7ffb7222cd00		# S4MemReg, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb722319c0]	mov	GPR_0x7ffb72231940, qword ptr [GPR_0x7ffb720099b0+0x970]		# L8RegMem, SymRef  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]
 [0x7ffb72231a50]	jmp	GPR_0x7ffb72231940			# JMPReg
 [0x7ffb72231c50]	Fence Relative [ 00007FFB720A0124 ]	# FENCE BBEnd </block_11>
 [0x7ffb72231e90]	assocRegs                       # ASSOCREGS
	POST: [&GPR_0x7ffb7222bfc0 : eax] [&GPR_0x7ffb7222bec0 : edx] [&GPR_0x7ffb7222bf40 : esi]
 [0x7ffb72231f70]	Label L0304:			# LABEL
------------ start out-of-line instructions

 [0x7ffb72221490]	Outlined Label L0179:			# LABEL
 [0x7ffb72221680]	lea	GPR_0x7ffb72221530, qword ptr [Snippet Label L0176]		# LEA8RegMem
 [0x7ffb72221710]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb722217b0]	jmp	Label L0178			# JMP4
 [0x7ffb722218b0]	Label L0180:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7218b5c0]	Outlined Label L0141:			# LABEL
 [0x7ffb7218b770]	lea	GPR_0x7ffb7218b660, qword ptr [Snippet Label L0138]		# LEA8RegMem
 [0x7ffb7218b800]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7218b8a0]	jmp	Label L0140			# JMP4
 [0x7ffb7218b9a0]	Label L0142:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72188e30]	Outlined Label L0135:			# LABEL
 [0x7ffb72188fe0]	lea	GPR_0x7ffb72188ed0, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72189070]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72189110]	jmp	Label L0134			# JMP4
 [0x7ffb72189210]	Label L0136:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72187d80]	Outlined Label L0131:			# LABEL
 [0x7ffb72187f60]	mov	GPR_0x7ffb72187e20, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72188000]	mov	GPR_0x7ffb72187ea0, 0x0000000f	# MOV8RegImm4
 [0x7ffb72188090]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72188130]	sub	GPR_0x7ffb72187e20, 0x00000004	# SUB8RegImm4
 [0x7ffb72188250]	mov	qword ptr [GPR_0x7ffb72187910+0x10], GPR_0x7ffb72187e20		# S8MemReg, SymRef [#432 +16]
 [0x7ffb721882e0]	jmp	Label L0130			# JMP4
 [0x7ffb721883e0]	Label L0132:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7217d400]	Outlined Label L0071:			# LABEL
 [0x7ffb7217d5b0]	lea	GPR_0x7ffb7217d4a0, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217d640]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7217d6e0]	jmp	Label L0070			# JMP4
 [0x7ffb7217d7e0]	Label L0072:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7217c390]	Outlined Label L0067:			# LABEL
 [0x7ffb7217c530]	mov	GPR_0x7ffb7217c430, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb7217c5d0]	mov	GPR_0x7ffb7217c4b0, 0x0000001e	# MOV8RegImm4
 [0x7ffb7217c660]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb7217c700]	sub	GPR_0x7ffb7217c430, 0x00000004	# SUB8RegImm4
 [0x7ffb7217c820]	mov	qword ptr [GPR_0x7ffb7217bf20+0x10], GPR_0x7ffb7217c430		# S8MemReg, SymRef [#416 +16]
 [0x7ffb7217c8b0]	jmp	Label L0066			# JMP4
 [0x7ffb7217c9b0]	Label L0068:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72178ad0]	Outlined Label L0040:			# LABEL
 [0x7ffb72178c80]	lea	GPR_0x7ffb72178b70, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72178da0]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72178e40]	jmp	Label L0039			# JMP4
 [0x7ffb72178f40]	Label L0041:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb721778b0]	Outlined Label L0036:			# LABEL
 [0x7ffb72177b70]	mov	GPR_0x7ffb72177950, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72177c10]	mov	GPR_0x7ffb72177a10, 0x00000045	# MOV8RegImm4
 [0x7ffb72177d30]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72177dd0]	sub	GPR_0x7ffb72177950, 0x00000004	# SUB8RegImm4
 [0x7ffb72177ef0]	mov	qword ptr [GPR_0x7ffb72177400+0x10], GPR_0x7ffb72177950		# S8MemReg, SymRef [#408 +16]
 [0x7ffb72177f80]	jmp	Label L0035			# JMP4
 [0x7ffb72178080]	Label L0037:			# LABEL
------------ end out-of-line instructions

</instructions>
totalSlotsInMap is 8, numLocalObjectPaddingSlots is 0

<instructions
	title="Post Register Assignment Instructions"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

                +--------------------------------------- instruction address
                |       +------------------------------------------ 
                |       |       +----------------------------------------- instruction
                |       |       |
                V       V       V
 [0x7ffb72174df0]	Label L0022:			# LABEL
 [0x7ffb72174f60]	mov	rdi, 0x0000000000078438	# MOV8RegImm64
 [0x7ffb721752b0]	mov	qword ptr [rsp+0x18], rax		# S8MemReg, SymRef [#402 +24]
 [0x7ffb721754f0]	mov	qword ptr [rsp+0x10], rsi		# S8MemReg, SymRef [#403 +16]
 [0x7ffb72175730]	mov	qword ptr [rsp+0x8], rdx		# S8MemReg, SymRef [#404 +8]
 [0x7ffb72175a10]	assocRegs                       # ASSOCREGS
 [0x7ffb721757c0]	jmp	j2iTransition           # JMP4 (00007FFBC390DA70)# JMP4
 [0x7ffb72175a90]	nop			# Alignment (boundary=8, margin=8)
 [0x7ffb72175b20]	jmp	Label L0022			# JMP4
 [0x7ffb72175bc0]	.short	0xcccc		# DWImm2
 [0x7ffb72175c50]	.int	0x00000005		# DDImm4
 [0x7ffb72175f50]	assocRegs                       # ASSOCREGS
 [0x7ffb72175d20]	ProcEntry                       # PROCENTRY
 [0x7ffb72176780]	assocRegs                       # ASSOCREGS
 [0x7ffb72176530]	Label L0032:			# LABEL
 [0x7ffb722433a0]	mov	rcx, rsi		# MOV8RegReg
 [0x7ffb72243310]	mov	rdi, rax		# MOV8RegReg
========================================
 [0x7ffb72176800]	Fence Relative [ 00007FFB72050690 ]	# FENCE BBStart <block_2> (frequency 10000)
 [0x7ffb721774c0]	Label L0034:			# LABEL	# (Start of internal control flow)
 [0x7ffb721775f0]	lea	r8, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72177710]	cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#406 +16]
 [0x7ffb722421a0]	vfpSave			# AdjustFramePtr
 [0x7ffb721777a0]	je	Outlined Label L0036			# JE4
 [0x7ffb72178370]	assocRegs                       # ASSOCREGS
 [0x7ffb72178120]	Label L0035:			# LABEL	# (End of internal control flow)
 [0x7ffb722420f0]	mov	rsi, rdi		# MOV8RegReg
 [0x7ffb72178510]	Label L0038:			# LABEL	# (Start of internal control flow)
 [0x7ffb721786c0]	mov	edi, dword ptr [rsi]		# L4RegMem
 [0x7ffb72178750]	and	edi, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72178870]	test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#410 +36]
 [0x7ffb72240ec0]	vfpSave			# AdjustFramePtr
 [0x7ffb72178900]	jne	Outlined Label L0040			# JNE4
 [0x7ffb72179230]	assocRegs                       # ASSOCREGS
 [0x7ffb72178fe0]	Label L0039:			# LABEL	# (End of internal control flow)
 [0x7ffb72240e10]	xchg	rcx, rsi		# XCHG8RegReg
 [0x7ffb72240d80]	mov	rax, rcx		# MOV8RegReg
 [0x7ffb721796a0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72179610]	mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.override Z[#412  unresolved volatile Shadow] [flags 0x2601 0x0 ]
 [0x7ffb72179740]	nop			# Padding (2 bytes)
 [0x7ffb72179e50]	test	ecx, ecx		# TEST4RegReg
 [0x7ffb7217a220]	assocRegs                       # ASSOCREGS
 [0x7ffb72179fd0]	je	Label L0016			# JE4
 [0x7ffb7217a410]	Fence Relative [ 00007FFB72050694 ]	# FENCE BBEnd </block_2>
........................................
 [0x7ffb7217a530]	Fence Relative [ 00007FFB72146D50 ]	# FENCE BBStart <block_14> (frequency 9238) (extension of previous block)
 [0x7ffb7217a680]	Fence Relative [ 00007FFB72146D54 ]	# FENCE BBEnd </block_14>
 [0x7ffb7217a8c0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ace0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217aa90]	Label L0048:			# LABEL
 [0x7ffb7217b570]	assocRegs                       # ASSOCREGS
 [0x7ffb7217b320]	Label L0019:			# LABEL
 [0x7ffb72240bf0]	mov	rcx, rsi		# MOV8RegReg
 [0x7ffb72240b60]	mov	rdi, rax		# MOV8RegReg
========================================
 [0x7ffb7217b5f0]	Fence Relative [ 00007FFB720501D0 ]	# FENCE BBStart <block_7> (frequency 9726)
 [0x7ffb7217bfa0]	Label L0065:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217c0d0]	lea	r8, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217c1f0]	cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#415 +16]
 [0x7ffb7223f9f0]	vfpSave			# AdjustFramePtr
 [0x7ffb7217c280]	je	Outlined Label L0067			# JE4
 [0x7ffb7217cca0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ca50]	Label L0066:			# LABEL	# (End of internal control flow)
 [0x7ffb7223f940]	mov	rsi, rdi		# MOV8RegReg
 [0x7ffb7217ce40]	Label L0069:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217cff0]	mov	edi, dword ptr [rsi]		# L4RegMem
 [0x7ffb7217d080]	and	edi, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7217d1a0]	test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#418 +36]
 [0x7ffb7223e710]	vfpSave			# AdjustFramePtr
 [0x7ffb7217d230]	jne	Outlined Label L0071			# JNE4
 [0x7ffb7217dad0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217d880]	Label L0070:			# LABEL	# (End of internal control flow)
 [0x7ffb7223e660]	xchg	rcx, rsi		# XCHG8RegReg
 [0x7ffb7223e5d0]	mov	rax, rcx		# MOV8RegReg
 [0x7ffb7217de40]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7217ddb0]	mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#420  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb7217dee0]	nop			# Padding (2 bytes)
 [0x7ffb7217dff0]	lea	rbx, qword ptr [8*rcx]		# LEA8RegMem
 [0x7ffb7217e9c0]	mov	qword ptr [vfp], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#421  Auto] [flags 0x7 0x0 ]
 [0x7ffb7217ecd0]	test	rbx, rbx		# TEST8RegReg
 [0x7ffb7217f0a0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ee50]	je	Label L0017			# JE4
 [0x7ffb7217f2f0]	Fence Relative [ 00007FFB720501D4 ]	# FENCE BBEnd </block_7>
 [0x7ffb7217f530]	assocRegs                       # ASSOCREGS
 [0x7ffb7217f950]	assocRegs                       # ASSOCREGS
 [0x7ffb7217f700]	Label L0074:			# LABEL
 [0x7ffb72180260]	assocRegs                       # ASSOCREGS
 [0x7ffb72180010]	Label L0020:			# LABEL
========================================
 [0x7ffb721802e0]	Fence Relative [ 00007FFB72050560 ]	# FENCE BBStart <block_9> (frequency 9726)
 [0x7ffb72181480]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72181620]	mov	r9d, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb721816b0]	and	r9, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb72183470]	Label L0080:			# LABEL	# (Start of internal control flow)
 [0x7ffb72181a70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721819d0]	mov	rbx, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72181b10]	cmp	rbx, r9		# CMP8RegReg
 [0x7ffb72181ba0]	jne	Label L0083			# JNE1
 [0x7ffb72181c40]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb72181ce0]	jmp	Label L0081			# JMP4
 [0x7ffb72181d80]	Label L0083:			# LABEL
 [0x7ffb72182060]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72181fc0]	mov	rbx, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72182100]	cmp	rbx, r9		# CMP8RegReg
 [0x7ffb72182190]	jne	Label L0096			# JNE1
 [0x7ffb72182230]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb721822d0]	jmp	Label L0081			# JMP4
 [0x7ffb721824b0]	Label L0097:			# LABEL
 [0x7ffb72182550]	mov	r8d, 0x00000178	# MOV4RegImm4
 [0x7ffb72182670]	sub	r8, qword ptr [rdi+0x18]		# SUB8RegMem, SymRef [#423 +24]
 [0x7ffb72182790]	jmp	dword ptr [r9+1*r8]		# JMPMem
 [0x7ffb72182820]	Label L0096:			# LABEL
 [0x7ffb72182950]	mov	rdi, qword ptr [r9+0x60]		# L8RegMem, SymRef [#425 +96]
 [0x7ffb72182a70]	cmp	dword ptr [rdi], 0x000a5700	# CMP4MemImm4
 [0x7ffb72182b00]	jne	Snippet Label L0084		# JNE4	# (IPic Data)
 [0x7ffb72182df0]	assocRegs                       # ASSOCREGS
 [0x7ffb72182ba0]	call	Label L0097			# CALLImm4
 [0x7ffb72183760]	assocRegs                       # ASSOCREGS
 [0x7ffb72183510]	Label L0081:			# LABEL	# (End of internal control flow)
 [0x7ffb72184440]	assocRegs                       # ASSOCREGS
 [0x7ffb72184210]	ret                             # RET
 [0x7ffb72184580]	Fence Relative [ 00007FFB72050564 ]	# FENCE BBEnd </block_9>
 [0x7ffb721847c0]	assocRegs                       # ASSOCREGS
 [0x7ffb721848a0]	Label L0098:			# LABEL
 [0x7ffb721850f0]	assocRegs                       # ASSOCREGS
 [0x7ffb72184ea0]	Label L0016:			# LABEL
 [0x7ffb7223e0f0]	mov	qword ptr [vfp], rdx		# S8MemReg, #SPILL8, SymRef  <#SPILL8_493 0x7ffb72237290>[#493  Auto] [flags 0x80000000 0x0 ]
 [0x7ffb7223df90]	mov	qword ptr [vfp], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_492 0x7ffb72238ed0>[#492  Auto] [flags 0x80000000 0x0 ]
 [0x7ffb7223de30]	mov	r9, rax		# MOV8RegReg
========================================
 [0x7ffb72185170]	Fence Relative [ 00007FFB720509E0 ]	# FENCE BBStart <block_3> (frequency 785)
 [0x7ffb72186570]	Label L0112:			# LABEL	# (Start of internal control flow)
 [0x7ffb72185ed0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72185e30]	call	Snippet Label L0114     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72186860]	assocRegs                       # ASSOCREGS
 [0x7ffb72186610]	Label L0113:			# LABEL	# (End of internal control flow)
 [0x7ffb7223dd40]	mov	rbx, rax		# MOV8RegReg
 [0x7ffb72186d80]	mov	qword ptr [vfp], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#428  Auto] [flags 0x7 0x0 ]
 [0x7ffb72187990]	Label L0129:			# LABEL	# (Start of internal control flow)
 [0x7ffb72187ac0]	lea	rcx, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72187be0]	cmp	qword ptr [rcx+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#431 +16]
 [0x7ffb7223bb00]	vfpSave			# AdjustFramePtr
 [0x7ffb72187c70]	je	Outlined Label L0131			# JE4
 [0x7ffb721886d0]	assocRegs                       # ASSOCREGS
 [0x7ffb72188480]	Label L0130:			# LABEL	# (End of internal control flow)
 [0x7ffb7223ba50]	mov	rsi, r9		# MOV8RegReg
 [0x7ffb72188870]	Label L0133:			# LABEL	# (Start of internal control flow)
 [0x7ffb72188a20]	mov	ecx, dword ptr [rsi]		# L4RegMem
 [0x7ffb72188ab0]	and	ecx, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72188bd0]	test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#434 +36]
 [0x7ffb7223a7a0]	vfpSave			# AdjustFramePtr
 [0x7ffb72188c60]	jne	Outlined Label L0135			# JNE4
 [0x7ffb72189500]	assocRegs                       # ASSOCREGS
 [0x7ffb721892b0]	Label L0134:			# LABEL	# (End of internal control flow)
 [0x7ffb72189870]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721897e0]	mov	eax, dword ptr [rsi-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.clazz Ljava/lang/Class;[#436  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb72189910]	nop			# Padding (2 bytes)
 [0x7ffb72189a20]	lea	rax, qword ptr [8*rax]		# LEA8RegMem
 [0x7ffb7218a310]	mov	qword ptr [vfp], rsi		# S8MemReg, SymRef  <pending push temp 0>[#437  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218a6a0]	mov	qword ptr [vfp], rbx		# S8MemReg, SymRef  <pending push temp 1>[#438  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218aac0]	mov	qword ptr [vfp], rax		# S8MemReg, SymRef  <pending push temp 2>[#439  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218b000]	Label L0139:			# LABEL	# (Start of internal control flow)
 [0x7ffb7218b1b0]	mov	ecx, dword ptr [rsi]		# L4RegMem
 [0x7ffb7218b240]	and	ecx, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7218b360]	test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#441 +36]
 [0x7ffb72239450]	vfpSave			# AdjustFramePtr
 [0x7ffb7218b3f0]	jne	Outlined Label L0141			# JNE4
 [0x7ffb7218bc90]	assocRegs                       # ASSOCREGS
 [0x7ffb7218ba40]	Label L0140:			# LABEL	# (End of internal control flow)
 [0x7ffb722393a0]	mov	r9, rsi		# MOV8RegReg
 [0x7ffb7218be20]	mov	eax, dword ptr [r9+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#443  Shadow +80] [flags 0x80603 0x0 ]
 [0x7ffb7218d280]	Label L0143:			# LABEL	# (Start of internal control flow)
 [0x7ffb7218cbe0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7218cb40]	call	Snippet Label L0145     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb7218d570]	assocRegs                       # ASSOCREGS
 [0x7ffb7218d320]	Label L0144:			# LABEL	# (End of internal control flow)
 [0x7ffb72239290]	xchg	r9, rax		# XCHG8RegReg
 [0x7ffb722391a0]	mov	r8, qword ptr [vfp]		# L8RegMem ; $REMAT, SymRef  <pending push temp 2>[#491  Auto] [flags 0x7 0x800 ]
 [0x7ffb72239040]	mov	rsi, qword ptr [vfp]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_490 0x7ffb72238ed0>[#490  Auto] [flags 0x80000000 0x0 ]#, spilled for icall
 [0x7ffb72238e00]	mov	rdx, qword ptr [vfp]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_488 0x7ffb72237290>[#488  Auto] [flags 0x80000000 0x0 ]#, spilled for icall
 [0x7ffb72238ce0]	mov	rcx, r9		# MOV8RegReg
 [0x7ffb7218db00]	test	ecx, ecx		# TEST4RegReg
 [0x7ffb7218dfc0]	assocRegs                       # ASSOCREGS
 [0x7ffb7218dd00]	jne	Label L0018			# JNE4
 [0x7ffb7218e210]	Fence Relative [ 00007FFB720509E4 ]	# FENCE BBEnd </block_3>
........................................
 [0x7ffb7218e330]	Fence Relative [ 00007FFB72050300 ]	# FENCE BBStart <block_5> (frequency 766) (extension of previous block)
 [0x7ffb7218e5f0]	mov	ecx, dword ptr [rsi]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb7218e680]	and	rcx, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb7218ea20]	mov	rdi, qword ptr [rcx+0x30]		# L8RegMem, SymRef  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]
 [0x7ffb7218ed00]	mov	qword ptr [vfp], rdi		# S8MemReg, SymRef  <pending push temp 3>[#447  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218f010]	Fence Relative [ 00007FFB72050304 ]	# FENCE BBEnd </block_5>
 [0x7ffb7218f250]	assocRegs                       # ASSOCREGS
 [0x7ffb7218f740]	assocRegs                       # ASSOCREGS
 [0x7ffb7218f4f0]	Label L0160:			# LABEL
 [0x7ffb72220510]	assocRegs                       # ASSOCREGS
 [0x7ffb722202c0]	Label L0021:			# LABEL
 [0x7ffb72238ab0]	mov	r9, rdx		# MOV8RegReg
 [0x7ffb72238a20]	mov	rcx, rdi		# MOV8RegReg
 [0x7ffb72238990]	mov	rdx, r8		# MOV8RegReg
 [0x7ffb72238900]	mov	qword ptr [vfp], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_487 0x7ffb72237290>[#487  Auto] [flags 0x80000000 0x0 ]
 [0x7ffb722387a0]	mov	rsi, rax		# MOV8RegReg
========================================
 [0x7ffb72220590]	Fence Relative [ 00007FFB72050430 ]	# FENCE BBStart <block_6> (frequency 785)
 [0x7ffb72220ed0]	Label L0177:			# LABEL	# (Start of internal control flow)
 [0x7ffb72221080]	mov	r10d, dword ptr [rsi]		# L4RegMem
 [0x7ffb72221110]	and	r10d, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72221230]	test	word ptr [r10+0x24], 0x0100	# TEST2MemImm2, SymRef [#449 +36]
 [0x7ffb72237620]	vfpSave			# AdjustFramePtr
 [0x7ffb722212c0]	jne	Outlined Label L0179			# JNE4
 [0x7ffb72221ba0]	assocRegs                       # ASSOCREGS
 [0x7ffb72221950]	Label L0178:			# LABEL	# (End of internal control flow)
 [0x7ffb72237570]	xchg	rbx, rsi		# XCHG8RegReg
 [0x7ffb72221d30]	mov	r10d, dword ptr [rbx+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#451  Shadow +80] [flags 0x80603 0x0 ]
 [0x7ffb72222920]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72222a40]	mov	qword ptr [rsp], r10		# S8MemReg
 [0x7ffb722233c0]	Label L0181:			# LABEL	# (Start of internal control flow)
 [0x7ffb72222d20]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72222c80]	call	Snippet Label L0183     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb722236b0]	assocRegs                       # ASSOCREGS
 [0x7ffb72223460]	Label L0182:			# LABEL	# (End of internal control flow)
 [0x7ffb72237400]	mov	rsi, qword ptr [vfp]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_486 0x7ffb72237290>[#486  Auto] [flags 0x80000000 0x0 ]#, spilled for call
 [0x7ffb72237200]	mov	rdx, r9		# MOV8RegReg
 [0x7ffb72237170]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72223b40]	Fence Relative [ 00007FFB72050434 ]	# FENCE BBEnd </block_6>
........................................
 [0x7ffb72223c60]	Fence Relative [ 00007FFB7215B1B0 ]	# FENCE BBStart <block_12> (frequency 785) (extension of previous block)
 [0x7ffb722240f0]	assocRegs                       # ASSOCREGS
 [0x7ffb72223ea0]	jmp	Label L0019			# JMP4
 [0x7ffb72224260]	Fence Relative [ 00007FFB7215B1B4 ]	# FENCE BBEnd </block_12>
 [0x7ffb722244a0]	assocRegs                       # ASSOCREGS
 [0x7ffb72224580]	Label L0192:			# LABEL
 [0x7ffb72224dd0]	assocRegs                       # ASSOCREGS
 [0x7ffb72224b80]	Label L0017:			# LABEL
 [0x7ffb72237010]	mov	r9, rdx		# MOV8RegReg
 [0x7ffb72236f80]	mov	rbx, rsi		# MOV8RegReg
========================================
 [0x7ffb72224e50]	Fence Relative [ 00007FFB72071210 ]	# FENCE BBStart <block_8> (frequency 180)
 [0x7ffb72226a50]	Label L0208:			# LABEL	# (Start of internal control flow)
 [0x7ffb72225bb0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72225b10]	call	Snippet Label L0210     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72226d40]	assocRegs                       # ASSOCREGS
 [0x7ffb72226af0]	Label L0209:			# LABEL	# (End of internal control flow)
 [0x7ffb72236e70]	mov	rsi, rbx		# MOV8RegReg
 [0x7ffb72236de0]	mov	rdx, r9		# MOV8RegReg
 [0x7ffb72236d50]	mov	rbx, rax		# MOV8RegReg
 [0x7ffb722272c0]	mov	qword ptr [vfp], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#455  Auto] [flags 0x7 0x0 ]
 [0x7ffb72227510]	Fence Relative [ 00007FFB72071214 ]	# FENCE BBEnd </block_8>
........................................
 [0x7ffb72227630]	Fence Relative [ 00007FFB7215B3A0 ]	# FENCE BBStart <block_13> (frequency 180) (extension of previous block)
 [0x7ffb72227b60]	assocRegs                       # ASSOCREGS
 [0x7ffb722278a0]	jmp	Label L0020			# JMP4
 [0x7ffb72227d00]	Fence Relative [ 00007FFB7215B3A4 ]	# FENCE BBEnd </block_13>
 [0x7ffb72227f40]	assocRegs                       # ASSOCREGS
 [0x7ffb72228020]	Label L0224:			# LABEL
 [0x7ffb72228b50]	assocRegs                       # ASSOCREGS
 [0x7ffb72228900]	Label L0018:			# LABEL
========================================
 [0x7ffb72228bd0]	Fence Relative [ 00007FFB72070EB0 ]	# FENCE BBStart <block_4> (frequency 24)
 [0x7ffb72229270]	mov	qword ptr [vfp], 0x00000000	# S8MemImm4, SymRef  <pending push temp 3>[#456  Auto] [flags 0x7 0x800 ]
 [0x7ffb72229540]	xor	edi, edi		# XOR4RegReg
 [0x7ffb72229b90]	assocRegs                       # ASSOCREGS
 [0x7ffb722298d0]	jmp	Label L0021			# JMP4
 [0x7ffb72229d30]	Fence Relative [ 00007FFB72070EB4 ]	# FENCE BBEnd </block_4>
 [0x7ffb72229f70]	assocRegs                       # ASSOCREGS
 [0x7ffb7222a050]	Label L0240:			# LABEL
 [0x7ffb7222a260]	Label L0256:			# LABEL
========================================
 [0x7ffb7222a300]	Fence Relative [ 00007FFB720A0250 ]	# FENCE BBStart <block_10> (frequency 0) (catches ...) (cold)
 [0x7ffb7222a470]	Fence Relative [ 00007FFB720A0254 ]	# FENCE BBEnd </block_10>
........................................
 [0x7ffb7222a590]	Fence Relative [ 00007FFB72147000 ]	# FENCE BBStart <block_15> (frequency 0) (extension of previous block) (cold)
 [0x7ffb7222a850]	mov	rax, qword ptr [vfp]		# L8RegMem, SymRef  this<'this' parm Ljava/lang/reflect/Method;>[#457  Parm] [flags 0xc0000107 0x0 ]
 [0x7ffb7222ac50]	mov	rsi, qword ptr [vfp+0x8]		# L8RegMem, SymRef  obj<parm 1 Ljava/lang/Object;>[#458  Parm] [flags 0xc0000107 0x0 ]
 [0x7ffb7222b050]	mov	rdx, qword ptr [vfp+0x10]		# L8RegMem, SymRef  args<parm 2 [Ljava/lang/Object;>[#459  Parm] [flags 0xc0000107 0x0 ]
 [0x7ffb7222b370]	Fence Relative [ 00007FFB72147004 ]	# FENCE BBEnd </block_15>
 [0x7ffb7222b5b0]	assocRegs                       # ASSOCREGS
 [0x7ffb7222b9d0]	assocRegs                       # ASSOCREGS
 [0x7ffb7222b780]	Label L0272:			# LABEL
 [0x7ffb7222c380]	assocRegs                       # ASSOCREGS
 [0x7ffb7222c130]	Label L0288:			# LABEL
========================================
 [0x7ffb7222c400]	Fence Relative [ 00007FFB720A0120 ]	# FENCE BBStart <block_11> (frequency 0) (cold)
 [0x7ffb7222cb50]	mov	r8, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 0>[#460  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222cd80]	mov	ecx, dword ptr [rbp+0x15c]		# L4RegMem, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb7222cf20]	lea	r10d, dword ptr [rcx+0x58]		# LEA4RegMem, SymRef [#463 +88]
 [0x7ffb7222cfb0]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222d150]	mov	rdi, qword ptr [rbp+0x968]		# L8RegMem, SymRef  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]
 [0x7ffb7222d1e0]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222da90]	mov	r8, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 1>[#465  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222dcc0]	lea	r10d, dword ptr [rcx+0x50]		# LEA4RegMem, SymRef [#467 +80]
 [0x7ffb7222dd50]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222dde0]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222e4d0]	mov	r8, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 2>[#468  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222e700]	lea	r10d, dword ptr [rcx+0x48]		# LEA4RegMem, SymRef [#470 +72]
 [0x7ffb7222e790]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222e820]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222ef10]	mov	r8, qword ptr [vfp]		# L8RegMem, SymRef  <pending push temp 3>[#471  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222f140]	lea	r10d, dword ptr [rcx+0x40]		# LEA4RegMem, SymRef [#473 +64]
 [0x7ffb7222f1d0]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222f260]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222f930]	lea	r8d, dword ptr [rcx+0x78]		# LEA4RegMem, SymRef [#475 +120]
 [0x7ffb7222f9c0]	movsxd	r8, r8d		# MOVSXReg8Reg4
 [0x7ffb7222fa50]	mov	qword ptr [r8+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230000]	lea	eax, dword ptr [rcx+0x70]		# LEA4RegMem, SymRef [#477 +112]
 [0x7ffb72230090]	movsxd	rax, eax		# MOVSXReg8Reg4
 [0x7ffb72230120]	mov	qword ptr [rax+1*rdi], rsi		# S8MemReg, SymRef  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230670]	lea	eax, dword ptr [rcx+0x68]		# LEA4RegMem, SymRef [#479 +104]
 [0x7ffb72230700]	movsxd	rax, eax		# MOVSXReg8Reg4
 [0x7ffb72230790]	mov	qword ptr [rax+1*rdi], rdx		# S8MemReg, SymRef  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230d00]	mov	rax, qword ptr [vfp]		# L8RegMem, SymRef  caller<auto slot 3>[#480  Auto] [flags 0x7 0x0 ]
 [0x7ffb72230f30]	lea	edx, dword ptr [rcx+0x60]		# LEA4RegMem, SymRef [#482 +96]
 [0x7ffb72230fc0]	movsxd	rdx, edx		# MOVSXReg8Reg4
 [0x7ffb72231050]	mov	qword ptr [rdx+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72231520]	sub	ecx, 0xffffffffffffff80	# SUB4RegImms
 [0x7ffb72231640]	mov	dword ptr [rbp+0x15c], ecx		# S4MemReg, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb722319c0]	mov	rax, qword ptr [rbp+0x970]		# L8RegMem, SymRef  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]
 [0x7ffb72231a50]	jmp	eax			# JMPReg
 [0x7ffb72231c50]	Fence Relative [ 00007FFB720A0124 ]	# FENCE BBEnd </block_11>
 [0x7ffb72231e90]	assocRegs                       # ASSOCREGS
 [0x7ffb72231f70]	Label L0304:			# LABEL
 [0x7ffb72238570]	vfpRestore [0x7ffb72237620]			# AdjustFramePtr
 [0x7ffb72221490]	Outlined Label L0179:			# LABEL
 [0x7ffb72221680]	lea	rax, qword ptr [Snippet Label L0176]		# LEA8RegMem
 [0x7ffb72221710]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb722217b0]	jmp	Label L0178			# JMP4
 [0x7ffb722218b0]	Label L0180:			# LABEL
 [0x7ffb7223a4e0]	vfpRestore [0x7ffb72239450]			# AdjustFramePtr
 [0x7ffb7218b5c0]	Outlined Label L0141:			# LABEL
 [0x7ffb7218b770]	lea	rax, qword ptr [Snippet Label L0138]		# LEA8RegMem
 [0x7ffb7218b800]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7218b8a0]	jmp	Label L0140			# JMP4
 [0x7ffb7218b9a0]	Label L0142:			# LABEL
 [0x7ffb7223b830]	vfpRestore [0x7ffb7223a7a0]			# AdjustFramePtr
 [0x7ffb72188e30]	Outlined Label L0135:			# LABEL
 [0x7ffb72188fe0]	lea	rax, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72189070]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72189110]	jmp	Label L0134			# JMP4
 [0x7ffb72189210]	Label L0136:			# LABEL
 [0x7ffb7223db10]	vfpRestore [0x7ffb7223bb00]			# AdjustFramePtr
 [0x7ffb72187d80]	Outlined Label L0131:			# LABEL
 [0x7ffb72187f60]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72188000]	mov	rsi, 0x0000000f	# MOV8RegImm4
 [0x7ffb72188090]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72188130]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72188250]	mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
 [0x7ffb721882e0]	jmp	Label L0130			# JMP4
 [0x7ffb721883e0]	Label L0132:			# LABEL
 [0x7ffb7223f720]	vfpRestore [0x7ffb7223e710]			# AdjustFramePtr
 [0x7ffb7217d400]	Outlined Label L0071:			# LABEL
 [0x7ffb7217d5b0]	lea	rax, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217d640]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7217d6e0]	jmp	Label L0070			# JMP4
 [0x7ffb7217d7e0]	Label L0072:			# LABEL
 [0x7ffb72240980]	vfpRestore [0x7ffb7223f9f0]			# AdjustFramePtr
 [0x7ffb7217c390]	Outlined Label L0067:			# LABEL
 [0x7ffb7217c530]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb7217c5d0]	mov	rsi, 0x0000001e	# MOV8RegImm4
 [0x7ffb7217c660]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb7217c700]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb7217c820]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
 [0x7ffb7217c8b0]	jmp	Label L0066			# JMP4
 [0x7ffb7217c9b0]	Label L0068:			# LABEL
 [0x7ffb72241ed0]	vfpRestore [0x7ffb72240ec0]			# AdjustFramePtr
 [0x7ffb72178ad0]	Outlined Label L0040:			# LABEL
 [0x7ffb72178c80]	lea	rax, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72178da0]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72178e40]	jmp	Label L0039			# JMP4
 [0x7ffb72178f40]	Label L0041:			# LABEL
 [0x7ffb72243130]	vfpRestore [0x7ffb722421a0]			# AdjustFramePtr
 [0x7ffb721778b0]	Outlined Label L0036:			# LABEL
 [0x7ffb72177b70]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72177c10]	mov	rsi, 0x00000045	# MOV8RegImm4
 [0x7ffb72177d30]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72177dd0]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72177ef0]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
 [0x7ffb72177f80]	jmp	Label L0035			# JMP4
 [0x7ffb72178080]	Label L0037:			# LABEL
------------ start out-of-line instructions

 [0x7ffb72221490]	Outlined Label L0179:			# LABEL
 [0x7ffb72221680]	lea	rax, qword ptr [Snippet Label L0176]		# LEA8RegMem
 [0x7ffb72221710]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb722217b0]	jmp	Label L0178			# JMP4
 [0x7ffb722218b0]	Label L0180:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7218b5c0]	Outlined Label L0141:			# LABEL
 [0x7ffb7218b770]	lea	rax, qword ptr [Snippet Label L0138]		# LEA8RegMem
 [0x7ffb7218b800]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7218b8a0]	jmp	Label L0140			# JMP4
 [0x7ffb7218b9a0]	Label L0142:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72188e30]	Outlined Label L0135:			# LABEL
 [0x7ffb72188fe0]	lea	rax, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72189070]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72189110]	jmp	Label L0134			# JMP4
 [0x7ffb72189210]	Label L0136:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72187d80]	Outlined Label L0131:			# LABEL
 [0x7ffb72187f60]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72188000]	mov	rsi, 0x0000000f	# MOV8RegImm4
 [0x7ffb72188090]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72188130]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72188250]	mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
 [0x7ffb721882e0]	jmp	Label L0130			# JMP4
 [0x7ffb721883e0]	Label L0132:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7217d400]	Outlined Label L0071:			# LABEL
 [0x7ffb7217d5b0]	lea	rax, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217d640]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7217d6e0]	jmp	Label L0070			# JMP4
 [0x7ffb7217d7e0]	Label L0072:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7217c390]	Outlined Label L0067:			# LABEL
 [0x7ffb7217c530]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb7217c5d0]	mov	rsi, 0x0000001e	# MOV8RegImm4
 [0x7ffb7217c660]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb7217c700]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb7217c820]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
 [0x7ffb7217c8b0]	jmp	Label L0066			# JMP4
 [0x7ffb7217c9b0]	Label L0068:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72178ad0]	Outlined Label L0040:			# LABEL
 [0x7ffb72178c80]	lea	rax, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72178da0]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72178e40]	jmp	Label L0039			# JMP4
 [0x7ffb72178f40]	Label L0041:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb721778b0]	Outlined Label L0036:			# LABEL
 [0x7ffb72177b70]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72177c10]	mov	rsi, 0x00000045	# MOV8RegImm4
 [0x7ffb72177d30]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72177dd0]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72177ef0]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
 [0x7ffb72177f80]	jmp	Label L0035			# JMP4
 [0x7ffb72178080]	Label L0037:			# LABEL
------------ end out-of-line instructions

</instructions>

<instructions
	title="Post Stack Map"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

 [0x7ffb72174df0]	Label L0022:			# LABEL
 [0x7ffb72174f60]	mov	rdi, 0x0000000000078438	# MOV8RegImm64
 [0x7ffb721752b0]	mov	qword ptr [rsp+0x18], rax		# S8MemReg, SymRef [#402 +24]
 [0x7ffb721754f0]	mov	qword ptr [rsp+0x10], rsi		# S8MemReg, SymRef [#403 +16]
 [0x7ffb72175730]	mov	qword ptr [rsp+0x8], rdx		# S8MemReg, SymRef [#404 +8]
 [0x7ffb72175a10]	assocRegs                       # ASSOCREGS
 [0x7ffb721757c0]	jmp	j2iTransition           # JMP4 (00007FFBC390DA70)# JMP4
 [0x7ffb72175a90]	nop			# Alignment (boundary=8, margin=8)
 [0x7ffb72175b20]	jmp	Label L0022			# JMP4
 [0x7ffb72175bc0]	.short	0xcccc		# DWImm2
 [0x7ffb72175c50]	.int	0x00000005		# DDImm4
 [0x7ffb72175f50]	assocRegs                       # ASSOCREGS
 [0x7ffb72175d20]	ProcEntry                       # PROCENTRY
 [0x7ffb72176780]	assocRegs                       # ASSOCREGS
 [0x7ffb72176530]	Label L0032:			# LABEL
 [0x7ffb722433a0]	mov	rcx, rsi		# MOV8RegReg
 [0x7ffb72243310]	mov	rdi, rax		# MOV8RegReg
========================================
 [0x7ffb72176800]	Fence Relative [ 00007FFB72050690 ]	# FENCE BBStart <block_2> (frequency 10000)
 [0x7ffb721774c0]	Label L0034:			# LABEL	# (Start of internal control flow)
 [0x7ffb721775f0]	lea	r8, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72177710]	cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#406 +16]
 [0x7ffb722421a0]	vfpSave			# AdjustFramePtr
 [0x7ffb721777a0]	je	Outlined Label L0036			# JE4
 [0x7ffb72178370]	assocRegs                       # ASSOCREGS
 [0x7ffb72178120]	Label L0035:			# LABEL	# (End of internal control flow)
 [0x7ffb722420f0]	mov	rsi, rdi		# MOV8RegReg
 [0x7ffb72178510]	Label L0038:			# LABEL	# (Start of internal control flow)
 [0x7ffb721786c0]	mov	edi, dword ptr [rsi]		# L4RegMem
 [0x7ffb72178750]	and	edi, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72178870]	test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#410 +36]
 [0x7ffb72240ec0]	vfpSave			# AdjustFramePtr
 [0x7ffb72178900]	jne	Outlined Label L0040			# JNE4
 [0x7ffb72179230]	assocRegs                       # ASSOCREGS
 [0x7ffb72178fe0]	Label L0039:			# LABEL	# (End of internal control flow)
 [0x7ffb72240e10]	xchg	rcx, rsi		# XCHG8RegReg
 [0x7ffb72240d80]	mov	rax, rcx		# MOV8RegReg
 [0x7ffb721796a0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72179610]	mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.override Z[#412  unresolved volatile Shadow] [flags 0x2601 0x0 ]
 [0x7ffb72179740]	nop			# Padding (2 bytes)
 [0x7ffb72179e50]	test	ecx, ecx		# TEST4RegReg
 [0x7ffb7217a220]	assocRegs                       # ASSOCREGS
 [0x7ffb72179fd0]	je	Label L0016			# JE4
 [0x7ffb7217a410]	Fence Relative [ 00007FFB72050694 ]	# FENCE BBEnd </block_2>
........................................
 [0x7ffb7217a530]	Fence Relative [ 00007FFB72146D50 ]	# FENCE BBStart <block_14> (frequency 9238) (extension of previous block)
 [0x7ffb7217a680]	Fence Relative [ 00007FFB72146D54 ]	# FENCE BBEnd </block_14>
 [0x7ffb7217a8c0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ace0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217aa90]	Label L0048:			# LABEL
 [0x7ffb7217b570]	assocRegs                       # ASSOCREGS
 [0x7ffb7217b320]	Label L0019:			# LABEL
 [0x7ffb72240bf0]	mov	rcx, rsi		# MOV8RegReg
 [0x7ffb72240b60]	mov	rdi, rax		# MOV8RegReg
========================================
 [0x7ffb7217b5f0]	Fence Relative [ 00007FFB720501D0 ]	# FENCE BBStart <block_7> (frequency 9726)
 [0x7ffb7217bfa0]	Label L0065:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217c0d0]	lea	r8, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217c1f0]	cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#415 +16]
 [0x7ffb7223f9f0]	vfpSave			# AdjustFramePtr
 [0x7ffb7217c280]	je	Outlined Label L0067			# JE4
 [0x7ffb7217cca0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ca50]	Label L0066:			# LABEL	# (End of internal control flow)
 [0x7ffb7223f940]	mov	rsi, rdi		# MOV8RegReg
 [0x7ffb7217ce40]	Label L0069:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217cff0]	mov	edi, dword ptr [rsi]		# L4RegMem
 [0x7ffb7217d080]	and	edi, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7217d1a0]	test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#418 +36]
 [0x7ffb7223e710]	vfpSave			# AdjustFramePtr
 [0x7ffb7217d230]	jne	Outlined Label L0071			# JNE4
 [0x7ffb7217dad0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217d880]	Label L0070:			# LABEL	# (End of internal control flow)
 [0x7ffb7223e660]	xchg	rcx, rsi		# XCHG8RegReg
 [0x7ffb7223e5d0]	mov	rax, rcx		# MOV8RegReg
 [0x7ffb7217de40]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7217ddb0]	mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#420  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb7217dee0]	nop			# Padding (2 bytes)
 [0x7ffb7217dff0]	lea	rbx, qword ptr [8*rcx]		# LEA8RegMem
 [0x7ffb7217e9c0]	mov	qword ptr [vfp-0x18], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#421  Auto] [flags 0x7 0x0 ]
 [0x7ffb7217ecd0]	test	rbx, rbx		# TEST8RegReg
 [0x7ffb7217f0a0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ee50]	je	Label L0017			# JE4
 [0x7ffb7217f2f0]	Fence Relative [ 00007FFB720501D4 ]	# FENCE BBEnd </block_7>
 [0x7ffb7217f530]	assocRegs                       # ASSOCREGS
 [0x7ffb7217f950]	assocRegs                       # ASSOCREGS
 [0x7ffb7217f700]	Label L0074:			# LABEL
 [0x7ffb72180260]	assocRegs                       # ASSOCREGS
 [0x7ffb72180010]	Label L0020:			# LABEL
========================================
 [0x7ffb721802e0]	Fence Relative [ 00007FFB72050560 ]	# FENCE BBStart <block_9> (frequency 9726)
 [0x7ffb72181480]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72181620]	mov	r9d, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb721816b0]	and	r9, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb72183470]	Label L0080:			# LABEL	# (Start of internal control flow)
 [0x7ffb72181a70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721819d0]	mov	rbx, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72181b10]	cmp	rbx, r9		# CMP8RegReg
 [0x7ffb72181ba0]	jne	Label L0083			# JNE1
 [0x7ffb72181c40]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb72181ce0]	jmp	Label L0081			# JMP4
 [0x7ffb72181d80]	Label L0083:			# LABEL
 [0x7ffb72182060]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72181fc0]	mov	rbx, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72182100]	cmp	rbx, r9		# CMP8RegReg
 [0x7ffb72182190]	jne	Label L0096			# JNE1
 [0x7ffb72182230]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb721822d0]	jmp	Label L0081			# JMP4
 [0x7ffb721824b0]	Label L0097:			# LABEL
 [0x7ffb72182550]	mov	r8d, 0x00000178	# MOV4RegImm4
 [0x7ffb72182670]	sub	r8, qword ptr [rdi+0x18]		# SUB8RegMem, SymRef [#423 +24]
 [0x7ffb72182790]	jmp	dword ptr [r9+1*r8]		# JMPMem
 [0x7ffb72182820]	Label L0096:			# LABEL
 [0x7ffb72182950]	mov	rdi, qword ptr [r9+0x60]		# L8RegMem, SymRef [#425 +96]
 [0x7ffb72182a70]	cmp	dword ptr [rdi], 0x000a5700	# CMP4MemImm4
 [0x7ffb72182b00]	jne	Snippet Label L0084		# JNE4	# (IPic Data)
 [0x7ffb72182df0]	assocRegs                       # ASSOCREGS
 [0x7ffb72182ba0]	call	Label L0097			# CALLImm4
 [0x7ffb72183760]	assocRegs                       # ASSOCREGS
 [0x7ffb72183510]	Label L0081:			# LABEL	# (End of internal control flow)
 [0x7ffb72184440]	assocRegs                       # ASSOCREGS
 [0x7ffb72184210]	ret                             # RET
 [0x7ffb72184580]	Fence Relative [ 00007FFB72050564 ]	# FENCE BBEnd </block_9>
 [0x7ffb721847c0]	assocRegs                       # ASSOCREGS
 [0x7ffb721848a0]	Label L0098:			# LABEL
 [0x7ffb721850f0]	assocRegs                       # ASSOCREGS
 [0x7ffb72184ea0]	Label L0016:			# LABEL
 [0x7ffb7223e0f0]	mov	qword ptr [vfp-0x10], rdx		# S8MemReg, #SPILL8, SymRef  <#SPILL8_493 0x7ffb72237290>[#493  Auto] [flags 0x80000000 0x0 ]
 [0x7ffb7223df90]	mov	qword ptr [vfp-0x8], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_492 0x7ffb72238ed0>[#492  Auto] [flags 0x80000000 0x0 ]
 [0x7ffb7223de30]	mov	r9, rax		# MOV8RegReg
========================================
 [0x7ffb72185170]	Fence Relative [ 00007FFB720509E0 ]	# FENCE BBStart <block_3> (frequency 785)
 [0x7ffb72186570]	Label L0112:			# LABEL	# (Start of internal control flow)
 [0x7ffb72185ed0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72185e30]	call	Snippet Label L0114     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72186860]	assocRegs                       # ASSOCREGS
 [0x7ffb72186610]	Label L0113:			# LABEL	# (End of internal control flow)
 [0x7ffb7223dd40]	mov	rbx, rax		# MOV8RegReg
 [0x7ffb72186d80]	mov	qword ptr [vfp-0x18], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#428  Auto] [flags 0x7 0x0 ]
 [0x7ffb72187990]	Label L0129:			# LABEL	# (Start of internal control flow)
 [0x7ffb72187ac0]	lea	rcx, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72187be0]	cmp	qword ptr [rcx+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#431 +16]
 [0x7ffb7223bb00]	vfpSave			# AdjustFramePtr
 [0x7ffb72187c70]	je	Outlined Label L0131			# JE4
 [0x7ffb721886d0]	assocRegs                       # ASSOCREGS
 [0x7ffb72188480]	Label L0130:			# LABEL	# (End of internal control flow)
 [0x7ffb7223ba50]	mov	rsi, r9		# MOV8RegReg
 [0x7ffb72188870]	Label L0133:			# LABEL	# (Start of internal control flow)
 [0x7ffb72188a20]	mov	ecx, dword ptr [rsi]		# L4RegMem
 [0x7ffb72188ab0]	and	ecx, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72188bd0]	test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#434 +36]
 [0x7ffb7223a7a0]	vfpSave			# AdjustFramePtr
 [0x7ffb72188c60]	jne	Outlined Label L0135			# JNE4
 [0x7ffb72189500]	assocRegs                       # ASSOCREGS
 [0x7ffb721892b0]	Label L0134:			# LABEL	# (End of internal control flow)
 [0x7ffb72189870]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721897e0]	mov	eax, dword ptr [rsi-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.clazz Ljava/lang/Class;[#436  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb72189910]	nop			# Padding (2 bytes)
 [0x7ffb72189a20]	lea	rax, qword ptr [8*rax]		# LEA8RegMem
 [0x7ffb7218a310]	mov	qword ptr [vfp-0x20], rsi		# S8MemReg, SymRef  <pending push temp 0>[#437  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218a6a0]	mov	qword ptr [vfp-0x28], rbx		# S8MemReg, SymRef  <pending push temp 1>[#438  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218aac0]	mov	qword ptr [vfp-0x30], rax		# S8MemReg, SymRef  <pending push temp 2>[#439  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218b000]	Label L0139:			# LABEL	# (Start of internal control flow)
 [0x7ffb7218b1b0]	mov	ecx, dword ptr [rsi]		# L4RegMem
 [0x7ffb7218b240]	and	ecx, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7218b360]	test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#441 +36]
 [0x7ffb72239450]	vfpSave			# AdjustFramePtr
 [0x7ffb7218b3f0]	jne	Outlined Label L0141			# JNE4
 [0x7ffb7218bc90]	assocRegs                       # ASSOCREGS
 [0x7ffb7218ba40]	Label L0140:			# LABEL	# (End of internal control flow)
 [0x7ffb722393a0]	mov	r9, rsi		# MOV8RegReg
 [0x7ffb7218be20]	mov	eax, dword ptr [r9+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#443  Shadow +80] [flags 0x80603 0x0 ]
 [0x7ffb7218d280]	Label L0143:			# LABEL	# (Start of internal control flow)
 [0x7ffb7218cbe0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7218cb40]	call	Snippet Label L0145     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb7218d570]	assocRegs                       # ASSOCREGS
 [0x7ffb7218d320]	Label L0144:			# LABEL	# (End of internal control flow)
 [0x7ffb72239290]	xchg	r9, rax		# XCHG8RegReg
 [0x7ffb722391a0]	mov	r8, qword ptr [vfp-0x30]		# L8RegMem ; $REMAT, SymRef  <pending push temp 2>[#491  Auto] [flags 0x7 0x800 ]
 [0x7ffb72239040]	mov	rsi, qword ptr [vfp-0x8]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_490 0x7ffb72238ed0>[#490  Auto] [flags 0x80000000 0x0 ]#, spilled for icall
 [0x7ffb72238e00]	mov	rdx, qword ptr [vfp-0x10]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_488 0x7ffb72237290>[#488  Auto] [flags 0x80000000 0x0 ]#, spilled for icall
 [0x7ffb72238ce0]	mov	rcx, r9		# MOV8RegReg
 [0x7ffb7218db00]	test	ecx, ecx		# TEST4RegReg
 [0x7ffb7218dfc0]	assocRegs                       # ASSOCREGS
 [0x7ffb7218dd00]	jne	Label L0018			# JNE4
 [0x7ffb7218e210]	Fence Relative [ 00007FFB720509E4 ]	# FENCE BBEnd </block_3>
........................................
 [0x7ffb7218e330]	Fence Relative [ 00007FFB72050300 ]	# FENCE BBStart <block_5> (frequency 766) (extension of previous block)
 [0x7ffb7218e5f0]	mov	ecx, dword ptr [rsi]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb7218e680]	and	rcx, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb7218ea20]	mov	rdi, qword ptr [rcx+0x30]		# L8RegMem, SymRef  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]
 [0x7ffb7218ed00]	mov	qword ptr [vfp-0x38], rdi		# S8MemReg, SymRef  <pending push temp 3>[#447  Auto] [flags 0x7 0x800 ]
 [0x7ffb7218f010]	Fence Relative [ 00007FFB72050304 ]	# FENCE BBEnd </block_5>
 [0x7ffb7218f250]	assocRegs                       # ASSOCREGS
 [0x7ffb7218f740]	assocRegs                       # ASSOCREGS
 [0x7ffb7218f4f0]	Label L0160:			# LABEL
 [0x7ffb72220510]	assocRegs                       # ASSOCREGS
 [0x7ffb722202c0]	Label L0021:			# LABEL
 [0x7ffb72238ab0]	mov	r9, rdx		# MOV8RegReg
 [0x7ffb72238a20]	mov	rcx, rdi		# MOV8RegReg
 [0x7ffb72238990]	mov	rdx, r8		# MOV8RegReg
 [0x7ffb72238900]	mov	qword ptr [vfp-0x10], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_487 0x7ffb72237290>[#487  Auto] [flags 0x80000000 0x0 ]
 [0x7ffb722387a0]	mov	rsi, rax		# MOV8RegReg
========================================
 [0x7ffb72220590]	Fence Relative [ 00007FFB72050430 ]	# FENCE BBStart <block_6> (frequency 785)
 [0x7ffb72220ed0]	Label L0177:			# LABEL	# (Start of internal control flow)
 [0x7ffb72221080]	mov	r10d, dword ptr [rsi]		# L4RegMem
 [0x7ffb72221110]	and	r10d, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72221230]	test	word ptr [r10+0x24], 0x0100	# TEST2MemImm2, SymRef [#449 +36]
 [0x7ffb72237620]	vfpSave			# AdjustFramePtr
 [0x7ffb722212c0]	jne	Outlined Label L0179			# JNE4
 [0x7ffb72221ba0]	assocRegs                       # ASSOCREGS
 [0x7ffb72221950]	Label L0178:			# LABEL	# (End of internal control flow)
 [0x7ffb72237570]	xchg	rbx, rsi		# XCHG8RegReg
 [0x7ffb72221d30]	mov	r10d, dword ptr [rbx+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#451  Shadow +80] [flags 0x80603 0x0 ]
 [0x7ffb72222920]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72222a40]	mov	qword ptr [rsp], r10		# S8MemReg
 [0x7ffb722233c0]	Label L0181:			# LABEL	# (Start of internal control flow)
 [0x7ffb72222d20]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72222c80]	call	Snippet Label L0183     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb722236b0]	assocRegs                       # ASSOCREGS
 [0x7ffb72223460]	Label L0182:			# LABEL	# (End of internal control flow)
 [0x7ffb72237400]	mov	rsi, qword ptr [vfp-0x10]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_486 0x7ffb72237290>[#486  Auto] [flags 0x80000000 0x0 ]#, spilled for call
 [0x7ffb72237200]	mov	rdx, r9		# MOV8RegReg
 [0x7ffb72237170]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72223b40]	Fence Relative [ 00007FFB72050434 ]	# FENCE BBEnd </block_6>
........................................
 [0x7ffb72223c60]	Fence Relative [ 00007FFB7215B1B0 ]	# FENCE BBStart <block_12> (frequency 785) (extension of previous block)
 [0x7ffb722240f0]	assocRegs                       # ASSOCREGS
 [0x7ffb72223ea0]	jmp	Label L0019			# JMP4
 [0x7ffb72224260]	Fence Relative [ 00007FFB7215B1B4 ]	# FENCE BBEnd </block_12>
 [0x7ffb722244a0]	assocRegs                       # ASSOCREGS
 [0x7ffb72224580]	Label L0192:			# LABEL
 [0x7ffb72224dd0]	assocRegs                       # ASSOCREGS
 [0x7ffb72224b80]	Label L0017:			# LABEL
 [0x7ffb72237010]	mov	r9, rdx		# MOV8RegReg
 [0x7ffb72236f80]	mov	rbx, rsi		# MOV8RegReg
========================================
 [0x7ffb72224e50]	Fence Relative [ 00007FFB72071210 ]	# FENCE BBStart <block_8> (frequency 180)
 [0x7ffb72226a50]	Label L0208:			# LABEL	# (Start of internal control flow)
 [0x7ffb72225bb0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72225b10]	call	Snippet Label L0210     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72226d40]	assocRegs                       # ASSOCREGS
 [0x7ffb72226af0]	Label L0209:			# LABEL	# (End of internal control flow)
 [0x7ffb72236e70]	mov	rsi, rbx		# MOV8RegReg
 [0x7ffb72236de0]	mov	rdx, r9		# MOV8RegReg
 [0x7ffb72236d50]	mov	rbx, rax		# MOV8RegReg
 [0x7ffb722272c0]	mov	qword ptr [vfp-0x18], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#455  Auto] [flags 0x7 0x0 ]
 [0x7ffb72227510]	Fence Relative [ 00007FFB72071214 ]	# FENCE BBEnd </block_8>
........................................
 [0x7ffb72227630]	Fence Relative [ 00007FFB7215B3A0 ]	# FENCE BBStart <block_13> (frequency 180) (extension of previous block)
 [0x7ffb72227b60]	assocRegs                       # ASSOCREGS
 [0x7ffb722278a0]	jmp	Label L0020			# JMP4
 [0x7ffb72227d00]	Fence Relative [ 00007FFB7215B3A4 ]	# FENCE BBEnd </block_13>
 [0x7ffb72227f40]	assocRegs                       # ASSOCREGS
 [0x7ffb72228020]	Label L0224:			# LABEL
 [0x7ffb72228b50]	assocRegs                       # ASSOCREGS
 [0x7ffb72228900]	Label L0018:			# LABEL
========================================
 [0x7ffb72228bd0]	Fence Relative [ 00007FFB72070EB0 ]	# FENCE BBStart <block_4> (frequency 24)
 [0x7ffb72229270]	mov	qword ptr [vfp-0x38], 0x00000000	# S8MemImm4, SymRef  <pending push temp 3>[#456  Auto] [flags 0x7 0x800 ]
 [0x7ffb72229540]	xor	edi, edi		# XOR4RegReg
 [0x7ffb72229b90]	assocRegs                       # ASSOCREGS
 [0x7ffb722298d0]	jmp	Label L0021			# JMP4
 [0x7ffb72229d30]	Fence Relative [ 00007FFB72070EB4 ]	# FENCE BBEnd </block_4>
 [0x7ffb72229f70]	assocRegs                       # ASSOCREGS
 [0x7ffb7222a050]	Label L0240:			# LABEL
 [0x7ffb7222a260]	Label L0256:			# LABEL
========================================
 [0x7ffb7222a300]	Fence Relative [ 00007FFB720A0250 ]	# FENCE BBStart <block_10> (frequency 0) (catches ...) (cold)
 [0x7ffb7222a470]	Fence Relative [ 00007FFB720A0254 ]	# FENCE BBEnd </block_10>
........................................
 [0x7ffb7222a590]	Fence Relative [ 00007FFB72147000 ]	# FENCE BBStart <block_15> (frequency 0) (extension of previous block) (cold)
 [0x7ffb7222a850]	mov	rax, qword ptr [vfp+0x18]		# L8RegMem, SymRef  this<'this' parm Ljava/lang/reflect/Method;>[#457  Parm] [flags 0xc0000107 0x0 ]
 [0x7ffb7222ac50]	mov	rsi, qword ptr [vfp+0x10]		# L8RegMem, SymRef  obj<parm 1 Ljava/lang/Object;>[#458  Parm] [flags 0xc0000107 0x0 ]
 [0x7ffb7222b050]	mov	rdx, qword ptr [vfp+0x8]		# L8RegMem, SymRef  args<parm 2 [Ljava/lang/Object;>[#459  Parm] [flags 0xc0000107 0x0 ]
 [0x7ffb7222b370]	Fence Relative [ 00007FFB72147004 ]	# FENCE BBEnd </block_15>
 [0x7ffb7222b5b0]	assocRegs                       # ASSOCREGS
 [0x7ffb7222b9d0]	assocRegs                       # ASSOCREGS
 [0x7ffb7222b780]	Label L0272:			# LABEL
 [0x7ffb7222c380]	assocRegs                       # ASSOCREGS
 [0x7ffb7222c130]	Label L0288:			# LABEL
========================================
 [0x7ffb7222c400]	Fence Relative [ 00007FFB720A0120 ]	# FENCE BBStart <block_11> (frequency 0) (cold)
 [0x7ffb7222cb50]	mov	r8, qword ptr [vfp-0x20]		# L8RegMem, SymRef  <pending push temp 0>[#460  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222cd80]	mov	ecx, dword ptr [rbp+0x15c]		# L4RegMem, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb7222cf20]	lea	r10d, dword ptr [rcx+0x58]		# LEA4RegMem, SymRef [#463 +88]
 [0x7ffb7222cfb0]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222d150]	mov	rdi, qword ptr [rbp+0x968]		# L8RegMem, SymRef  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]
 [0x7ffb7222d1e0]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222da90]	mov	r8, qword ptr [vfp-0x28]		# L8RegMem, SymRef  <pending push temp 1>[#465  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222dcc0]	lea	r10d, dword ptr [rcx+0x50]		# LEA4RegMem, SymRef [#467 +80]
 [0x7ffb7222dd50]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222dde0]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222e4d0]	mov	r8, qword ptr [vfp-0x30]		# L8RegMem, SymRef  <pending push temp 2>[#468  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222e700]	lea	r10d, dword ptr [rcx+0x48]		# LEA4RegMem, SymRef [#470 +72]
 [0x7ffb7222e790]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222e820]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222ef10]	mov	r8, qword ptr [vfp-0x38]		# L8RegMem, SymRef  <pending push temp 3>[#471  Auto] [flags 0x7 0x800 ]
 [0x7ffb7222f140]	lea	r10d, dword ptr [rcx+0x40]		# LEA4RegMem, SymRef [#473 +64]
 [0x7ffb7222f1d0]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222f260]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222f930]	lea	r8d, dword ptr [rcx+0x78]		# LEA4RegMem, SymRef [#475 +120]
 [0x7ffb7222f9c0]	movsxd	r8, r8d		# MOVSXReg8Reg4
 [0x7ffb7222fa50]	mov	qword ptr [r8+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230000]	lea	eax, dword ptr [rcx+0x70]		# LEA4RegMem, SymRef [#477 +112]
 [0x7ffb72230090]	movsxd	rax, eax		# MOVSXReg8Reg4
 [0x7ffb72230120]	mov	qword ptr [rax+1*rdi], rsi		# S8MemReg, SymRef  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230670]	lea	eax, dword ptr [rcx+0x68]		# LEA4RegMem, SymRef [#479 +104]
 [0x7ffb72230700]	movsxd	rax, eax		# MOVSXReg8Reg4
 [0x7ffb72230790]	mov	qword ptr [rax+1*rdi], rdx		# S8MemReg, SymRef  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230d00]	mov	rax, qword ptr [vfp-0x18]		# L8RegMem, SymRef  caller<auto slot 3>[#480  Auto] [flags 0x7 0x0 ]
 [0x7ffb72230f30]	lea	edx, dword ptr [rcx+0x60]		# LEA4RegMem, SymRef [#482 +96]
 [0x7ffb72230fc0]	movsxd	rdx, edx		# MOVSXReg8Reg4
 [0x7ffb72231050]	mov	qword ptr [rdx+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72231520]	sub	ecx, 0xffffffffffffff80	# SUB4RegImms
 [0x7ffb72231640]	mov	dword ptr [rbp+0x15c], ecx		# S4MemReg, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb722319c0]	mov	rax, qword ptr [rbp+0x970]		# L8RegMem, SymRef  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]
 [0x7ffb72231a50]	jmp	eax			# JMPReg
 [0x7ffb72231c50]	Fence Relative [ 00007FFB720A0124 ]	# FENCE BBEnd </block_11>
 [0x7ffb72231e90]	assocRegs                       # ASSOCREGS
 [0x7ffb72231f70]	Label L0304:			# LABEL
 [0x7ffb72238570]	vfpRestore [0x7ffb72237620]			# AdjustFramePtr
 [0x7ffb72221490]	Outlined Label L0179:			# LABEL
 [0x7ffb72221680]	lea	rax, qword ptr [Snippet Label L0176]		# LEA8RegMem
 [0x7ffb72221710]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb722217b0]	jmp	Label L0178			# JMP4
 [0x7ffb722218b0]	Label L0180:			# LABEL
 [0x7ffb7223a4e0]	vfpRestore [0x7ffb72239450]			# AdjustFramePtr
 [0x7ffb7218b5c0]	Outlined Label L0141:			# LABEL
 [0x7ffb7218b770]	lea	rax, qword ptr [Snippet Label L0138]		# LEA8RegMem
 [0x7ffb7218b800]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7218b8a0]	jmp	Label L0140			# JMP4
 [0x7ffb7218b9a0]	Label L0142:			# LABEL
 [0x7ffb7223b830]	vfpRestore [0x7ffb7223a7a0]			# AdjustFramePtr
 [0x7ffb72188e30]	Outlined Label L0135:			# LABEL
 [0x7ffb72188fe0]	lea	rax, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72189070]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72189110]	jmp	Label L0134			# JMP4
 [0x7ffb72189210]	Label L0136:			# LABEL
 [0x7ffb7223db10]	vfpRestore [0x7ffb7223bb00]			# AdjustFramePtr
 [0x7ffb72187d80]	Outlined Label L0131:			# LABEL
 [0x7ffb72187f60]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72188000]	mov	rsi, 0x0000000f	# MOV8RegImm4
 [0x7ffb72188090]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72188130]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72188250]	mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
 [0x7ffb721882e0]	jmp	Label L0130			# JMP4
 [0x7ffb721883e0]	Label L0132:			# LABEL
 [0x7ffb7223f720]	vfpRestore [0x7ffb7223e710]			# AdjustFramePtr
 [0x7ffb7217d400]	Outlined Label L0071:			# LABEL
 [0x7ffb7217d5b0]	lea	rax, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217d640]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7217d6e0]	jmp	Label L0070			# JMP4
 [0x7ffb7217d7e0]	Label L0072:			# LABEL
 [0x7ffb72240980]	vfpRestore [0x7ffb7223f9f0]			# AdjustFramePtr
 [0x7ffb7217c390]	Outlined Label L0067:			# LABEL
 [0x7ffb7217c530]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb7217c5d0]	mov	rsi, 0x0000001e	# MOV8RegImm4
 [0x7ffb7217c660]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb7217c700]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb7217c820]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
 [0x7ffb7217c8b0]	jmp	Label L0066			# JMP4
 [0x7ffb7217c9b0]	Label L0068:			# LABEL
 [0x7ffb72241ed0]	vfpRestore [0x7ffb72240ec0]			# AdjustFramePtr
 [0x7ffb72178ad0]	Outlined Label L0040:			# LABEL
 [0x7ffb72178c80]	lea	rax, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72178da0]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72178e40]	jmp	Label L0039			# JMP4
 [0x7ffb72178f40]	Label L0041:			# LABEL
 [0x7ffb72243130]	vfpRestore [0x7ffb722421a0]			# AdjustFramePtr
 [0x7ffb721778b0]	Outlined Label L0036:			# LABEL
 [0x7ffb72177b70]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72177c10]	mov	rsi, 0x00000045	# MOV8RegImm4
 [0x7ffb72177d30]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72177dd0]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72177ef0]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
 [0x7ffb72177f80]	jmp	Label L0035			# JMP4
 [0x7ffb72178080]	Label L0037:			# LABEL
------------ start out-of-line instructions

 [0x7ffb72221490]	Outlined Label L0179:			# LABEL
 [0x7ffb72221680]	lea	rax, qword ptr [Snippet Label L0176]		# LEA8RegMem
 [0x7ffb72221710]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb722217b0]	jmp	Label L0178			# JMP4
 [0x7ffb722218b0]	Label L0180:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7218b5c0]	Outlined Label L0141:			# LABEL
 [0x7ffb7218b770]	lea	rax, qword ptr [Snippet Label L0138]		# LEA8RegMem
 [0x7ffb7218b800]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7218b8a0]	jmp	Label L0140			# JMP4
 [0x7ffb7218b9a0]	Label L0142:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72188e30]	Outlined Label L0135:			# LABEL
 [0x7ffb72188fe0]	lea	rax, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72189070]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72189110]	jmp	Label L0134			# JMP4
 [0x7ffb72189210]	Label L0136:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72187d80]	Outlined Label L0131:			# LABEL
 [0x7ffb72187f60]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72188000]	mov	rsi, 0x0000000f	# MOV8RegImm4
 [0x7ffb72188090]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72188130]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72188250]	mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
 [0x7ffb721882e0]	jmp	Label L0130			# JMP4
 [0x7ffb721883e0]	Label L0132:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7217d400]	Outlined Label L0071:			# LABEL
 [0x7ffb7217d5b0]	lea	rax, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217d640]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7217d6e0]	jmp	Label L0070			# JMP4
 [0x7ffb7217d7e0]	Label L0072:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7217c390]	Outlined Label L0067:			# LABEL
 [0x7ffb7217c530]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb7217c5d0]	mov	rsi, 0x0000001e	# MOV8RegImm4
 [0x7ffb7217c660]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb7217c700]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb7217c820]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
 [0x7ffb7217c8b0]	jmp	Label L0066			# JMP4
 [0x7ffb7217c9b0]	Label L0068:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72178ad0]	Outlined Label L0040:			# LABEL
 [0x7ffb72178c80]	lea	rax, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72178da0]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72178e40]	jmp	Label L0039			# JMP4
 [0x7ffb72178f40]	Label L0041:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb721778b0]	Outlined Label L0036:			# LABEL
 [0x7ffb72177b70]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72177c10]	mov	rsi, 0x00000045	# MOV8RegImm4
 [0x7ffb72177d30]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72177dd0]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72177ef0]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
 [0x7ffb72177f80]	jmp	Label L0035			# JMP4
 [0x7ffb72178080]	Label L0037:			# LABEL
------------ end out-of-line instructions

</instructions>

<instructions
	title="Post Instruction Expansion Instructions"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

                 +--------------------------------------- instruction address
                 |        +----------------------------------------- instruction offset from start of method
                 |        |                   +------------------------------------------ corresponding TR::Instruction instance
                 |        |                   |  +-------------------------------------------------- code bytes
                 |        |                   |  |                          +-------------------------------------- opcode and operands
                 |        |                   |  |                          |				+----------- additional information
                 |        |                   |  |                          |				|
                 V        V                   V  V                          V				V
 [0x7ffb72174df0]	Label L0022:			# LABEL
 [0x7ffb72174f60]	mov	rdi, 0x0000000000078438	# MOV8RegImm64
 [0x7ffb721752b0]	mov	qword ptr [rsp+0x18], rax		# S8MemReg, SymRef [#402 +24]
 [0x7ffb721754f0]	mov	qword ptr [rsp+0x10], rsi		# S8MemReg, SymRef [#403 +16]
 [0x7ffb72175730]	mov	qword ptr [rsp+0x8], rdx		# S8MemReg, SymRef [#404 +8]
 [0x7ffb72175a10]	assocRegs                       # ASSOCREGS
 [0x7ffb721757c0]	jmp	j2iTransition           # JMP4 (00007FFBC390DA70)# JMP4
 [0x7ffb72175a90]	nop			# Alignment (boundary=8, margin=8)
 [0x7ffb72175b20]	jmp	Label L0022			# JMP4
 [0x7ffb72175bc0]	.short	0xcccc		# DWImm2
 [0x7ffb72175c50]	.int	0x00000005		# DDImm4
 [0x7ffb72175f50]	assocRegs                       # ASSOCREGS
 [0x7ffb72175d20]	ProcEntry                       # PROCENTRY
 [0x7ffb72176780]	assocRegs                       # ASSOCREGS
 [0x7ffb72176530]	Label L0032:			# LABEL
 [0x7ffb722433a0]	mov	rcx, rsi		# MOV8RegReg
 [0x7ffb72243310]	mov	rdi, rax		# MOV8RegReg
========================================
 [0x7ffb72176800]	Fence Relative [ 00007FFB72050690 ]	# FENCE BBStart <block_2> (frequency 10000)
 [0x7ffb721774c0]	Label L0034:			# LABEL	# (Start of internal control flow)
 [0x7ffb721775f0]	lea	r8, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72177710]	cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#406 +16]
 [0x7ffb722421a0]	vfpSave			# AdjustFramePtr
 [0x7ffb721777a0]	je	Outlined Label L0036			# JE4
 [0x7ffb72178370]	assocRegs                       # ASSOCREGS
 [0x7ffb72178120]	Label L0035:			# LABEL	# (End of internal control flow)
 [0x7ffb722420f0]	mov	rsi, rdi		# MOV8RegReg
 [0x7ffb72178510]	Label L0038:			# LABEL	# (Start of internal control flow)
 [0x7ffb721786c0]	mov	edi, dword ptr [rsi]		# L4RegMem
 [0x7ffb72178750]	and	edi, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72178870]	test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#410 +36]
 [0x7ffb72240ec0]	vfpSave			# AdjustFramePtr
 [0x7ffb72178900]	jne	Outlined Label L0040			# JNE4
 [0x7ffb72179230]	assocRegs                       # ASSOCREGS
 [0x7ffb72178fe0]	Label L0039:			# LABEL	# (End of internal control flow)
 [0x7ffb72240e10]	xchg	rcx, rsi		# XCHG8RegReg
 [0x7ffb72240d80]	mov	rax, rcx		# MOV8RegReg
 [0x7ffb721796a0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72179610]	mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.override Z[#412  unresolved volatile Shadow] [flags 0x2601 0x0 ]
 [0x7ffb72179740]	nop			# Padding (2 bytes)
 [0x7ffb72179e50]	test	ecx, ecx		# TEST4RegReg
 [0x7ffb7217a220]	assocRegs                       # ASSOCREGS
 [0x7ffb72179fd0]	je	Label L0016			# JE4
 [0x7ffb7217a410]	Fence Relative [ 00007FFB72050694 ]	# FENCE BBEnd </block_2>
........................................
 [0x7ffb7217a530]	Fence Relative [ 00007FFB72146D50 ]	# FENCE BBStart <block_14> (frequency 9238) (extension of previous block)
 [0x7ffb7217a680]	Fence Relative [ 00007FFB72146D54 ]	# FENCE BBEnd </block_14>
 [0x7ffb7217a8c0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ace0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217aa90]	Label L0048:			# LABEL
 [0x7ffb7217b570]	assocRegs                       # ASSOCREGS
 [0x7ffb7217b320]	Label L0019:			# LABEL
 [0x7ffb72240bf0]	mov	rcx, rsi		# MOV8RegReg
 [0x7ffb72240b60]	mov	rdi, rax		# MOV8RegReg
========================================
 [0x7ffb7217b5f0]	Fence Relative [ 00007FFB720501D0 ]	# FENCE BBStart <block_7> (frequency 9726)
 [0x7ffb7217bfa0]	Label L0065:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217c0d0]	lea	r8, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217c1f0]	cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#415 +16]
 [0x7ffb7223f9f0]	vfpSave			# AdjustFramePtr
 [0x7ffb7217c280]	je	Outlined Label L0067			# JE4
 [0x7ffb7217cca0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ca50]	Label L0066:			# LABEL	# (End of internal control flow)
 [0x7ffb7223f940]	mov	rsi, rdi		# MOV8RegReg
 [0x7ffb7217ce40]	Label L0069:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217cff0]	mov	edi, dword ptr [rsi]		# L4RegMem
 [0x7ffb7217d080]	and	edi, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7217d1a0]	test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#418 +36]
 [0x7ffb7223e710]	vfpSave			# AdjustFramePtr
 [0x7ffb7217d230]	jne	Outlined Label L0071			# JNE4
 [0x7ffb7217dad0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217d880]	Label L0070:			# LABEL	# (End of internal control flow)
 [0x7ffb7223e660]	xchg	rcx, rsi		# XCHG8RegReg
 [0x7ffb7223e5d0]	mov	rax, rcx		# MOV8RegReg
 [0x7ffb7217de40]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7217ddb0]	mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#420  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb7217dee0]	nop			# Padding (2 bytes)
 [0x7ffb7217dff0]	lea	rbx, qword ptr [8*rcx]		# LEA8RegMem
 [0x7ffb7217e9c0]	mov	qword ptr [vfp-0x18], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#421  Auto -24] [flags 0x7 0x0 ]
 [0x7ffb7217ecd0]	test	rbx, rbx		# TEST8RegReg
 [0x7ffb7217f0a0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ee50]	je	Label L0017			# JE4
 [0x7ffb7217f2f0]	Fence Relative [ 00007FFB720501D4 ]	# FENCE BBEnd </block_7>
 [0x7ffb7217f530]	assocRegs                       # ASSOCREGS
 [0x7ffb7217f950]	assocRegs                       # ASSOCREGS
 [0x7ffb7217f700]	Label L0074:			# LABEL
 [0x7ffb72180260]	assocRegs                       # ASSOCREGS
 [0x7ffb72180010]	Label L0020:			# LABEL
========================================
 [0x7ffb721802e0]	Fence Relative [ 00007FFB72050560 ]	# FENCE BBStart <block_9> (frequency 9726)
 [0x7ffb72181480]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72181620]	mov	r9d, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb721816b0]	and	r9, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb72183470]	Label L0080:			# LABEL	# (Start of internal control flow)
 [0x7ffb72181a70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721819d0]	mov	rbx, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72181b10]	cmp	rbx, r9		# CMP8RegReg
 [0x7ffb72181ba0]	jne	Label L0083			# JNE1
 [0x7ffb72181c40]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb72181ce0]	jmp	Label L0081			# JMP4
 [0x7ffb72181d80]	Label L0083:			# LABEL
 [0x7ffb72182060]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72181fc0]	mov	rbx, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72182100]	cmp	rbx, r9		# CMP8RegReg
 [0x7ffb72182190]	jne	Label L0096			# JNE1
 [0x7ffb72182230]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb721822d0]	jmp	Label L0081			# JMP4
 [0x7ffb721824b0]	Label L0097:			# LABEL
 [0x7ffb72182550]	mov	r8d, 0x00000178	# MOV4RegImm4
 [0x7ffb72182670]	sub	r8, qword ptr [rdi+0x18]		# SUB8RegMem, SymRef [#423 +24]
 [0x7ffb72182790]	jmp	dword ptr [r9+1*r8]		# JMPMem
 [0x7ffb72182820]	Label L0096:			# LABEL
 [0x7ffb72182950]	mov	rdi, qword ptr [r9+0x60]		# L8RegMem, SymRef [#425 +96]
 [0x7ffb72182a70]	cmp	dword ptr [rdi], 0x000a5700	# CMP4MemImm4
 [0x7ffb72182b00]	jne	Snippet Label L0084		# JNE4	# (IPic Data)
 [0x7ffb72182df0]	assocRegs                       # ASSOCREGS
 [0x7ffb72182ba0]	call	Label L0097			# CALLImm4
 [0x7ffb72183760]	assocRegs                       # ASSOCREGS
 [0x7ffb72183510]	Label L0081:			# LABEL	# (End of internal control flow)
 [0x7ffb72184440]	assocRegs                       # ASSOCREGS
 [0x7ffb72184210]	ret                             # RET
 [0x7ffb72184580]	Fence Relative [ 00007FFB72050564 ]	# FENCE BBEnd </block_9>
 [0x7ffb721847c0]	assocRegs                       # ASSOCREGS
 [0x7ffb721848a0]	Label L0098:			# LABEL
 [0x7ffb721850f0]	assocRegs                       # ASSOCREGS
 [0x7ffb72184ea0]	Label L0016:			# LABEL
 [0x7ffb7223e0f0]	mov	qword ptr [vfp-0x10], rdx		# S8MemReg, #SPILL8, SymRef  <#SPILL8_493 0x7ffb72237290>[#493  Auto -16] [flags 0x80000000 0x0 ]
 [0x7ffb7223df90]	mov	qword ptr [vfp-0x8], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_492 0x7ffb72238ed0>[#492  Auto -8] [flags 0x80000000 0x0 ]
 [0x7ffb7223de30]	mov	r9, rax		# MOV8RegReg
========================================
 [0x7ffb72185170]	Fence Relative [ 00007FFB720509E0 ]	# FENCE BBStart <block_3> (frequency 785)
 [0x7ffb72186570]	Label L0112:			# LABEL	# (Start of internal control flow)
 [0x7ffb72185ed0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72185e30]	call	Snippet Label L0114     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72186860]	assocRegs                       # ASSOCREGS
 [0x7ffb72186610]	Label L0113:			# LABEL	# (End of internal control flow)
 [0x7ffb7223dd40]	mov	rbx, rax		# MOV8RegReg
 [0x7ffb72186d80]	mov	qword ptr [vfp-0x18], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#428  Auto -24] [flags 0x7 0x0 ]
 [0x7ffb72187990]	Label L0129:			# LABEL	# (Start of internal control flow)
 [0x7ffb72187ac0]	lea	rcx, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72187be0]	cmp	qword ptr [rcx+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#431 +16]
 [0x7ffb7223bb00]	vfpSave			# AdjustFramePtr
 [0x7ffb72187c70]	je	Outlined Label L0131			# JE4
 [0x7ffb721886d0]	assocRegs                       # ASSOCREGS
 [0x7ffb72188480]	Label L0130:			# LABEL	# (End of internal control flow)
 [0x7ffb7223ba50]	mov	rsi, r9		# MOV8RegReg
 [0x7ffb72188870]	Label L0133:			# LABEL	# (Start of internal control flow)
 [0x7ffb72188a20]	mov	ecx, dword ptr [rsi]		# L4RegMem
 [0x7ffb72188ab0]	and	ecx, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72188bd0]	test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#434 +36]
 [0x7ffb7223a7a0]	vfpSave			# AdjustFramePtr
 [0x7ffb72188c60]	jne	Outlined Label L0135			# JNE4
 [0x7ffb72189500]	assocRegs                       # ASSOCREGS
 [0x7ffb721892b0]	Label L0134:			# LABEL	# (End of internal control flow)
 [0x7ffb72189870]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721897e0]	mov	eax, dword ptr [rsi-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.clazz Ljava/lang/Class;[#436  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb72189910]	nop			# Padding (2 bytes)
 [0x7ffb72189a20]	lea	rax, qword ptr [8*rax]		# LEA8RegMem
 [0x7ffb7218a310]	mov	qword ptr [vfp-0x20], rsi		# S8MemReg, SymRef  <pending push temp 0>[#437  Auto -32] [flags 0x7 0x800 ]
 [0x7ffb7218a6a0]	mov	qword ptr [vfp-0x28], rbx		# S8MemReg, SymRef  <pending push temp 1>[#438  Auto -40] [flags 0x7 0x800 ]
 [0x7ffb7218aac0]	mov	qword ptr [vfp-0x30], rax		# S8MemReg, SymRef  <pending push temp 2>[#439  Auto -48] [flags 0x7 0x800 ]
 [0x7ffb7218b000]	Label L0139:			# LABEL	# (Start of internal control flow)
 [0x7ffb7218b1b0]	mov	ecx, dword ptr [rsi]		# L4RegMem
 [0x7ffb7218b240]	and	ecx, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7218b360]	test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#441 +36]
 [0x7ffb72239450]	vfpSave			# AdjustFramePtr
 [0x7ffb7218b3f0]	jne	Outlined Label L0141			# JNE4
 [0x7ffb7218bc90]	assocRegs                       # ASSOCREGS
 [0x7ffb7218ba40]	Label L0140:			# LABEL	# (End of internal control flow)
 [0x7ffb722393a0]	mov	r9, rsi		# MOV8RegReg
 [0x7ffb7218be20]	mov	eax, dword ptr [r9+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#443  Shadow +80] [flags 0x80603 0x0 ]
 [0x7ffb7218d280]	Label L0143:			# LABEL	# (Start of internal control flow)
 [0x7ffb7218cbe0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7218cb40]	call	Snippet Label L0145     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb7218d570]	assocRegs                       # ASSOCREGS
 [0x7ffb7218d320]	Label L0144:			# LABEL	# (End of internal control flow)
 [0x7ffb72239290]	xchg	r9, rax		# XCHG8RegReg
 [0x7ffb722391a0]	mov	r8, qword ptr [vfp-0x30]		# L8RegMem ; $REMAT, SymRef  <pending push temp 2>[#491  Auto -48] [flags 0x7 0x800 ]
 [0x7ffb72239040]	mov	rsi, qword ptr [vfp-0x8]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_490 0x7ffb72238ed0>[#490  Auto -8] [flags 0x80000000 0x0 ]#, spilled for icall
 [0x7ffb72238e00]	mov	rdx, qword ptr [vfp-0x10]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_488 0x7ffb72237290>[#488  Auto -16] [flags 0x80000000 0x0 ]#, spilled for icall
 [0x7ffb72238ce0]	mov	rcx, r9		# MOV8RegReg
 [0x7ffb7218db00]	test	ecx, ecx		# TEST4RegReg
 [0x7ffb7218dfc0]	assocRegs                       # ASSOCREGS
 [0x7ffb7218dd00]	jne	Label L0018			# JNE4
 [0x7ffb7218e210]	Fence Relative [ 00007FFB720509E4 ]	# FENCE BBEnd </block_3>
........................................
 [0x7ffb7218e330]	Fence Relative [ 00007FFB72050300 ]	# FENCE BBStart <block_5> (frequency 766) (extension of previous block)
 [0x7ffb7218e5f0]	mov	ecx, dword ptr [rsi]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb7218e680]	and	rcx, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb7218ea20]	mov	rdi, qword ptr [rcx+0x30]		# L8RegMem, SymRef  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]
 [0x7ffb7218ed00]	mov	qword ptr [vfp-0x38], rdi		# S8MemReg, SymRef  <pending push temp 3>[#447  Auto -56] [flags 0x7 0x800 ]
 [0x7ffb7218f010]	Fence Relative [ 00007FFB72050304 ]	# FENCE BBEnd </block_5>
 [0x7ffb7218f250]	assocRegs                       # ASSOCREGS
 [0x7ffb7218f740]	assocRegs                       # ASSOCREGS
 [0x7ffb7218f4f0]	Label L0160:			# LABEL
 [0x7ffb72220510]	assocRegs                       # ASSOCREGS
 [0x7ffb722202c0]	Label L0021:			# LABEL
 [0x7ffb72238ab0]	mov	r9, rdx		# MOV8RegReg
 [0x7ffb72238a20]	mov	rcx, rdi		# MOV8RegReg
 [0x7ffb72238990]	mov	rdx, r8		# MOV8RegReg
 [0x7ffb72238900]	mov	qword ptr [vfp-0x10], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_487 0x7ffb72237290>[#487  Auto -16] [flags 0x80000000 0x0 ]
 [0x7ffb722387a0]	mov	rsi, rax		# MOV8RegReg
========================================
 [0x7ffb72220590]	Fence Relative [ 00007FFB72050430 ]	# FENCE BBStart <block_6> (frequency 785)
 [0x7ffb72220ed0]	Label L0177:			# LABEL	# (Start of internal control flow)
 [0x7ffb72221080]	mov	r10d, dword ptr [rsi]		# L4RegMem
 [0x7ffb72221110]	and	r10d, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72221230]	test	word ptr [r10+0x24], 0x0100	# TEST2MemImm2, SymRef [#449 +36]
 [0x7ffb72237620]	vfpSave			# AdjustFramePtr
 [0x7ffb722212c0]	jne	Outlined Label L0179			# JNE4
 [0x7ffb72221ba0]	assocRegs                       # ASSOCREGS
 [0x7ffb72221950]	Label L0178:			# LABEL	# (End of internal control flow)
 [0x7ffb72237570]	xchg	rbx, rsi		# XCHG8RegReg
 [0x7ffb72221d30]	mov	r10d, dword ptr [rbx+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#451  Shadow +80] [flags 0x80603 0x0 ]
 [0x7ffb72222920]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72222a40]	mov	qword ptr [rsp], r10		# S8MemReg
 [0x7ffb722233c0]	Label L0181:			# LABEL	# (Start of internal control flow)
 [0x7ffb72222d20]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72222c80]	call	Snippet Label L0183     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb722236b0]	assocRegs                       # ASSOCREGS
 [0x7ffb72223460]	Label L0182:			# LABEL	# (End of internal control flow)
 [0x7ffb72237400]	mov	rsi, qword ptr [vfp-0x10]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_486 0x7ffb72237290>[#486  Auto -16] [flags 0x80000000 0x0 ]#, spilled for call
 [0x7ffb72237200]	mov	rdx, r9		# MOV8RegReg
 [0x7ffb72237170]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72223b40]	Fence Relative [ 00007FFB72050434 ]	# FENCE BBEnd </block_6>
........................................
 [0x7ffb72223c60]	Fence Relative [ 00007FFB7215B1B0 ]	# FENCE BBStart <block_12> (frequency 785) (extension of previous block)
 [0x7ffb722240f0]	assocRegs                       # ASSOCREGS
 [0x7ffb72223ea0]	jmp	Label L0019			# JMP4
 [0x7ffb72224260]	Fence Relative [ 00007FFB7215B1B4 ]	# FENCE BBEnd </block_12>
 [0x7ffb722244a0]	assocRegs                       # ASSOCREGS
 [0x7ffb72224580]	Label L0192:			# LABEL
 [0x7ffb72224dd0]	assocRegs                       # ASSOCREGS
 [0x7ffb72224b80]	Label L0017:			# LABEL
 [0x7ffb72237010]	mov	r9, rdx		# MOV8RegReg
 [0x7ffb72236f80]	mov	rbx, rsi		# MOV8RegReg
========================================
 [0x7ffb72224e50]	Fence Relative [ 00007FFB72071210 ]	# FENCE BBStart <block_8> (frequency 180)
 [0x7ffb72226a50]	Label L0208:			# LABEL	# (Start of internal control flow)
 [0x7ffb72225bb0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72225b10]	call	Snippet Label L0210     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72226d40]	assocRegs                       # ASSOCREGS
 [0x7ffb72226af0]	Label L0209:			# LABEL	# (End of internal control flow)
 [0x7ffb72236e70]	mov	rsi, rbx		# MOV8RegReg
 [0x7ffb72236de0]	mov	rdx, r9		# MOV8RegReg
 [0x7ffb72236d50]	mov	rbx, rax		# MOV8RegReg
 [0x7ffb722272c0]	mov	qword ptr [vfp-0x18], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#455  Auto -24] [flags 0x7 0x0 ]
 [0x7ffb72227510]	Fence Relative [ 00007FFB72071214 ]	# FENCE BBEnd </block_8>
........................................
 [0x7ffb72227630]	Fence Relative [ 00007FFB7215B3A0 ]	# FENCE BBStart <block_13> (frequency 180) (extension of previous block)
 [0x7ffb72227b60]	assocRegs                       # ASSOCREGS
 [0x7ffb722278a0]	jmp	Label L0020			# JMP4
 [0x7ffb72227d00]	Fence Relative [ 00007FFB7215B3A4 ]	# FENCE BBEnd </block_13>
 [0x7ffb72227f40]	assocRegs                       # ASSOCREGS
 [0x7ffb72228020]	Label L0224:			# LABEL
 [0x7ffb72228b50]	assocRegs                       # ASSOCREGS
 [0x7ffb72228900]	Label L0018:			# LABEL
========================================
 [0x7ffb72228bd0]	Fence Relative [ 00007FFB72070EB0 ]	# FENCE BBStart <block_4> (frequency 24)
 [0x7ffb72229270]	mov	qword ptr [vfp-0x38], 0x00000000	# S8MemImm4, SymRef  <pending push temp 3>[#456  Auto -56] [flags 0x7 0x800 ]
 [0x7ffb72229540]	xor	edi, edi		# XOR4RegReg
 [0x7ffb72229b90]	assocRegs                       # ASSOCREGS
 [0x7ffb722298d0]	jmp	Label L0021			# JMP4
 [0x7ffb72229d30]	Fence Relative [ 00007FFB72070EB4 ]	# FENCE BBEnd </block_4>
 [0x7ffb72229f70]	assocRegs                       # ASSOCREGS
 [0x7ffb7222a050]	Label L0240:			# LABEL
 [0x7ffb7222a260]	Label L0256:			# LABEL
========================================
 [0x7ffb7222a300]	Fence Relative [ 00007FFB720A0250 ]	# FENCE BBStart <block_10> (frequency 0) (catches ...) (cold)
 [0x7ffb7222a470]	Fence Relative [ 00007FFB720A0254 ]	# FENCE BBEnd </block_10>
........................................
 [0x7ffb7222a590]	Fence Relative [ 00007FFB72147000 ]	# FENCE BBStart <block_15> (frequency 0) (extension of previous block) (cold)
 [0x7ffb7222a850]	mov	rax, qword ptr [vfp+0x18]		# L8RegMem, SymRef  this<'this' parm Ljava/lang/reflect/Method;>[#457  Parm +24] [flags 0xc0000107 0x0 ]
 [0x7ffb7222ac50]	mov	rsi, qword ptr [vfp+0x10]		# L8RegMem, SymRef  obj<parm 1 Ljava/lang/Object;>[#458  Parm +16] [flags 0xc0000107 0x0 ]
 [0x7ffb7222b050]	mov	rdx, qword ptr [vfp+0x8]		# L8RegMem, SymRef  args<parm 2 [Ljava/lang/Object;>[#459  Parm +8] [flags 0xc0000107 0x0 ]
 [0x7ffb7222b370]	Fence Relative [ 00007FFB72147004 ]	# FENCE BBEnd </block_15>
 [0x7ffb7222b5b0]	assocRegs                       # ASSOCREGS
 [0x7ffb7222b9d0]	assocRegs                       # ASSOCREGS
 [0x7ffb7222b780]	Label L0272:			# LABEL
 [0x7ffb7222c380]	assocRegs                       # ASSOCREGS
 [0x7ffb7222c130]	Label L0288:			# LABEL
========================================
 [0x7ffb7222c400]	Fence Relative [ 00007FFB720A0120 ]	# FENCE BBStart <block_11> (frequency 0) (cold)
 [0x7ffb7222cb50]	mov	r8, qword ptr [vfp-0x20]		# L8RegMem, SymRef  <pending push temp 0>[#460  Auto -32] [flags 0x7 0x800 ]
 [0x7ffb7222cd80]	mov	ecx, dword ptr [rbp+0x15c]		# L4RegMem, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb7222cf20]	lea	r10d, dword ptr [rcx+0x58]		# LEA4RegMem, SymRef [#463 +88]
 [0x7ffb7222cfb0]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222d150]	mov	rdi, qword ptr [rbp+0x968]		# L8RegMem, SymRef  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]
 [0x7ffb7222d1e0]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222da90]	mov	r8, qword ptr [vfp-0x28]		# L8RegMem, SymRef  <pending push temp 1>[#465  Auto -40] [flags 0x7 0x800 ]
 [0x7ffb7222dcc0]	lea	r10d, dword ptr [rcx+0x50]		# LEA4RegMem, SymRef [#467 +80]
 [0x7ffb7222dd50]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222dde0]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222e4d0]	mov	r8, qword ptr [vfp-0x30]		# L8RegMem, SymRef  <pending push temp 2>[#468  Auto -48] [flags 0x7 0x800 ]
 [0x7ffb7222e700]	lea	r10d, dword ptr [rcx+0x48]		# LEA4RegMem, SymRef [#470 +72]
 [0x7ffb7222e790]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222e820]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222ef10]	mov	r8, qword ptr [vfp-0x38]		# L8RegMem, SymRef  <pending push temp 3>[#471  Auto -56] [flags 0x7 0x800 ]
 [0x7ffb7222f140]	lea	r10d, dword ptr [rcx+0x40]		# LEA4RegMem, SymRef [#473 +64]
 [0x7ffb7222f1d0]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222f260]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222f930]	lea	r8d, dword ptr [rcx+0x78]		# LEA4RegMem, SymRef [#475 +120]
 [0x7ffb7222f9c0]	movsxd	r8, r8d		# MOVSXReg8Reg4
 [0x7ffb7222fa50]	mov	qword ptr [r8+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230000]	lea	eax, dword ptr [rcx+0x70]		# LEA4RegMem, SymRef [#477 +112]
 [0x7ffb72230090]	movsxd	rax, eax		# MOVSXReg8Reg4
 [0x7ffb72230120]	mov	qword ptr [rax+1*rdi], rsi		# S8MemReg, SymRef  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230670]	lea	eax, dword ptr [rcx+0x68]		# LEA4RegMem, SymRef [#479 +104]
 [0x7ffb72230700]	movsxd	rax, eax		# MOVSXReg8Reg4
 [0x7ffb72230790]	mov	qword ptr [rax+1*rdi], rdx		# S8MemReg, SymRef  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230d00]	mov	rax, qword ptr [vfp-0x18]		# L8RegMem, SymRef  caller<auto slot 3>[#480  Auto -24] [flags 0x7 0x0 ]
 [0x7ffb72230f30]	lea	edx, dword ptr [rcx+0x60]		# LEA4RegMem, SymRef [#482 +96]
 [0x7ffb72230fc0]	movsxd	rdx, edx		# MOVSXReg8Reg4
 [0x7ffb72231050]	mov	qword ptr [rdx+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72231520]	sub	ecx, 0xffffffffffffff80	# SUB4RegImms
 [0x7ffb72231640]	mov	dword ptr [rbp+0x15c], ecx		# S4MemReg, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb722319c0]	mov	rax, qword ptr [rbp+0x970]		# L8RegMem, SymRef  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]
 [0x7ffb72231a50]	jmp	eax			# JMPReg
 [0x7ffb72231c50]	Fence Relative [ 00007FFB720A0124 ]	# FENCE BBEnd </block_11>
 [0x7ffb72231e90]	assocRegs                       # ASSOCREGS
 [0x7ffb72231f70]	Label L0304:			# LABEL
 [0x7ffb72238570]	vfpRestore [0x7ffb72237620]			# AdjustFramePtr
 [0x7ffb72221490]	Outlined Label L0179:			# LABEL
 [0x7ffb72221680]	lea	rax, qword ptr [Snippet Label L0176]		# LEA8RegMem
 [0x7ffb72221710]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb722217b0]	jmp	Label L0178			# JMP4
 [0x7ffb722218b0]	Label L0180:			# LABEL
 [0x7ffb7223a4e0]	vfpRestore [0x7ffb72239450]			# AdjustFramePtr
 [0x7ffb7218b5c0]	Outlined Label L0141:			# LABEL
 [0x7ffb7218b770]	lea	rax, qword ptr [Snippet Label L0138]		# LEA8RegMem
 [0x7ffb7218b800]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7218b8a0]	jmp	Label L0140			# JMP4
 [0x7ffb7218b9a0]	Label L0142:			# LABEL
 [0x7ffb7223b830]	vfpRestore [0x7ffb7223a7a0]			# AdjustFramePtr
 [0x7ffb72188e30]	Outlined Label L0135:			# LABEL
 [0x7ffb72188fe0]	lea	rax, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72189070]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72189110]	jmp	Label L0134			# JMP4
 [0x7ffb72189210]	Label L0136:			# LABEL
 [0x7ffb7223db10]	vfpRestore [0x7ffb7223bb00]			# AdjustFramePtr
 [0x7ffb72187d80]	Outlined Label L0131:			# LABEL
 [0x7ffb72187f60]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72188000]	mov	rsi, 0x0000000f	# MOV8RegImm4
 [0x7ffb72188090]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72188130]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72188250]	mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
 [0x7ffb721882e0]	jmp	Label L0130			# JMP4
 [0x7ffb721883e0]	Label L0132:			# LABEL
 [0x7ffb7223f720]	vfpRestore [0x7ffb7223e710]			# AdjustFramePtr
 [0x7ffb7217d400]	Outlined Label L0071:			# LABEL
 [0x7ffb7217d5b0]	lea	rax, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217d640]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7217d6e0]	jmp	Label L0070			# JMP4
 [0x7ffb7217d7e0]	Label L0072:			# LABEL
 [0x7ffb72240980]	vfpRestore [0x7ffb7223f9f0]			# AdjustFramePtr
 [0x7ffb7217c390]	Outlined Label L0067:			# LABEL
 [0x7ffb7217c530]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb7217c5d0]	mov	rsi, 0x0000001e	# MOV8RegImm4
 [0x7ffb7217c660]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb7217c700]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb7217c820]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
 [0x7ffb7217c8b0]	jmp	Label L0066			# JMP4
 [0x7ffb7217c9b0]	Label L0068:			# LABEL
 [0x7ffb72241ed0]	vfpRestore [0x7ffb72240ec0]			# AdjustFramePtr
 [0x7ffb72178ad0]	Outlined Label L0040:			# LABEL
 [0x7ffb72178c80]	lea	rax, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72178da0]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72178e40]	jmp	Label L0039			# JMP4
 [0x7ffb72178f40]	Label L0041:			# LABEL
 [0x7ffb72243130]	vfpRestore [0x7ffb722421a0]			# AdjustFramePtr
 [0x7ffb721778b0]	Outlined Label L0036:			# LABEL
 [0x7ffb72177b70]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72177c10]	mov	rsi, 0x00000045	# MOV8RegImm4
 [0x7ffb72177d30]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72177dd0]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72177ef0]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
 [0x7ffb72177f80]	jmp	Label L0035			# JMP4
 [0x7ffb72178080]	Label L0037:			# LABEL
------------ start out-of-line instructions

 [0x7ffb72221490]	Outlined Label L0179:			# LABEL
 [0x7ffb72221680]	lea	rax, qword ptr [Snippet Label L0176]		# LEA8RegMem
 [0x7ffb72221710]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb722217b0]	jmp	Label L0178			# JMP4
 [0x7ffb722218b0]	Label L0180:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7218b5c0]	Outlined Label L0141:			# LABEL
 [0x7ffb7218b770]	lea	rax, qword ptr [Snippet Label L0138]		# LEA8RegMem
 [0x7ffb7218b800]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7218b8a0]	jmp	Label L0140			# JMP4
 [0x7ffb7218b9a0]	Label L0142:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72188e30]	Outlined Label L0135:			# LABEL
 [0x7ffb72188fe0]	lea	rax, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72189070]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72189110]	jmp	Label L0134			# JMP4
 [0x7ffb72189210]	Label L0136:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72187d80]	Outlined Label L0131:			# LABEL
 [0x7ffb72187f60]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72188000]	mov	rsi, 0x0000000f	# MOV8RegImm4
 [0x7ffb72188090]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72188130]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72188250]	mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
 [0x7ffb721882e0]	jmp	Label L0130			# JMP4
 [0x7ffb721883e0]	Label L0132:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7217d400]	Outlined Label L0071:			# LABEL
 [0x7ffb7217d5b0]	lea	rax, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217d640]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7217d6e0]	jmp	Label L0070			# JMP4
 [0x7ffb7217d7e0]	Label L0072:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb7217c390]	Outlined Label L0067:			# LABEL
 [0x7ffb7217c530]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb7217c5d0]	mov	rsi, 0x0000001e	# MOV8RegImm4
 [0x7ffb7217c660]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb7217c700]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb7217c820]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
 [0x7ffb7217c8b0]	jmp	Label L0066			# JMP4
 [0x7ffb7217c9b0]	Label L0068:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb72178ad0]	Outlined Label L0040:			# LABEL
 [0x7ffb72178c80]	lea	rax, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72178da0]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72178e40]	jmp	Label L0039			# JMP4
 [0x7ffb72178f40]	Label L0041:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

 [0x7ffb721778b0]	Outlined Label L0036:			# LABEL
 [0x7ffb72177b70]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72177c10]	mov	rsi, 0x00000045	# MOV8RegImm4
 [0x7ffb72177d30]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72177dd0]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72177ef0]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
 [0x7ffb72177f80]	jmp	Label L0035			# JMP4
 [0x7ffb72178080]	Label L0037:			# LABEL
------------ end out-of-line instructions

</instructions>
<proepilogue>
Stack size was 120, and is adjusted by +8 (alignment 16, return address width 8)

Frame size: S- locals=56 frame=120 peak=128

<instructions
	title="VFP Substitution">
 [0x7ffb72175d20]	ProcEntry                       # PROCENTRY
 [0x7ffb72255900]	mov	qword ptr [rsp+0x18], rax		# S8MemReg, SymRef [#497 +24]
 [0x7ffb72255a20]	mov	qword ptr [rsp+0x10], rsi		# S8MemReg, SymRef [#498 +16]
 [0x7ffb72255b40]	mov	qword ptr [rsp+0x8], rdx		# S8MemReg, SymRef [#499 +8]
 [0x7ffb72255bd0]	vfpSave			# AdjustFramePtr
 [0x7ffb72255cf0]	cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#500 +80]
 [0x7ffb72255ea0]	Label L0320:			# LABEL	# (Start of internal control flow)
 [0x7ffb72255f40]	jbe	Outlined Label L0322			# JBE4
 [0x7ffb72255fe0]	Label L0321:			# LABEL	# (End of internal control flow)
 [0x7ffb72256450]	sub	rsp, 0x00000078	# SUB8RegImms
	# VFP=esp+120
 [0x7ffb72256570]	mov	qword ptr [rsp+0x38], r9		# S8MemReg, SymRef [#501 +56]
 [0x7ffb72256690]	mov	qword ptr [rsp+0x30], rbx		# S8MemReg, SymRef [#502 +48]
 [0x7ffb72256720]	xor	rdi, rdi		# XOR8RegReg
 [0x7ffb72256840]	lea	r8, qword ptr [rdi+0x4]		# LEA8RegMem, SymRef [#503 +4]
 [0x7ffb72256930]	Label L0323:			# LABEL
 [0x7ffb72256a60]	mov	qword ptr [rsp+8*r8+0x40], rdi		# S8MemReg, SymRef [#504 +64]
 [0x7ffb72256af0]	sub	r8d, 0x00000001	# SUB4RegImms
 [0x7ffb72256b80]	jae	Label L0323			# JAE4
 [0x7ffb722557e0]	vfpSave			# AdjustFramePtr
 [0x7ffb72176780]	assocRegs                       # ASSOCREGS
 [0x7ffb72176530]	Label L0032:			# LABEL
 [0x7ffb722433a0]	mov	rcx, rsi		# MOV8RegReg
 [0x7ffb72243310]	mov	rdi, rax		# MOV8RegReg
========================================
 [0x7ffb72176800]	Fence Relative [ 00007FFB72050690 ]	# FENCE BBStart <block_2> (frequency 10000)
 [0x7ffb721774c0]	Label L0034:			# LABEL	# (Start of internal control flow)
 [0x7ffb721775f0]	lea	r8, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72177710]	cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#406 +16]
 [0x7ffb722421a0]	vfpSave			# AdjustFramePtr
 [0x7ffb721777a0]	je	Outlined Label L0036			# JE4
 [0x7ffb72178370]	assocRegs                       # ASSOCREGS
 [0x7ffb72178120]	Label L0035:			# LABEL	# (End of internal control flow)
 [0x7ffb722420f0]	mov	rsi, rdi		# MOV8RegReg
 [0x7ffb72178510]	Label L0038:			# LABEL	# (Start of internal control flow)
 [0x7ffb721786c0]	mov	edi, dword ptr [rsi]		# L4RegMem
 [0x7ffb72178750]	and	edi, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72178870]	test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#410 +36]
 [0x7ffb72240ec0]	vfpSave			# AdjustFramePtr
 [0x7ffb72178900]	jne	Outlined Label L0040			# JNE4
 [0x7ffb72179230]	assocRegs                       # ASSOCREGS
 [0x7ffb72178fe0]	Label L0039:			# LABEL	# (End of internal control flow)
 [0x7ffb72240e10]	xchg	rcx, rsi		# XCHG8RegReg
 [0x7ffb72240d80]	mov	rax, rcx		# MOV8RegReg
 [0x7ffb721796a0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72179610]	mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.override Z[#412  unresolved volatile Shadow] [flags 0x2601 0x0 ]
 [0x7ffb72179740]	nop			# Padding (2 bytes)
 [0x7ffb72179e50]	test	ecx, ecx		# TEST4RegReg
 [0x7ffb7217a220]	assocRegs                       # ASSOCREGS
 [0x7ffb72179fd0]	je	Label L0016			# JE4
 [0x7ffb7217a410]	Fence Relative [ 00007FFB72050694 ]	# FENCE BBEnd </block_2>
........................................
 [0x7ffb7217a530]	Fence Relative [ 00007FFB72146D50 ]	# FENCE BBStart <block_14> (frequency 9238) (extension of previous block)
 [0x7ffb7217a680]	Fence Relative [ 00007FFB72146D54 ]	# FENCE BBEnd </block_14>
 [0x7ffb7217a8c0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ace0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217aa90]	Label L0048:			# LABEL
 [0x7ffb7217b570]	assocRegs                       # ASSOCREGS
 [0x7ffb7217b320]	Label L0019:			# LABEL
 [0x7ffb72240bf0]	mov	rcx, rsi		# MOV8RegReg
 [0x7ffb72240b60]	mov	rdi, rax		# MOV8RegReg
========================================
 [0x7ffb7217b5f0]	Fence Relative [ 00007FFB720501D0 ]	# FENCE BBStart <block_7> (frequency 9726)
 [0x7ffb7217bfa0]	Label L0065:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217c0d0]	lea	r8, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217c1f0]	cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#415 +16]
 [0x7ffb7223f9f0]	vfpSave			# AdjustFramePtr
 [0x7ffb7217c280]	je	Outlined Label L0067			# JE4
 [0x7ffb7217cca0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ca50]	Label L0066:			# LABEL	# (End of internal control flow)
 [0x7ffb7223f940]	mov	rsi, rdi		# MOV8RegReg
 [0x7ffb7217ce40]	Label L0069:			# LABEL	# (Start of internal control flow)
 [0x7ffb7217cff0]	mov	edi, dword ptr [rsi]		# L4RegMem
 [0x7ffb7217d080]	and	edi, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7217d1a0]	test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#418 +36]
 [0x7ffb7223e710]	vfpSave			# AdjustFramePtr
 [0x7ffb7217d230]	jne	Outlined Label L0071			# JNE4
 [0x7ffb7217dad0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217d880]	Label L0070:			# LABEL	# (End of internal control flow)
 [0x7ffb7223e660]	xchg	rcx, rsi		# XCHG8RegReg
 [0x7ffb7223e5d0]	mov	rax, rcx		# MOV8RegReg
 [0x7ffb7217de40]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7217ddb0]	mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#420  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb7217dee0]	nop			# Padding (2 bytes)
 [0x7ffb7217dff0]	lea	rbx, qword ptr [8*rcx]		# LEA8RegMem
 [0x7ffb7217e9c0]	mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#421  Auto +96] [flags 0x7 0x0 ]
 [0x7ffb7217ecd0]	test	rbx, rbx		# TEST8RegReg
 [0x7ffb7217f0a0]	assocRegs                       # ASSOCREGS
 [0x7ffb7217ee50]	je	Label L0017			# JE4
 [0x7ffb7217f2f0]	Fence Relative [ 00007FFB720501D4 ]	# FENCE BBEnd </block_7>
 [0x7ffb7217f530]	assocRegs                       # ASSOCREGS
 [0x7ffb7217f950]	assocRegs                       # ASSOCREGS
 [0x7ffb7217f700]	Label L0074:			# LABEL
 [0x7ffb72180260]	assocRegs                       # ASSOCREGS
 [0x7ffb72180010]	Label L0020:			# LABEL
========================================
 [0x7ffb721802e0]	Fence Relative [ 00007FFB72050560 ]	# FENCE BBStart <block_9> (frequency 9726)
 [0x7ffb72181480]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72181620]	mov	r9d, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb721816b0]	and	r9, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb72183470]	Label L0080:			# LABEL	# (Start of internal control flow)
 [0x7ffb72181a70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721819d0]	mov	rbx, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72181b10]	cmp	rbx, r9		# CMP8RegReg
 [0x7ffb72181ba0]	jne	Label L0083			# JNE1
 [0x7ffb72181c40]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb72181ce0]	jmp	Label L0081			# JMP4
 [0x7ffb72181d80]	Label L0083:			# LABEL
 [0x7ffb72182060]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72181fc0]	mov	rbx, 0x0000000000000000	# MOV8RegImm64
 [0x7ffb72182100]	cmp	rbx, r9		# CMP8RegReg
 [0x7ffb72182190]	jne	Label L0096			# JNE1
 [0x7ffb72182230]	call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
 [0x7ffb721822d0]	jmp	Label L0081			# JMP4
 [0x7ffb721824b0]	Label L0097:			# LABEL
 [0x7ffb72182550]	mov	r8d, 0x00000178	# MOV4RegImm4
 [0x7ffb72182670]	sub	r8, qword ptr [rdi+0x18]		# SUB8RegMem, SymRef [#423 +24]
 [0x7ffb72182790]	jmp	dword ptr [r9+1*r8]		# JMPMem
 [0x7ffb72182820]	Label L0096:			# LABEL
 [0x7ffb72182950]	mov	rdi, qword ptr [r9+0x60]		# L8RegMem, SymRef [#425 +96]
 [0x7ffb72182a70]	cmp	dword ptr [rdi], 0x000a5700	# CMP4MemImm4
 [0x7ffb72182b00]	jne	Snippet Label L0084		# JNE4	# (IPic Data)
 [0x7ffb72182df0]	assocRegs                       # ASSOCREGS
 [0x7ffb72182ba0]	call	Label L0097			# CALLImm4
 [0x7ffb72183760]	assocRegs                       # ASSOCREGS
 [0x7ffb72183510]	Label L0081:			# LABEL	# (End of internal control flow)
 [0x7ffb72184440]	assocRegs                       # ASSOCREGS
 [0x7ffb722585a0]	mov	r9, qword ptr [rsp+0x38]		# L8RegMem, SymRef [#505 +56]
 [0x7ffb722586c0]	mov	rbx, qword ptr [rsp+0x30]		# L8RegMem, SymRef [#506 +48]
 [0x7ffb72258750]	add	rsp, 0x00000078	# ADD8RegImms
	# VFP=esp+0
 [0x7ffb72184210]	ret                             # RET
	# VFP=esp+120
 [0x7ffb72184580]	Fence Relative [ 00007FFB72050564 ]	# FENCE BBEnd </block_9>
 [0x7ffb721847c0]	assocRegs                       # ASSOCREGS
 [0x7ffb721848a0]	Label L0098:			# LABEL
 [0x7ffb721850f0]	assocRegs                       # ASSOCREGS
 [0x7ffb72184ea0]	Label L0016:			# LABEL
 [0x7ffb7223e0f0]	mov	qword ptr [rsp+0x68], rdx		# S8MemReg, #SPILL8, SymRef  <#SPILL8_493 0x7ffb72237290>[#493  Auto +104] [flags 0x80000000 0x0 ]
 [0x7ffb7223df90]	mov	qword ptr [rsp+0x70], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_492 0x7ffb72238ed0>[#492  Auto +112] [flags 0x80000000 0x0 ]
 [0x7ffb7223de30]	mov	r9, rax		# MOV8RegReg
========================================
 [0x7ffb72185170]	Fence Relative [ 00007FFB720509E0 ]	# FENCE BBStart <block_3> (frequency 785)
 [0x7ffb72186570]	Label L0112:			# LABEL	# (Start of internal control flow)
 [0x7ffb72185ed0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72185e30]	call	Snippet Label L0114     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72186860]	assocRegs                       # ASSOCREGS
 [0x7ffb72186610]	Label L0113:			# LABEL	# (End of internal control flow)
 [0x7ffb7223dd40]	mov	rbx, rax		# MOV8RegReg
 [0x7ffb72186d80]	mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#428  Auto +96] [flags 0x7 0x0 ]
 [0x7ffb72187990]	Label L0129:			# LABEL	# (Start of internal control flow)
 [0x7ffb72187ac0]	lea	rcx, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72187be0]	cmp	qword ptr [rcx+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#431 +16]
 [0x7ffb7223bb00]	vfpSave			# AdjustFramePtr
 [0x7ffb72187c70]	je	Outlined Label L0131			# JE4
 [0x7ffb721886d0]	assocRegs                       # ASSOCREGS
 [0x7ffb72188480]	Label L0130:			# LABEL	# (End of internal control flow)
 [0x7ffb7223ba50]	mov	rsi, r9		# MOV8RegReg
 [0x7ffb72188870]	Label L0133:			# LABEL	# (Start of internal control flow)
 [0x7ffb72188a20]	mov	ecx, dword ptr [rsi]		# L4RegMem
 [0x7ffb72188ab0]	and	ecx, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72188bd0]	test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#434 +36]
 [0x7ffb7223a7a0]	vfpSave			# AdjustFramePtr
 [0x7ffb72188c60]	jne	Outlined Label L0135			# JNE4
 [0x7ffb72189500]	assocRegs                       # ASSOCREGS
 [0x7ffb721892b0]	Label L0134:			# LABEL	# (End of internal control flow)
 [0x7ffb72189870]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb721897e0]	mov	eax, dword ptr [rsi-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.clazz Ljava/lang/Class;[#436  unresolved volatile Shadow] [flags 0x2607 0x0 ]
 [0x7ffb72189910]	nop			# Padding (2 bytes)
 [0x7ffb72189a20]	lea	rax, qword ptr [8*rax]		# LEA8RegMem
 [0x7ffb7218a310]	mov	qword ptr [rsp+0x58], rsi		# S8MemReg, SymRef  <pending push temp 0>[#437  Auto +88] [flags 0x7 0x800 ]
 [0x7ffb7218a6a0]	mov	qword ptr [rsp+0x50], rbx		# S8MemReg, SymRef  <pending push temp 1>[#438  Auto +80] [flags 0x7 0x800 ]
 [0x7ffb7218aac0]	mov	qword ptr [rsp+0x48], rax		# S8MemReg, SymRef  <pending push temp 2>[#439  Auto +72] [flags 0x7 0x800 ]
 [0x7ffb7218b000]	Label L0139:			# LABEL	# (Start of internal control flow)
 [0x7ffb7218b1b0]	mov	ecx, dword ptr [rsi]		# L4RegMem
 [0x7ffb7218b240]	and	ecx, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb7218b360]	test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#441 +36]
 [0x7ffb72239450]	vfpSave			# AdjustFramePtr
 [0x7ffb7218b3f0]	jne	Outlined Label L0141			# JNE4
 [0x7ffb7218bc90]	assocRegs                       # ASSOCREGS
 [0x7ffb7218ba40]	Label L0140:			# LABEL	# (End of internal control flow)
 [0x7ffb722393a0]	mov	r9, rsi		# MOV8RegReg
 [0x7ffb7218be20]	mov	eax, dword ptr [r9+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#443  Shadow +80] [flags 0x80603 0x0 ]
 [0x7ffb7218d280]	Label L0143:			# LABEL	# (Start of internal control flow)
 [0x7ffb7218cbe0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb7218cb40]	call	Snippet Label L0145     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb7218d570]	assocRegs                       # ASSOCREGS
 [0x7ffb7218d320]	Label L0144:			# LABEL	# (End of internal control flow)
 [0x7ffb72239290]	xchg	r9, rax		# XCHG8RegReg
 [0x7ffb722391a0]	mov	r8, qword ptr [rsp+0x48]		# L8RegMem ; $REMAT, SymRef  <pending push temp 2>[#491  Auto +72] [flags 0x7 0x800 ]
 [0x7ffb72239040]	mov	rsi, qword ptr [rsp+0x70]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_490 0x7ffb72238ed0>[#490  Auto +112] [flags 0x80000000 0x0 ]#, spilled for icall
 [0x7ffb72238e00]	mov	rdx, qword ptr [rsp+0x68]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_488 0x7ffb72237290>[#488  Auto +104] [flags 0x80000000 0x0 ]#, spilled for icall
 [0x7ffb72238ce0]	mov	rcx, r9		# MOV8RegReg
 [0x7ffb7218db00]	test	ecx, ecx		# TEST4RegReg
 [0x7ffb7218dfc0]	assocRegs                       # ASSOCREGS
 [0x7ffb7218dd00]	jne	Label L0018			# JNE4
 [0x7ffb7218e210]	Fence Relative [ 00007FFB720509E4 ]	# FENCE BBEnd </block_3>
........................................
 [0x7ffb7218e330]	Fence Relative [ 00007FFB72050300 ]	# FENCE BBStart <block_5> (frequency 766) (extension of previous block)
 [0x7ffb7218e5f0]	mov	ecx, dword ptr [rsi]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
 [0x7ffb7218e680]	and	rcx, 0xffffffffffffff00	# AND8RegImm4
 [0x7ffb7218ea20]	mov	rdi, qword ptr [rcx+0x30]		# L8RegMem, SymRef  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]
 [0x7ffb7218ed00]	mov	qword ptr [rsp+0x40], rdi		# S8MemReg, SymRef  <pending push temp 3>[#447  Auto +64] [flags 0x7 0x800 ]
 [0x7ffb7218f010]	Fence Relative [ 00007FFB72050304 ]	# FENCE BBEnd </block_5>
 [0x7ffb7218f250]	assocRegs                       # ASSOCREGS
 [0x7ffb7218f740]	assocRegs                       # ASSOCREGS
 [0x7ffb7218f4f0]	Label L0160:			# LABEL
 [0x7ffb72220510]	assocRegs                       # ASSOCREGS
 [0x7ffb722202c0]	Label L0021:			# LABEL
 [0x7ffb72238ab0]	mov	r9, rdx		# MOV8RegReg
 [0x7ffb72238a20]	mov	rcx, rdi		# MOV8RegReg
 [0x7ffb72238990]	mov	rdx, r8		# MOV8RegReg
 [0x7ffb72238900]	mov	qword ptr [rsp+0x68], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_487 0x7ffb72237290>[#487  Auto +104] [flags 0x80000000 0x0 ]
 [0x7ffb722387a0]	mov	rsi, rax		# MOV8RegReg
========================================
 [0x7ffb72220590]	Fence Relative [ 00007FFB72050430 ]	# FENCE BBStart <block_6> (frequency 785)
 [0x7ffb72220ed0]	Label L0177:			# LABEL	# (Start of internal control flow)
 [0x7ffb72221080]	mov	r10d, dword ptr [rsi]		# L4RegMem
 [0x7ffb72221110]	and	r10d, 0xffffffffffffff00	# AND4RegImm4
 [0x7ffb72221230]	test	word ptr [r10+0x24], 0x0100	# TEST2MemImm2, SymRef [#449 +36]
 [0x7ffb72237620]	vfpSave			# AdjustFramePtr
 [0x7ffb722212c0]	jne	Outlined Label L0179			# JNE4
 [0x7ffb72221ba0]	assocRegs                       # ASSOCREGS
 [0x7ffb72221950]	Label L0178:			# LABEL	# (End of internal control flow)
 [0x7ffb72237570]	xchg	rbx, rsi		# XCHG8RegReg
 [0x7ffb72221d30]	mov	r10d, dword ptr [rbx+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#451  Shadow +80] [flags 0x80603 0x0 ]
 [0x7ffb72222920]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72222a40]	mov	qword ptr [rsp], r10		# S8MemReg
 [0x7ffb722233c0]	Label L0181:			# LABEL	# (Start of internal control flow)
 [0x7ffb72222d20]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72222c80]	call	Snippet Label L0183     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb722236b0]	assocRegs                       # ASSOCREGS
 [0x7ffb72223460]	Label L0182:			# LABEL	# (End of internal control flow)
 [0x7ffb72237400]	mov	rsi, qword ptr [rsp+0x68]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_486 0x7ffb72237290>[#486  Auto +104] [flags 0x80000000 0x0 ]#, spilled for call
 [0x7ffb72237200]	mov	rdx, r9		# MOV8RegReg
 [0x7ffb72237170]	mov	rax, rbx		# MOV8RegReg
 [0x7ffb72223b40]	Fence Relative [ 00007FFB72050434 ]	# FENCE BBEnd </block_6>
........................................
 [0x7ffb72223c60]	Fence Relative [ 00007FFB7215B1B0 ]	# FENCE BBStart <block_12> (frequency 785) (extension of previous block)
 [0x7ffb722240f0]	assocRegs                       # ASSOCREGS
 [0x7ffb72223ea0]	jmp	Label L0019			# JMP4
 [0x7ffb72224260]	Fence Relative [ 00007FFB7215B1B4 ]	# FENCE BBEnd </block_12>
 [0x7ffb722244a0]	assocRegs                       # ASSOCREGS
 [0x7ffb72224580]	Label L0192:			# LABEL
 [0x7ffb72224dd0]	assocRegs                       # ASSOCREGS
 [0x7ffb72224b80]	Label L0017:			# LABEL
 [0x7ffb72237010]	mov	r9, rdx		# MOV8RegReg
 [0x7ffb72236f80]	mov	rbx, rsi		# MOV8RegReg
========================================
 [0x7ffb72224e50]	Fence Relative [ 00007FFB72071210 ]	# FENCE BBStart <block_8> (frequency 180)
 [0x7ffb72226a50]	Label L0208:			# LABEL	# (Start of internal control flow)
 [0x7ffb72225bb0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7ffb72225b10]	call	Snippet Label L0210     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7ffb72226d40]	assocRegs                       # ASSOCREGS
 [0x7ffb72226af0]	Label L0209:			# LABEL	# (End of internal control flow)
 [0x7ffb72236e70]	mov	rsi, rbx		# MOV8RegReg
 [0x7ffb72236de0]	mov	rdx, r9		# MOV8RegReg
 [0x7ffb72236d50]	mov	rbx, rax		# MOV8RegReg
 [0x7ffb722272c0]	mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#455  Auto +96] [flags 0x7 0x0 ]
 [0x7ffb72227510]	Fence Relative [ 00007FFB72071214 ]	# FENCE BBEnd </block_8>
........................................
 [0x7ffb72227630]	Fence Relative [ 00007FFB7215B3A0 ]	# FENCE BBStart <block_13> (frequency 180) (extension of previous block)
 [0x7ffb72227b60]	assocRegs                       # ASSOCREGS
 [0x7ffb722278a0]	jmp	Label L0020			# JMP4
 [0x7ffb72227d00]	Fence Relative [ 00007FFB7215B3A4 ]	# FENCE BBEnd </block_13>
 [0x7ffb72227f40]	assocRegs                       # ASSOCREGS
 [0x7ffb72228020]	Label L0224:			# LABEL
 [0x7ffb72228b50]	assocRegs                       # ASSOCREGS
 [0x7ffb72228900]	Label L0018:			# LABEL
========================================
 [0x7ffb72228bd0]	Fence Relative [ 00007FFB72070EB0 ]	# FENCE BBStart <block_4> (frequency 24)
 [0x7ffb72229270]	mov	qword ptr [rsp+0x40], 0x00000000	# S8MemImm4, SymRef  <pending push temp 3>[#456  Auto +64] [flags 0x7 0x800 ]
 [0x7ffb72229540]	xor	edi, edi		# XOR4RegReg
 [0x7ffb72229b90]	assocRegs                       # ASSOCREGS
 [0x7ffb722298d0]	jmp	Label L0021			# JMP4
 [0x7ffb72229d30]	Fence Relative [ 00007FFB72070EB4 ]	# FENCE BBEnd </block_4>
 [0x7ffb72229f70]	assocRegs                       # ASSOCREGS
 [0x7ffb7222a050]	Label L0240:			# LABEL
 [0x7ffb7222a260]	Label L0256:			# LABEL
========================================
 [0x7ffb7222a300]	Fence Relative [ 00007FFB720A0250 ]	# FENCE BBStart <block_10> (frequency 0) (catches ...) (cold)
 [0x7ffb7222a470]	Fence Relative [ 00007FFB720A0254 ]	# FENCE BBEnd </block_10>
........................................
 [0x7ffb7222a590]	Fence Relative [ 00007FFB72147000 ]	# FENCE BBStart <block_15> (frequency 0) (extension of previous block) (cold)
 [0x7ffb7222a850]	mov	rax, qword ptr [rsp+0x90]		# L8RegMem, SymRef  this<'this' parm Ljava/lang/reflect/Method;>[#457  Parm +144] [flags 0xc0000107 0x0 ]
 [0x7ffb7222ac50]	mov	rsi, qword ptr [rsp+0x88]		# L8RegMem, SymRef  obj<parm 1 Ljava/lang/Object;>[#458  Parm +136] [flags 0xc0000107 0x0 ]
 [0x7ffb7222b050]	mov	rdx, qword ptr [rsp+0x80]		# L8RegMem, SymRef  args<parm 2 [Ljava/lang/Object;>[#459  Parm +128] [flags 0xc0000107 0x0 ]
 [0x7ffb7222b370]	Fence Relative [ 00007FFB72147004 ]	# FENCE BBEnd </block_15>
 [0x7ffb7222b5b0]	assocRegs                       # ASSOCREGS
 [0x7ffb7222b9d0]	assocRegs                       # ASSOCREGS
 [0x7ffb7222b780]	Label L0272:			# LABEL
 [0x7ffb7222c380]	assocRegs                       # ASSOCREGS
 [0x7ffb7222c130]	Label L0288:			# LABEL
========================================
 [0x7ffb7222c400]	Fence Relative [ 00007FFB720A0120 ]	# FENCE BBStart <block_11> (frequency 0) (cold)
 [0x7ffb7222cb50]	mov	r8, qword ptr [rsp+0x58]		# L8RegMem, SymRef  <pending push temp 0>[#460  Auto +88] [flags 0x7 0x800 ]
 [0x7ffb7222cd80]	mov	ecx, dword ptr [rbp+0x15c]		# L4RegMem, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb7222cf20]	lea	r10d, dword ptr [rcx+0x58]		# LEA4RegMem, SymRef [#463 +88]
 [0x7ffb7222cfb0]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222d150]	mov	rdi, qword ptr [rbp+0x968]		# L8RegMem, SymRef  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]
 [0x7ffb7222d1e0]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222da90]	mov	r8, qword ptr [rsp+0x50]		# L8RegMem, SymRef  <pending push temp 1>[#465  Auto +80] [flags 0x7 0x800 ]
 [0x7ffb7222dcc0]	lea	r10d, dword ptr [rcx+0x50]		# LEA4RegMem, SymRef [#467 +80]
 [0x7ffb7222dd50]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222dde0]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222e4d0]	mov	r8, qword ptr [rsp+0x48]		# L8RegMem, SymRef  <pending push temp 2>[#468  Auto +72] [flags 0x7 0x800 ]
 [0x7ffb7222e700]	lea	r10d, dword ptr [rcx+0x48]		# LEA4RegMem, SymRef [#470 +72]
 [0x7ffb7222e790]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222e820]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222ef10]	mov	r8, qword ptr [rsp+0x40]		# L8RegMem, SymRef  <pending push temp 3>[#471  Auto +64] [flags 0x7 0x800 ]
 [0x7ffb7222f140]	lea	r10d, dword ptr [rcx+0x40]		# LEA4RegMem, SymRef [#473 +64]
 [0x7ffb7222f1d0]	movsxd	r10, r10d		# MOVSXReg8Reg4
 [0x7ffb7222f260]	mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]
 [0x7ffb7222f930]	lea	r8d, dword ptr [rcx+0x78]		# LEA4RegMem, SymRef [#475 +120]
 [0x7ffb7222f9c0]	movsxd	r8, r8d		# MOVSXReg8Reg4
 [0x7ffb7222fa50]	mov	qword ptr [r8+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230000]	lea	eax, dword ptr [rcx+0x70]		# LEA4RegMem, SymRef [#477 +112]
 [0x7ffb72230090]	movsxd	rax, eax		# MOVSXReg8Reg4
 [0x7ffb72230120]	mov	qword ptr [rax+1*rdi], rsi		# S8MemReg, SymRef  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230670]	lea	eax, dword ptr [rcx+0x68]		# LEA4RegMem, SymRef [#479 +104]
 [0x7ffb72230700]	movsxd	rax, eax		# MOVSXReg8Reg4
 [0x7ffb72230790]	mov	qword ptr [rax+1*rdi], rdx		# S8MemReg, SymRef  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72230d00]	mov	rax, qword ptr [rsp+0x60]		# L8RegMem, SymRef  caller<auto slot 3>[#480  Auto +96] [flags 0x7 0x0 ]
 [0x7ffb72230f30]	lea	edx, dword ptr [rcx+0x60]		# LEA4RegMem, SymRef [#482 +96]
 [0x7ffb72230fc0]	movsxd	rdx, edx		# MOVSXReg8Reg4
 [0x7ffb72231050]	mov	qword ptr [rdx+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]
 [0x7ffb72231520]	sub	ecx, 0xffffffffffffff80	# SUB4RegImms
 [0x7ffb72231640]	mov	dword ptr [rbp+0x15c], ecx		# S4MemReg, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
 [0x7ffb722319c0]	mov	rax, qword ptr [rbp+0x970]		# L8RegMem, SymRef  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]
 [0x7ffb72231a50]	jmp	eax			# JMPReg
 [0x7ffb72231c50]	Fence Relative [ 00007FFB720A0124 ]	# FENCE BBEnd </block_11>
 [0x7ffb72231e90]	assocRegs                       # ASSOCREGS
 [0x7ffb72231f70]	Label L0304:			# LABEL
 [0x7ffb72238570]	vfpRestore [0x7ffb72237620]			# AdjustFramePtr
 [0x7ffb72221490]	Outlined Label L0179:			# LABEL
 [0x7ffb72221680]	lea	rax, qword ptr [Snippet Label L0176]		# LEA8RegMem
 [0x7ffb72221710]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb722217b0]	jmp	Label L0178			# JMP4
 [0x7ffb722218b0]	Label L0180:			# LABEL
 [0x7ffb7223a4e0]	vfpRestore [0x7ffb72239450]			# AdjustFramePtr
 [0x7ffb7218b5c0]	Outlined Label L0141:			# LABEL
 [0x7ffb7218b770]	lea	rax, qword ptr [Snippet Label L0138]		# LEA8RegMem
 [0x7ffb7218b800]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7218b8a0]	jmp	Label L0140			# JMP4
 [0x7ffb7218b9a0]	Label L0142:			# LABEL
 [0x7ffb7223b830]	vfpRestore [0x7ffb7223a7a0]			# AdjustFramePtr
 [0x7ffb72188e30]	Outlined Label L0135:			# LABEL
 [0x7ffb72188fe0]	lea	rax, qword ptr [Snippet Label L0128]		# LEA8RegMem
 [0x7ffb72189070]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72189110]	jmp	Label L0134			# JMP4
 [0x7ffb72189210]	Label L0136:			# LABEL
 [0x7ffb7223db10]	vfpRestore [0x7ffb7223bb00]			# AdjustFramePtr
 [0x7ffb72187d80]	Outlined Label L0131:			# LABEL
 [0x7ffb72187f60]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72188000]	mov	rsi, 0x0000000f	# MOV8RegImm4
 [0x7ffb72188090]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72188130]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72188250]	mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
 [0x7ffb721882e0]	jmp	Label L0130			# JMP4
 [0x7ffb721883e0]	Label L0132:			# LABEL
 [0x7ffb7223f720]	vfpRestore [0x7ffb7223e710]			# AdjustFramePtr
 [0x7ffb7217d400]	Outlined Label L0071:			# LABEL
 [0x7ffb7217d5b0]	lea	rax, qword ptr [Snippet Label L0064]		# LEA8RegMem
 [0x7ffb7217d640]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb7217d6e0]	jmp	Label L0070			# JMP4
 [0x7ffb7217d7e0]	Label L0072:			# LABEL
 [0x7ffb72240980]	vfpRestore [0x7ffb7223f9f0]			# AdjustFramePtr
 [0x7ffb7217c390]	Outlined Label L0067:			# LABEL
 [0x7ffb7217c530]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb7217c5d0]	mov	rsi, 0x0000001e	# MOV8RegImm4
 [0x7ffb7217c660]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb7217c700]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb7217c820]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
 [0x7ffb7217c8b0]	jmp	Label L0066			# JMP4
 [0x7ffb7217c9b0]	Label L0068:			# LABEL
 [0x7ffb72241ed0]	vfpRestore [0x7ffb72240ec0]			# AdjustFramePtr
 [0x7ffb72178ad0]	Outlined Label L0040:			# LABEL
 [0x7ffb72178c80]	lea	rax, qword ptr [Snippet Label L0033]		# LEA8RegMem
 [0x7ffb72178da0]	call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
 [0x7ffb72178e40]	jmp	Label L0039			# JMP4
 [0x7ffb72178f40]	Label L0041:			# LABEL
 [0x7ffb72243130]	vfpRestore [0x7ffb722421a0]			# AdjustFramePtr
 [0x7ffb721778b0]	Outlined Label L0036:			# LABEL
 [0x7ffb72177b70]	mov	rax, 0x0000000000077170	# MOV8RegImm64
 [0x7ffb72177c10]	mov	rsi, 0x00000045	# MOV8RegImm4
 [0x7ffb72177d30]	call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
 [0x7ffb72177dd0]	sub	rax, 0x00000004	# SUB8RegImm4
 [0x7ffb72177ef0]	mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
 [0x7ffb72177f80]	jmp	Label L0035			# JMP4
 [0x7ffb72178080]	Label L0037:			# LABEL
 [0x7ffb72256080]	vfpRestore [0x7ffb72255bd0]			# AdjustFramePtr
	# VFP=esp+0
 [0x7ffb72256110]	Outlined Label L0322:			# LABEL
 [0x7ffb722561b0]	mov	edi, 0x00000078	# MOV4RegImm4
 [0x7ffb722562d0]	call	jitStackOverflow        # CALLImm4 (00007FFBC3902DE0)# CALLImm4
 [0x7ffb72256370]	jmp	Label L0321			# JMP4
</instructions>
</proepilogue>
<encode>
</encode>

<instructions
	title="Post Binary Instructions"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

                 +--------------------------------------- instruction address
                 |        +----------------------------------------- instruction offset from start of method
                 |        |                   +------------------------------------------ corresponding TR::Instruction instance
                 |        |                   |  +-------------------------------------------------- code bytes
                 |        |                   |  |                          +-------------------------------------- opcode and operands
                 |        |                   |  |                          |				+----------- additional information
                 |        |                   |  |                          |				|
                 V        V                   V  V                          V				V
0x7ffba4d8a970 ffffffd8 [0x7ffb72174df0]                                    Label L0022:			# LABEL
0x7ffba4d8a970 ffffffd8 [0x7ffb72174f60] 48 bf 38 84 07 00 00 00 00 00      mov	rdi, 0x0000000000078438	# MOV8RegImm64
0x7ffba4d8a97a ffffffe2 [0x7ffb721752b0] 48 89 44 24 18                     mov	qword ptr [rsp+0x18], rax		# S8MemReg, SymRef [#402 +24]
0x7ffba4d8a97f ffffffe7 [0x7ffb721754f0] 48 89 74 24 10                     mov	qword ptr [rsp+0x10], rsi		# S8MemReg, SymRef [#403 +16]
0x7ffba4d8a984 ffffffec [0x7ffb72175730] 48 89 54 24 08                     mov	qword ptr [rsp+0x8], rdx		# S8MemReg, SymRef [#404 +8]
0x7ffba4d8a989 fffffff1 [0x7ffb72175a10]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a989 fffffff1 [0x7ffb721757c0] e9 e2 30 b8 1e                     jmp	j2iTransition           # JMP4 (00007FFBC390DA70)# JMP4
0x7ffba4d8a98e fffffff6 [0x7ffb72175a90] 66 90                              nop (2 bytes)		# Alignment (boundary=8, margin=8)
0x7ffba4d8a990 fffffff8 [0x7ffb72175b20] eb de                              jmp	Label L0022			# JMP1
0x7ffba4d8a992 fffffffa [0x7ffb72175bc0] cc cc                              .short	0xcccc		# DWImm2
0x7ffba4d8a994 fffffffc [0x7ffb72175c50] 05 00 0f 00                        .int	0x000f0005		# DDImm4
0x7ffba4d8a998 00000000 [0x7ffb72175f50]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a998 00000000 [0x7ffb72255470] 48 8b 44 24 18                     mov	rax, qword ptr [rsp+0x18]		# L8RegMem, SymRef [#494 +24]
0x7ffba4d8a99d 00000005 [0x7ffb72255590] 48 8b 74 24 10                     mov	rsi, qword ptr [rsp+0x10]		# L8RegMem, SymRef [#495 +16]
0x7ffba4d8a9a2 0000000a [0x7ffb722556b0] 48 8b 54 24 08                     mov	rdx, qword ptr [rsp+0x8]		# L8RegMem, SymRef [#496 +8]
0x7ffba4d8a9a7 0000000f [0x7ffb72255740]                                    nop (0 bytes)		# Align patchable code @32 [0x0:2]
0x7ffba4d8a9a7 0000000f [0x7ffb72175d20]                                    ProcEntry                       # PROCENTRY
0x7ffba4d8a9a7 0000000f [0x7ffb72255900] 48 89 44 24 18                     mov	qword ptr [rsp+0x18], rax		# S8MemReg, SymRef [#497 +24]
0x7ffba4d8a9ac 00000014 [0x7ffb72255a20] 48 89 74 24 10                     mov	qword ptr [rsp+0x10], rsi		# S8MemReg, SymRef [#498 +16]
0x7ffba4d8a9b1 00000019 [0x7ffb72255b40] 48 89 54 24 08                     mov	qword ptr [rsp+0x8], rdx		# S8MemReg, SymRef [#499 +8]
0x7ffba4d8a9b6 0000001e [0x7ffb72255bd0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8a9b6 0000001e [0x7ffb72255cf0] 48 3b 65 50                        cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#500 +80]
0x7ffba4d8a9ba 00000022 [0x7ffb72255ea0]                                    Label L0320:			# LABEL	# (Start of internal control flow)
0x7ffba4d8a9ba 00000022 [0x7ffb72255f40] 0f 86 40 56 27 5b                  jbe	Outlined Label L0322			# JBE4
0x7ffba4d8a9c0 00000028 [0x7ffb72255fe0]                                    Label L0321:			# LABEL	# (End of internal control flow)
0x7ffba4d8a9c0 00000028 [0x7ffb72256450] 48 83 ec 78                        sub	rsp, 0x00000078	# SUB8RegImms
0x7ffba4d8a9c4 0000002c [0x7ffb72256570] 4c 89 4c 24 38                     mov	qword ptr [rsp+0x38], r9		# S8MemReg, SymRef [#501 +56]
0x7ffba4d8a9c9 00000031 [0x7ffb72256690] 48 89 5c 24 30                     mov	qword ptr [rsp+0x30], rbx		# S8MemReg, SymRef [#502 +48]
0x7ffba4d8a9ce 00000036 [0x7ffb72256720] 48 33 ff                           xor	rdi, rdi		# XOR8RegReg
0x7ffba4d8a9d1 00000039 [0x7ffb72256840] 4c 8d 47 04                        lea	r8, qword ptr [rdi+0x4]		# LEA8RegMem, SymRef [#503 +4]
0x7ffba4d8a9d5 0000003d [0x7ffb72256930]                                    Label L0323:			# LABEL
0x7ffba4d8a9d5 0000003d [0x7ffb72256a60] 4a 89 7c c4 40                     mov	qword ptr [rsp+8*r8+0x40], rdi		# S8MemReg, SymRef [#504 +64]
0x7ffba4d8a9da 00000042 [0x7ffb72256af0] 41 83 e8 01                        sub	r8d, 0x00000001	# SUB4RegImms
0x7ffba4d8a9de 00000046 [0x7ffb72256b80] 73 f5                              jae	Label L0323			# JAE1
0x7ffba4d8a9e0 00000048 [0x7ffb722557e0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8a9e0 00000048 [0x7ffb72176780]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a9e0 00000048 [0x7ffb72176530]                                    Label L0032:			# LABEL
0x7ffba4d8a9e0 00000048 [0x7ffb722433a0] 48 8b ce                           mov	rcx, rsi		# MOV8RegReg
0x7ffba4d8a9e3 0000004b [0x7ffb72243310] 48 8b f8                           mov	rdi, rax		# MOV8RegReg
========================================
0x7ffba4d8a9e6 0000004e [0x7ffb72176800]                                    Fence Relative [ 00007FFB72050690 ]	# FENCE BBStart <block_2> (frequency 10000)
0x7ffba4d8a9e6 0000004e [0x7ffb721774c0]                                    Label L0034:			# LABEL	# (Start of internal control flow)
0x7ffba4d8a9e6 0000004e [0x7ffb721775f0] 4c 8d 05 13 56 27 5b               lea	r8, qword ptr [Snippet Label L0033 : 0x7ffba4d8adbb]		# LEA8RegMem
0x7ffba4d8a9ed 00000055 [0x7ffb72177710] 49 83 78 10 ff                     cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#406 +16]
0x7ffba4d8a9f2 0000005a [0x7ffb722421a0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8a9f2 0000005a [0x7ffb721777a0] 0f 84 08 56 27 5b                  je	Outlined Label L0036			# JE4
0x7ffba4d8a9f8 00000060 [0x7ffb72178370]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a9f8 00000060 [0x7ffb72178120]                                    Label L0035:			# LABEL	# (End of internal control flow)
0x7ffba4d8a9f8 00000060 [0x7ffb722420f0] 48 8b f7                           mov	rsi, rdi		# MOV8RegReg
0x7ffba4d8a9fb 00000063 [0x7ffb72178510]                                    Label L0038:			# LABEL	# (Start of internal control flow)
0x7ffba4d8a9fb 00000063 [0x7ffb721786c0] 8b 3e                              mov	edi, dword ptr [rsi]		# L4RegMem
0x7ffba4d8a9fd 00000065 [0x7ffb72178750] 81 e7 00 ff ff ff                  and	edi, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8aa03 0000006b [0x7ffb72178870] 66 f7 47 24 00 01                  test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#410 +36]
0x7ffba4d8aa09 00000071 [0x7ffb72240ec0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8aa09 00000071 [0x7ffb72178900] 0f 85 f1 55 27 5b                  jne	Outlined Label L0040			# JNE4
0x7ffba4d8aa0f 00000077 [0x7ffb72179230]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa0f 00000077 [0x7ffb72178fe0]                                    Label L0039:			# LABEL	# (End of internal control flow)
0x7ffba4d8aa0f 00000077 [0x7ffb72240e10] 48 87 f1                           xchg	rcx, rsi		# XCHG8RegReg
0x7ffba4d8aa12 0000007a [0x7ffb72240d80] 48 8b c1                           mov	rax, rcx		# MOV8RegReg
0x7ffba4d8aa15 0000007d [0x7ffb721796a0] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aa18 00000080 [0x7ffb72179610] e8 b6 03 00 00 00                  mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.override Z[#412  unresolved volatile Shadow] [flags 0x2601 0x0 ]
0x7ffba4d8aa1e 00000086 [0x7ffb72179740] 66 90                              nop (2 bytes)		# Padding (2 bytes)
0x7ffba4d8aa20 00000088 [0x7ffb72179e50] 85 c9                              test	ecx, ecx		# TEST4RegReg
0x7ffba4d8aa22 0000008a [0x7ffb7217a220]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa22 0000008a [0x7ffb72179fd0] 0f 84 d8 55 27 5b                  je	Label L0016			# JE4
0x7ffba4d8aa28 00000090 [0x7ffb7217a410]                                    Fence Relative [ 00007FFB72050694 ]	# FENCE BBEnd </block_2>
........................................
0x7ffba4d8aa28 00000090 [0x7ffb7217a530]                                    Fence Relative [ 00007FFB72146D50 ]	# FENCE BBStart <block_14> (frequency 9238) (extension of previous block)
0x7ffba4d8aa28 00000090 [0x7ffb7217a680]                                    Fence Relative [ 00007FFB72146D54 ]	# FENCE BBEnd </block_14>
0x7ffba4d8aa28 00000090 [0x7ffb7217a8c0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa28 00000090 [0x7ffb7217ace0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa28 00000090 [0x7ffb7217aa90]                                    Label L0048:			# LABEL
0x7ffba4d8aa28 00000090 [0x7ffb7217b570]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa28 00000090 [0x7ffb7217b320]                                    Label L0019:			# LABEL
0x7ffba4d8aa28 00000090 [0x7ffb72240bf0] 48 8b ce                           mov	rcx, rsi		# MOV8RegReg
0x7ffba4d8aa2b 00000093 [0x7ffb72240b60] 48 8b f8                           mov	rdi, rax		# MOV8RegReg
========================================
0x7ffba4d8aa2e 00000096 [0x7ffb7217b5f0]                                    Fence Relative [ 00007FFB720501D0 ]	# FENCE BBStart <block_7> (frequency 9726)
0x7ffba4d8aa2e 00000096 [0x7ffb7217bfa0]                                    Label L0065:			# LABEL	# (Start of internal control flow)
0x7ffba4d8aa2e 00000096 [0x7ffb7217c0d0] 4c 8d 05 cb 55 27 5b               lea	r8, qword ptr [Snippet Label L0064 : 0x7ffba4d8aded]		# LEA8RegMem
0x7ffba4d8aa35 0000009d [0x7ffb7217c1f0] 49 83 78 10 ff                     cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#415 +16]
0x7ffba4d8aa3a 000000a2 [0x7ffb7223f9f0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8aa3a 000000a2 [0x7ffb7217c280] 0f 84 c0 55 27 5b                  je	Outlined Label L0067			# JE4
0x7ffba4d8aa40 000000a8 [0x7ffb7217cca0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa40 000000a8 [0x7ffb7217ca50]                                    Label L0066:			# LABEL	# (End of internal control flow)
0x7ffba4d8aa40 000000a8 [0x7ffb7223f940] 48 8b f7                           mov	rsi, rdi		# MOV8RegReg
0x7ffba4d8aa43 000000ab [0x7ffb7217ce40]                                    Label L0069:			# LABEL	# (Start of internal control flow)
0x7ffba4d8aa43 000000ab [0x7ffb7217cff0] 8b 3e                              mov	edi, dword ptr [rsi]		# L4RegMem
0x7ffba4d8aa45 000000ad [0x7ffb7217d080] 81 e7 00 ff ff ff                  and	edi, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8aa4b 000000b3 [0x7ffb7217d1a0] 66 f7 47 24 00 01                  test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#418 +36]
0x7ffba4d8aa51 000000b9 [0x7ffb7223e710]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8aa51 000000b9 [0x7ffb7217d230] 0f 85 a9 55 27 5b                  jne	Outlined Label L0071			# JNE4
0x7ffba4d8aa57 000000bf [0x7ffb7217dad0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa57 000000bf [0x7ffb7217d880]                                    Label L0070:			# LABEL	# (End of internal control flow)
0x7ffba4d8aa57 000000bf [0x7ffb7223e660] 48 87 f1                           xchg	rcx, rsi		# XCHG8RegReg
0x7ffba4d8aa5a 000000c2 [0x7ffb7223e5d0] 48 8b c1                           mov	rax, rcx		# MOV8RegReg
0x7ffba4d8aa5d 000000c5 [0x7ffb7217de40] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aa60 000000c8 [0x7ffb7217ddb0] e8 a0 03 00 00 00                  mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#420  unresolved volatile Shadow] [flags 0x2607 0x0 ]
0x7ffba4d8aa66 000000ce [0x7ffb7217dee0] 66 90                              nop (2 bytes)		# Padding (2 bytes)
0x7ffba4d8aa68 000000d0 [0x7ffb7217dff0] 48 8d 1c cd 00 00 00 00            lea	rbx, qword ptr [8*rcx]		# LEA8RegMem
0x7ffba4d8aa70 000000d8 [0x7ffb7217e9c0] 48 89 5c 24 60                     mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#421  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8aa75 000000dd [0x7ffb7217ecd0] 48 85 db                           test	rbx, rbx		# TEST8RegReg
0x7ffba4d8aa78 000000e0 [0x7ffb7217f0a0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa78 000000e0 [0x7ffb7217ee50] 0f 84 82 55 27 5b                  je	Label L0017			# JE4
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f2f0]                                    Fence Relative [ 00007FFB720501D4 ]	# FENCE BBEnd </block_7>
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f530]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f950]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f700]                                    Label L0074:			# LABEL
0x7ffba4d8aa7e 000000e6 [0x7ffb72180260]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa7e 000000e6 [0x7ffb72180010]                                    Label L0020:			# LABEL
========================================
0x7ffba4d8aa7e 000000e6 [0x7ffb721802e0]                                    Fence Relative [ 00007FFB72050560 ]	# FENCE BBStart <block_9> (frequency 9726)
0x7ffba4d8aa7e 000000e6 [0x7ffb72181480] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7ffba4d8aa81 000000e9 [0x7ffb72181620] 44 8b 0b                           mov	r9d, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
0x7ffba4d8aa84 000000ec [0x7ffb721816b0] 49 81 e1 00 ff ff ff               and	r9, 0xffffffffffffff00	# AND8RegImm4
0x7ffba4d8aa8b 000000f3 [0x7ffb72183470]                                    Label L0080:			# LABEL	# (Start of internal control flow)
0x7ffba4d8aa8b 000000f3 [0x7ffb72181a70] 0f 1f 44 00 00                     nop (5 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aa90 000000f8 [0x7ffb721819d0] e8 3b c4 6b 1e 00 00 00 00 00      mov	rbx, 0x0000000000000000	# MOV8RegImm64
0x7ffba4d8aa9a 00000102 [0x7ffb72181b10] 49 3b d9                           cmp	rbx, r9		# CMP8RegReg
0x7ffba4d8aa9d 00000105 [0x7ffb72181ba0] 75 61                              jne	Label L0083			# JNE1
0x7ffba4d8aa9f 00000107 [0x7ffb72181c40] e8 0c c6 6b 1e                     call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
0x7ffba4d8aaa4 0000010c [0x7ffb72181ce0] eb 5a                              jmp	Label L0081			# JMP1
0x7ffba4d8aaa6 0000010e [0x7ffb72181d80]                                    Label L0083:			# LABEL
0x7ffba4d8aaa6 0000010e [0x7ffb72182060] 66 90                              nop (2 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aaa8 00000110 [0x7ffb72181fc0] e8 23 c5 6b 1e 00 00 00 00 00      mov	rbx, 0x0000000000000000	# MOV8RegImm64
0x7ffba4d8aab2 0000011a [0x7ffb72182100] 49 3b d9                           cmp	rbx, r9		# CMP8RegReg
0x7ffba4d8aab5 0000011d [0x7ffb72182190] 75 49                              jne	Label L0096			# JNE1
0x7ffba4d8aab7 0000011f [0x7ffb72182230] e8 f4 c5 6b 1e                     call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
0x7ffba4d8aabc 00000124 [0x7ffb721822d0] eb 42                              jmp	Label L0081			# JMP1
0x7ffba4d8aabe 00000126 [0x7ffb721824b0]                                    Label L0097:			# LABEL
0x7ffba4d8aabe 00000126 [0x7ffb72182550] 41 b8 78 01 00 00                  mov	r8d, 0x00000178	# MOV4RegImm4
0x7ffba4d8aac4 0000012c [0x7ffb72182670] 4c 2b 47 18                        sub	r8, qword ptr [rdi+0x18]		# SUB8RegMem, SymRef [#423 +24]
0x7ffba4d8aac8 00000130 [0x7ffb72182790] 43 ff a4 01 00 00 00 00            jmp	dword ptr [r9+1*r8]		# JMPMem
0x7ffba4d8aad0 00000138 [0x7ffb72182820]                                    Label L0096:			# LABEL
0x7ffba4d8aad0 00000138 [0x7ffb72182950] 49 8b 79 60                        mov	rdi, qword ptr [r9+0x60]		# L8RegMem, SymRef [#425 +96]
0x7ffba4d8aad4 0000013c [0x7ffb72182a70] 81 3f 00 57 0a 00                  cmp	dword ptr [rdi], 0x000a5700	# CMP4MemImm4
0x7ffba4d8aada 00000142 [0x7ffb72182b00] 0f 85 20 55 27 5b                  jne	Snippet Label L0084		# JNE4	# (IPic Data)
0x7ffba4d8aae0 00000148 [0x7ffb72182df0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aae0 00000148 [0x7ffb72182ba0] e8 d9 ff ff ff                     call	Label L0097			# CALLImm4
0x7ffba4d8aae5 0000014d [0x7ffb72183760]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aae5 0000014d [0x7ffb72183510]                                    Label L0081:			# LABEL	# (End of internal control flow)
0x7ffba4d8aae5 0000014d [0x7ffb72184440]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aae5 0000014d [0x7ffb722585a0] 4c 8b 4c 24 38                     mov	r9, qword ptr [rsp+0x38]		# L8RegMem, SymRef [#505 +56]
0x7ffba4d8aaea 00000152 [0x7ffb722586c0] 48 8b 5c 24 30                     mov	rbx, qword ptr [rsp+0x30]		# L8RegMem, SymRef [#506 +48]
0x7ffba4d8aaef 00000157 [0x7ffb72258750] 48 83 c4 78                        add	rsp, 0x00000078	# ADD8RegImms
0x7ffba4d8aaf3 0000015b [0x7ffb72184210] c3                                 ret                             # RET
0x7ffba4d8aaf4 0000015c [0x7ffb72184580]                                    Fence Relative [ 00007FFB72050564 ]	# FENCE BBEnd </block_9>
0x7ffba4d8aaf4 0000015c [0x7ffb721847c0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aaf4 0000015c [0x7ffb721848a0]                                    Label L0098:			# LABEL
0x7ffba4d8aaf4 0000015c [0x7ffb721850f0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aaf4 0000015c [0x7ffb72184ea0]                                    Label L0016:			# LABEL
0x7ffba4d8aaf4 0000015c [0x7ffb7223e0f0] 48 89 54 24 68                     mov	qword ptr [rsp+0x68], rdx		# S8MemReg, #SPILL8, SymRef  <#SPILL8_493 0x7ffb72237290>[#493  Auto +104] [flags 0x80000000 0x0 ]
0x7ffba4d8aaf9 00000161 [0x7ffb7223df90] 48 89 74 24 70                     mov	qword ptr [rsp+0x70], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_492 0x7ffb72238ed0>[#492  Auto +112] [flags 0x80000000 0x0 ]
0x7ffba4d8aafe 00000166 [0x7ffb7223de30] 4c 8b c8                           mov	r9, rax		# MOV8RegReg
========================================
0x7ffba4d8ab01 00000169 [0x7ffb72185170]                                    Fence Relative [ 00007FFB720509E0 ]	# FENCE BBStart <block_3> (frequency 785)
0x7ffba4d8ab01 00000169 [0x7ffb72186570]                                    Label L0112:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab01 00000169 [0x7ffb72185ed0] 0f 1f 80 00 00 00 00               nop (7 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ab08 00000170 [0x7ffb72185e30] e8 f3 54 27 5b                     call	Snippet Label L0114     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8ab0d 00000175 [0x7ffb72186860]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab0d 00000175 [0x7ffb72186610]                                    Label L0113:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab0d 00000175 [0x7ffb7223dd40] 48 8b d8                           mov	rbx, rax		# MOV8RegReg
0x7ffba4d8ab10 00000178 [0x7ffb72186d80] 48 89 5c 24 60                     mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#428  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8ab15 0000017d [0x7ffb72187990]                                    Label L0129:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab15 0000017d [0x7ffb72187ac0] 48 8d 0d e4 54 27 5b               lea	rcx, qword ptr [Snippet Label L0128 : 0x7ffba4d8ae61]		# LEA8RegMem
0x7ffba4d8ab1c 00000184 [0x7ffb72187be0] 48 83 79 10 ff                     cmp	qword ptr [rcx+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#431 +16]
0x7ffba4d8ab21 00000189 [0x7ffb7223bb00]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8ab21 00000189 [0x7ffb72187c70] 0f 84 d9 54 27 5b                  je	Outlined Label L0131			# JE4
0x7ffba4d8ab27 0000018f [0x7ffb721886d0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab27 0000018f [0x7ffb72188480]                                    Label L0130:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab27 0000018f [0x7ffb7223ba50] 49 8b f1                           mov	rsi, r9		# MOV8RegReg
0x7ffba4d8ab2a 00000192 [0x7ffb72188870]                                    Label L0133:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab2a 00000192 [0x7ffb72188a20] 8b 0e                              mov	ecx, dword ptr [rsi]		# L4RegMem
0x7ffba4d8ab2c 00000194 [0x7ffb72188ab0] 81 e1 00 ff ff ff                  and	ecx, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8ab32 0000019a [0x7ffb72188bd0] 66 f7 41 24 00 01                  test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#434 +36]
0x7ffba4d8ab38 000001a0 [0x7ffb7223a7a0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8ab38 000001a0 [0x7ffb72188c60] 0f 85 c2 54 27 5b                  jne	Outlined Label L0135			# JNE4
0x7ffba4d8ab3e 000001a6 [0x7ffb72189500]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab3e 000001a6 [0x7ffb721892b0]                                    Label L0134:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab3e 000001a6 [0x7ffb72189870] 66 90                              nop (2 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ab40 000001a8 [0x7ffb721897e0] e8 34 03 00 00 00                  mov	eax, dword ptr [rsi-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.clazz Ljava/lang/Class;[#436  unresolved volatile Shadow] [flags 0x2607 0x0 ]
0x7ffba4d8ab46 000001ae [0x7ffb72189910] 66 90                              nop (2 bytes)		# Padding (2 bytes)
0x7ffba4d8ab48 000001b0 [0x7ffb72189a20] 48 8d 04 c5 00 00 00 00            lea	rax, qword ptr [8*rax]		# LEA8RegMem
0x7ffba4d8ab50 000001b8 [0x7ffb7218a310] 48 89 74 24 58                     mov	qword ptr [rsp+0x58], rsi		# S8MemReg, SymRef  <pending push temp 0>[#437  Auto +88] [flags 0x7 0x800 ]
0x7ffba4d8ab55 000001bd [0x7ffb7218a6a0] 48 89 5c 24 50                     mov	qword ptr [rsp+0x50], rbx		# S8MemReg, SymRef  <pending push temp 1>[#438  Auto +80] [flags 0x7 0x800 ]
0x7ffba4d8ab5a 000001c2 [0x7ffb7218aac0] 48 89 44 24 48                     mov	qword ptr [rsp+0x48], rax		# S8MemReg, SymRef  <pending push temp 2>[#439  Auto +72] [flags 0x7 0x800 ]
0x7ffba4d8ab5f 000001c7 [0x7ffb7218b000]                                    Label L0139:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab5f 000001c7 [0x7ffb7218b1b0] 8b 0e                              mov	ecx, dword ptr [rsi]		# L4RegMem
0x7ffba4d8ab61 000001c9 [0x7ffb7218b240] 81 e1 00 ff ff ff                  and	ecx, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8ab67 000001cf [0x7ffb7218b360] 66 f7 41 24 00 01                  test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#441 +36]
0x7ffba4d8ab6d 000001d5 [0x7ffb72239450]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8ab6d 000001d5 [0x7ffb7218b3f0] 0f 85 8d 54 27 5b                  jne	Outlined Label L0141			# JNE4
0x7ffba4d8ab73 000001db [0x7ffb7218bc90]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab73 000001db [0x7ffb7218ba40]                                    Label L0140:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab73 000001db [0x7ffb722393a0] 4c 8b ce                           mov	r9, rsi		# MOV8RegReg
0x7ffba4d8ab76 000001de [0x7ffb7218be20] 41 8b 41 50                        mov	eax, dword ptr [r9+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#443  Shadow +80] [flags 0x80603 0x0 ]
0x7ffba4d8ab7a 000001e2 [0x7ffb7218d280]                                    Label L0143:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab7a 000001e2 [0x7ffb7218cbe0] 66 0f 1f 44 00 00                  nop (6 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ab80 000001e8 [0x7ffb7218cb40] e8 7b 54 27 5b                     call	Snippet Label L0145     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8ab85 000001ed [0x7ffb7218d570]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab85 000001ed [0x7ffb7218d320]                                    Label L0144:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab85 000001ed [0x7ffb72239290] 49 87 c1                           xchg	r9, rax		# XCHG8RegReg
0x7ffba4d8ab88 000001f0 [0x7ffb722391a0] 4c 8b 44 24 48                     mov	r8, qword ptr [rsp+0x48]		# L8RegMem ; $REMAT, SymRef  <pending push temp 2>[#491  Auto +72] [flags 0x7 0x800 ]
0x7ffba4d8ab8d 000001f5 [0x7ffb72239040] 48 8b 74 24 70                     mov	rsi, qword ptr [rsp+0x70]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_490 0x7ffb72238ed0>[#490  Auto +112] [flags 0x80000000 0x0 ]#, spilled for icall
0x7ffba4d8ab92 000001fa [0x7ffb72238e00] 48 8b 54 24 68                     mov	rdx, qword ptr [rsp+0x68]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_488 0x7ffb72237290>[#488  Auto +104] [flags 0x80000000 0x0 ]#, spilled for icall
0x7ffba4d8ab97 000001ff [0x7ffb72238ce0] 49 8b c9                           mov	rcx, r9		# MOV8RegReg
0x7ffba4d8ab9a 00000202 [0x7ffb7218db00] 85 c9                              test	ecx, ecx		# TEST4RegReg
0x7ffba4d8ab9c 00000204 [0x7ffb7218dfc0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab9c 00000204 [0x7ffb7218dd00] 0f 85 5e 54 27 5b                  jne	Label L0018			# JNE4
0x7ffba4d8aba2 0000020a [0x7ffb7218e210]                                    Fence Relative [ 00007FFB720509E4 ]	# FENCE BBEnd </block_3>
........................................
0x7ffba4d8aba2 0000020a [0x7ffb7218e330]                                    Fence Relative [ 00007FFB72050300 ]	# FENCE BBStart <block_5> (frequency 766) (extension of previous block)
0x7ffba4d8aba2 0000020a [0x7ffb7218e5f0] 8b 0e                              mov	ecx, dword ptr [rsi]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
0x7ffba4d8aba4 0000020c [0x7ffb7218e680] 48 81 e1 00 ff ff ff               and	rcx, 0xffffffffffffff00	# AND8RegImm4
0x7ffba4d8abab 00000213 [0x7ffb7218ea20] 48 8b 79 30                        mov	rdi, qword ptr [rcx+0x30]		# L8RegMem, SymRef  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]
0x7ffba4d8abaf 00000217 [0x7ffb7218ed00] 48 89 7c 24 40                     mov	qword ptr [rsp+0x40], rdi		# S8MemReg, SymRef  <pending push temp 3>[#447  Auto +64] [flags 0x7 0x800 ]
0x7ffba4d8abb4 0000021c [0x7ffb7218f010]                                    Fence Relative [ 00007FFB72050304 ]	# FENCE BBEnd </block_5>
0x7ffba4d8abb4 0000021c [0x7ffb7218f250]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abb4 0000021c [0x7ffb7218f740]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abb4 0000021c [0x7ffb7218f4f0]                                    Label L0160:			# LABEL
0x7ffba4d8abb4 0000021c [0x7ffb72220510]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abb4 0000021c [0x7ffb722202c0]                                    Label L0021:			# LABEL
0x7ffba4d8abb4 0000021c [0x7ffb72238ab0] 4c 8b ca                           mov	r9, rdx		# MOV8RegReg
0x7ffba4d8abb7 0000021f [0x7ffb72238a20] 48 8b cf                           mov	rcx, rdi		# MOV8RegReg
0x7ffba4d8abba 00000222 [0x7ffb72238990] 49 8b d0                           mov	rdx, r8		# MOV8RegReg
0x7ffba4d8abbd 00000225 [0x7ffb72238900] 48 89 74 24 68                     mov	qword ptr [rsp+0x68], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_487 0x7ffb72237290>[#487  Auto +104] [flags 0x80000000 0x0 ]
0x7ffba4d8abc2 0000022a [0x7ffb722387a0] 48 8b f0                           mov	rsi, rax		# MOV8RegReg
========================================
0x7ffba4d8abc5 0000022d [0x7ffb72220590]                                    Fence Relative [ 00007FFB72050430 ]	# FENCE BBStart <block_6> (frequency 785)
0x7ffba4d8abc5 0000022d [0x7ffb72220ed0]                                    Label L0177:			# LABEL	# (Start of internal control flow)
0x7ffba4d8abc5 0000022d [0x7ffb72221080] 44 8b 16                           mov	r10d, dword ptr [rsi]		# L4RegMem
0x7ffba4d8abc8 00000230 [0x7ffb72221110] 41 81 e2 00 ff ff ff               and	r10d, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8abcf 00000237 [0x7ffb72221230] 66 41 f7 42 24 00 01               test	word ptr [r10+0x24], 0x0100	# TEST2MemImm2, SymRef [#449 +36]
0x7ffba4d8abd6 0000023e [0x7ffb72237620]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8abd6 0000023e [0x7ffb722212c0] 0f 85 24 54 27 5b                  jne	Outlined Label L0179			# JNE4
0x7ffba4d8abdc 00000244 [0x7ffb72221ba0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abdc 00000244 [0x7ffb72221950]                                    Label L0178:			# LABEL	# (End of internal control flow)
0x7ffba4d8abdc 00000244 [0x7ffb72237570] 48 87 f3                           xchg	rbx, rsi		# XCHG8RegReg
0x7ffba4d8abdf 00000247 [0x7ffb72221d30] 44 8b 53 50                        mov	r10d, dword ptr [rbx+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#451  Shadow +80] [flags 0x80603 0x0 ]
0x7ffba4d8abe3 0000024b [0x7ffb72222920] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7ffba4d8abe6 0000024e [0x7ffb72222a40] 4c 89 14 24                        mov	qword ptr [rsp], r10		# S8MemReg
0x7ffba4d8abea 00000252 [0x7ffb722233c0]                                    Label L0181:			# LABEL	# (Start of internal control flow)
0x7ffba4d8abea 00000252 [0x7ffb72222d20] 66 0f 1f 44 00 00                  nop (6 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8abf0 00000258 [0x7ffb72222c80] e8 0b 54 27 5b                     call	Snippet Label L0183     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8abf5 0000025d [0x7ffb722236b0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abf5 0000025d [0x7ffb72223460]                                    Label L0182:			# LABEL	# (End of internal control flow)
0x7ffba4d8abf5 0000025d [0x7ffb72237400] 48 8b 74 24 68                     mov	rsi, qword ptr [rsp+0x68]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_486 0x7ffb72237290>[#486  Auto +104] [flags 0x80000000 0x0 ]#, spilled for call
0x7ffba4d8abfa 00000262 [0x7ffb72237200] 49 8b d1                           mov	rdx, r9		# MOV8RegReg
0x7ffba4d8abfd 00000265 [0x7ffb72237170] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7ffba4d8ac00 00000268 [0x7ffb72223b40]                                    Fence Relative [ 00007FFB72050434 ]	# FENCE BBEnd </block_6>
........................................
0x7ffba4d8ac00 00000268 [0x7ffb72223c60]                                    Fence Relative [ 00007FFB7215B1B0 ]	# FENCE BBStart <block_12> (frequency 785) (extension of previous block)
0x7ffba4d8ac00 00000268 [0x7ffb722240f0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac00 00000268 [0x7ffb72223ea0] e9 23 fe ff ff                     jmp	Label L0019			# JMP4
0x7ffba4d8ac05 0000026d [0x7ffb72224260]                                    Fence Relative [ 00007FFB7215B1B4 ]	# FENCE BBEnd </block_12>
0x7ffba4d8ac05 0000026d [0x7ffb722244a0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac05 0000026d [0x7ffb72224580]                                    Label L0192:			# LABEL
0x7ffba4d8ac05 0000026d [0x7ffb72224dd0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac05 0000026d [0x7ffb72224b80]                                    Label L0017:			# LABEL
0x7ffba4d8ac05 0000026d [0x7ffb72237010] 4c 8b ca                           mov	r9, rdx		# MOV8RegReg
0x7ffba4d8ac08 00000270 [0x7ffb72236f80] 48 8b de                           mov	rbx, rsi		# MOV8RegReg
========================================
0x7ffba4d8ac0b 00000273 [0x7ffb72224e50]                                    Fence Relative [ 00007FFB72071210 ]	# FENCE BBStart <block_8> (frequency 180)
0x7ffba4d8ac0b 00000273 [0x7ffb72226a50]                                    Label L0208:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ac0b 00000273 [0x7ffb72225bb0] 0f 1f 44 00 00                     nop (5 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ac10 00000278 [0x7ffb72225b10] e8 eb 53 27 5b                     call	Snippet Label L0210     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8ac15 0000027d [0x7ffb72226d40]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac15 0000027d [0x7ffb72226af0]                                    Label L0209:			# LABEL	# (End of internal control flow)
0x7ffba4d8ac15 0000027d [0x7ffb72236e70] 48 8b f3                           mov	rsi, rbx		# MOV8RegReg
0x7ffba4d8ac18 00000280 [0x7ffb72236de0] 49 8b d1                           mov	rdx, r9		# MOV8RegReg
0x7ffba4d8ac1b 00000283 [0x7ffb72236d50] 48 8b d8                           mov	rbx, rax		# MOV8RegReg
0x7ffba4d8ac1e 00000286 [0x7ffb722272c0] 48 89 5c 24 60                     mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#455  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8ac23 0000028b [0x7ffb72227510]                                    Fence Relative [ 00007FFB72071214 ]	# FENCE BBEnd </block_8>
........................................
0x7ffba4d8ac23 0000028b [0x7ffb72227630]                                    Fence Relative [ 00007FFB7215B3A0 ]	# FENCE BBStart <block_13> (frequency 180) (extension of previous block)
0x7ffba4d8ac23 0000028b [0x7ffb72227b60]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac23 0000028b [0x7ffb722278a0] e9 56 fe ff ff                     jmp	Label L0020			# JMP4
0x7ffba4d8ac28 00000290 [0x7ffb72227d00]                                    Fence Relative [ 00007FFB7215B3A4 ]	# FENCE BBEnd </block_13>
0x7ffba4d8ac28 00000290 [0x7ffb72227f40]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac28 00000290 [0x7ffb72228020]                                    Label L0224:			# LABEL
0x7ffba4d8ac28 00000290 [0x7ffb72228b50]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac28 00000290 [0x7ffb72228900]                                    Label L0018:			# LABEL
========================================
0x7ffba4d8ac28 00000290 [0x7ffb72228bd0]                                    Fence Relative [ 00007FFB72070EB0 ]	# FENCE BBStart <block_4> (frequency 24)
0x7ffba4d8ac28 00000290 [0x7ffb72229270] 48 c7 44 24 40 00 00 00 00         mov	qword ptr [rsp+0x40], 0x00000000	# S8MemImm4, SymRef  <pending push temp 3>[#456  Auto +64] [flags 0x7 0x800 ]
0x7ffba4d8ac31 00000299 [0x7ffb72229540] 33 ff                              xor	edi, edi		# XOR4RegReg
0x7ffba4d8ac33 0000029b [0x7ffb72229b90]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac33 0000029b [0x7ffb722298d0] e9 7c ff ff ff                     jmp	Label L0021			# JMP4
0x7ffba4d8ac38 000002a0 [0x7ffb72229d30]                                    Fence Relative [ 00007FFB72070EB4 ]	# FENCE BBEnd </block_4>
0x7ffba4d8ac38 000002a0 [0x7ffb72229f70]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac38 000002a0 [0x7ffb7222a050]                                    Label L0240:			# LABEL
0x7ffba4d8ac38 000002a0 [0x7ffb7222a260]                                    Label L0256:			# LABEL
========================================
0x7ffba4d8ac38 000002a0 [0x7ffb7222a300]                                    Fence Relative [ 00007FFB720A0250 ]	# FENCE BBStart <block_10> (frequency 0) (catches ...) (cold)
0x7ffba4d8ac38 000002a0 [0x7ffb7222a470]                                    Fence Relative [ 00007FFB720A0254 ]	# FENCE BBEnd </block_10>
........................................
0x7ffba4d8ac38 000002a0 [0x7ffb7222a590]                                    Fence Relative [ 00007FFB72147000 ]	# FENCE BBStart <block_15> (frequency 0) (extension of previous block) (cold)
0x7ffba4d8ac38 000002a0 [0x7ffb7222a850] 48 8b 84 24 90 00 00 00            mov	rax, qword ptr [rsp+0x90]		# L8RegMem, SymRef  this<'this' parm Ljava/lang/reflect/Method;>[#457  Parm +144] [flags 0xc0000107 0x0 ]
0x7ffba4d8ac40 000002a8 [0x7ffb7222ac50] 48 8b b4 24 88 00 00 00            mov	rsi, qword ptr [rsp+0x88]		# L8RegMem, SymRef  obj<parm 1 Ljava/lang/Object;>[#458  Parm +136] [flags 0xc0000107 0x0 ]
0x7ffba4d8ac48 000002b0 [0x7ffb7222b050] 48 8b 94 24 80 00 00 00            mov	rdx, qword ptr [rsp+0x80]		# L8RegMem, SymRef  args<parm 2 [Ljava/lang/Object;>[#459  Parm +128] [flags 0xc0000107 0x0 ]
0x7ffba4d8ac50 000002b8 [0x7ffb7222b370]                                    Fence Relative [ 00007FFB72147004 ]	# FENCE BBEnd </block_15>
0x7ffba4d8ac50 000002b8 [0x7ffb7222b5b0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac50 000002b8 [0x7ffb7222b9d0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac50 000002b8 [0x7ffb7222b780]                                    Label L0272:			# LABEL
0x7ffba4d8ac50 000002b8 [0x7ffb7222c380]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac50 000002b8 [0x7ffb7222c130]                                    Label L0288:			# LABEL
========================================
0x7ffba4d8ac50 000002b8 [0x7ffb7222c400]                                    Fence Relative [ 00007FFB720A0120 ]	# FENCE BBStart <block_11> (frequency 0) (cold)
0x7ffba4d8ac50 000002b8 [0x7ffb7222cb50] 4c 8b 44 24 58                     mov	r8, qword ptr [rsp+0x58]		# L8RegMem, SymRef  <pending push temp 0>[#460  Auto +88] [flags 0x7 0x800 ]
0x7ffba4d8ac55 000002bd [0x7ffb7222cd80] 8b 8d 5c 01 00 00                  mov	ecx, dword ptr [rbp+0x15c]		# L4RegMem, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
0x7ffba4d8ac5b 000002c3 [0x7ffb7222cf20] 44 8d 51 58                        lea	r10d, dword ptr [rcx+0x58]		# LEA4RegMem, SymRef [#463 +88]
0x7ffba4d8ac5f 000002c7 [0x7ffb7222cfb0] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac62 000002ca [0x7ffb7222d150] 48 8b bd 68 09 00 00               mov	rdi, qword ptr [rbp+0x968]		# L8RegMem, SymRef  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]
0x7ffba4d8ac69 000002d1 [0x7ffb7222d1e0] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8ac6e 000002d6 [0x7ffb7222da90] 4c 8b 44 24 50                     mov	r8, qword ptr [rsp+0x50]		# L8RegMem, SymRef  <pending push temp 1>[#465  Auto +80] [flags 0x7 0x800 ]
0x7ffba4d8ac73 000002db [0x7ffb7222dcc0] 44 8d 51 50                        lea	r10d, dword ptr [rcx+0x50]		# LEA4RegMem, SymRef [#467 +80]
0x7ffba4d8ac77 000002df [0x7ffb7222dd50] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac7a 000002e2 [0x7ffb7222dde0] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8ac7f 000002e7 [0x7ffb7222e4d0] 4c 8b 44 24 48                     mov	r8, qword ptr [rsp+0x48]		# L8RegMem, SymRef  <pending push temp 2>[#468  Auto +72] [flags 0x7 0x800 ]
0x7ffba4d8ac84 000002ec [0x7ffb7222e700] 44 8d 51 48                        lea	r10d, dword ptr [rcx+0x48]		# LEA4RegMem, SymRef [#470 +72]
0x7ffba4d8ac88 000002f0 [0x7ffb7222e790] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac8b 000002f3 [0x7ffb7222e820] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8ac90 000002f8 [0x7ffb7222ef10] 4c 8b 44 24 40                     mov	r8, qword ptr [rsp+0x40]		# L8RegMem, SymRef  <pending push temp 3>[#471  Auto +64] [flags 0x7 0x800 ]
0x7ffba4d8ac95 000002fd [0x7ffb7222f140] 44 8d 51 40                        lea	r10d, dword ptr [rcx+0x40]		# LEA4RegMem, SymRef [#473 +64]
0x7ffba4d8ac99 00000301 [0x7ffb7222f1d0] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac9c 00000304 [0x7ffb7222f260] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8aca1 00000309 [0x7ffb7222f930] 44 8d 41 78                        lea	r8d, dword ptr [rcx+0x78]		# LEA4RegMem, SymRef [#475 +120]
0x7ffba4d8aca5 0000030d [0x7ffb7222f9c0] 4d 63 c0                           movsxd	r8, r8d		# MOVSXReg8Reg4
0x7ffba4d8aca8 00000310 [0x7ffb7222fa50] 49 89 44 38 00                     mov	qword ptr [r8+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acad 00000315 [0x7ffb72230000] 8d 41 70                           lea	eax, dword ptr [rcx+0x70]		# LEA4RegMem, SymRef [#477 +112]
0x7ffba4d8acb0 00000318 [0x7ffb72230090] 48 63 c0                           movsxd	rax, eax		# MOVSXReg8Reg4
0x7ffba4d8acb3 0000031b [0x7ffb72230120] 48 89 74 38 00                     mov	qword ptr [rax+1*rdi], rsi		# S8MemReg, SymRef  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acb8 00000320 [0x7ffb72230670] 8d 41 68                           lea	eax, dword ptr [rcx+0x68]		# LEA4RegMem, SymRef [#479 +104]
0x7ffba4d8acbb 00000323 [0x7ffb72230700] 48 63 c0                           movsxd	rax, eax		# MOVSXReg8Reg4
0x7ffba4d8acbe 00000326 [0x7ffb72230790] 48 89 54 38 00                     mov	qword ptr [rax+1*rdi], rdx		# S8MemReg, SymRef  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acc3 0000032b [0x7ffb72230d00] 48 8b 44 24 60                     mov	rax, qword ptr [rsp+0x60]		# L8RegMem, SymRef  caller<auto slot 3>[#480  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8acc8 00000330 [0x7ffb72230f30] 8d 51 60                           lea	edx, dword ptr [rcx+0x60]		# LEA4RegMem, SymRef [#482 +96]
0x7ffba4d8accb 00000333 [0x7ffb72230fc0] 48 63 d2                           movsxd	rdx, edx		# MOVSXReg8Reg4
0x7ffba4d8acce 00000336 [0x7ffb72231050] 48 89 44 3a 00                     mov	qword ptr [rdx+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acd3 0000033b [0x7ffb72231520] 83 e9 80                           sub	ecx, 0xffffffffffffff80	# SUB4RegImms
0x7ffba4d8acd6 0000033e [0x7ffb72231640] 89 8d 5c 01 00 00                  mov	dword ptr [rbp+0x15c], ecx		# S4MemReg, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
0x7ffba4d8acdc 00000344 [0x7ffb722319c0] 48 8b 85 70 09 00 00               mov	rax, qword ptr [rbp+0x970]		# L8RegMem, SymRef  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]
0x7ffba4d8ace3 0000034b [0x7ffb72231a50] ff e0                              jmp	eax			# JMPReg
0x7ffba4d8ace5 0000034d [0x7ffb72231c50]                                    Fence Relative [ 00007FFB720A0124 ]	# FENCE BBEnd </block_11>
0x7ffba4d8ace5 0000034d [0x7ffb72231e90]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ace5 0000034d [0x7ffb72231f70]                                    Label L0304:			# LABEL
0x7ffba4d8ace5 0000034d [0x7ffb72238570]                                    vfpRestore [0x7ffb72237620]			# AdjustFramePtr
0x7ffba4d8ace5 0000034d [0x7ffb72221490]                                    Outlined Label L0179:			# LABEL
0x7ffba4d8ace5 0000034d [0x7ffb72221680] 48 8d 05 14 53 27 5b               lea	rax, qword ptr [Snippet Label L0176 : 0x7ffba4d8aebe]		# LEA8RegMem
0x7ffba4d8acec 00000354 [0x7ffb72221710] e8 0f 99 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8acf1 00000359 [0x7ffb722217b0] e9 e6 fe ff ff                     jmp	Label L0178			# JMP4
0x7ffba4d8acf6 0000035e [0x7ffb722218b0]                                    Label L0180:			# LABEL
0x7ffba4d8acf6 0000035e [0x7ffb7223a4e0]                                    vfpRestore [0x7ffb72239450]			# AdjustFramePtr
0x7ffba4d8acf6 0000035e [0x7ffb7218b5c0]                                    Outlined Label L0141:			# LABEL
0x7ffba4d8acf6 0000035e [0x7ffb7218b770] 48 8d 05 03 53 27 5b               lea	rax, qword ptr [Snippet Label L0138 : 0x7ffba4d8ae93]		# LEA8RegMem
0x7ffba4d8acfd 00000365 [0x7ffb7218b800] e8 fe 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad02 0000036a [0x7ffb7218b8a0] e9 6c fe ff ff                     jmp	Label L0140			# JMP4
0x7ffba4d8ad07 0000036f [0x7ffb7218b9a0]                                    Label L0142:			# LABEL
0x7ffba4d8ad07 0000036f [0x7ffb7223b830]                                    vfpRestore [0x7ffb7223a7a0]			# AdjustFramePtr
0x7ffba4d8ad07 0000036f [0x7ffb72188e30]                                    Outlined Label L0135:			# LABEL
0x7ffba4d8ad07 0000036f [0x7ffb72188fe0] 48 8d 05 f2 52 27 5b               lea	rax, qword ptr [Snippet Label L0128 : 0x7ffba4d8ae61]		# LEA8RegMem
0x7ffba4d8ad0e 00000376 [0x7ffb72189070] e8 ed 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad13 0000037b [0x7ffb72189110] e9 26 fe ff ff                     jmp	Label L0134			# JMP4
0x7ffba4d8ad18 00000380 [0x7ffb72189210]                                    Label L0136:			# LABEL
0x7ffba4d8ad18 00000380 [0x7ffb7223db10]                                    vfpRestore [0x7ffb7223bb00]			# AdjustFramePtr
0x7ffba4d8ad18 00000380 [0x7ffb72187d80]                                    Outlined Label L0131:			# LABEL
0x7ffba4d8ad18 00000380 [0x7ffb72187f60] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad22 0000038a [0x7ffb72188000] 48 c7 c6 0f 00 00 00               mov	rsi, 0x0000000f	# MOV8RegImm4
0x7ffba4d8ad29 00000391 [0x7ffb72188090] e8 f2 e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad2e 00000396 [0x7ffb72188130] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ad35 0000039d [0x7ffb72188250] 48 89 41 10                        mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
0x7ffba4d8ad39 000003a1 [0x7ffb721882e0] e9 e9 fd ff ff                     jmp	Label L0130			# JMP4
0x7ffba4d8ad3e 000003a6 [0x7ffb721883e0]                                    Label L0132:			# LABEL
0x7ffba4d8ad3e 000003a6 [0x7ffb7223f720]                                    vfpRestore [0x7ffb7223e710]			# AdjustFramePtr
0x7ffba4d8ad3e 000003a6 [0x7ffb7217d400]                                    Outlined Label L0071:			# LABEL
0x7ffba4d8ad3e 000003a6 [0x7ffb7217d5b0] 48 8d 05 bb 52 27 5b               lea	rax, qword ptr [Snippet Label L0064 : 0x7ffba4d8aded]		# LEA8RegMem
0x7ffba4d8ad45 000003ad [0x7ffb7217d640] e8 b6 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad4a 000003b2 [0x7ffb7217d6e0] e9 08 fd ff ff                     jmp	Label L0070			# JMP4
0x7ffba4d8ad4f 000003b7 [0x7ffb7217d7e0]                                    Label L0072:			# LABEL
0x7ffba4d8ad4f 000003b7 [0x7ffb72240980]                                    vfpRestore [0x7ffb7223f9f0]			# AdjustFramePtr
0x7ffba4d8ad4f 000003b7 [0x7ffb7217c390]                                    Outlined Label L0067:			# LABEL
0x7ffba4d8ad4f 000003b7 [0x7ffb7217c530] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad59 000003c1 [0x7ffb7217c5d0] 48 c7 c6 1e 00 00 00               mov	rsi, 0x0000001e	# MOV8RegImm4
0x7ffba4d8ad60 000003c8 [0x7ffb7217c660] e8 bb e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad65 000003cd [0x7ffb7217c700] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ad6c 000003d4 [0x7ffb7217c820] 49 89 40 10                        mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
0x7ffba4d8ad70 000003d8 [0x7ffb7217c8b0] e9 cb fc ff ff                     jmp	Label L0066			# JMP4
0x7ffba4d8ad75 000003dd [0x7ffb7217c9b0]                                    Label L0068:			# LABEL
0x7ffba4d8ad75 000003dd [0x7ffb72241ed0]                                    vfpRestore [0x7ffb72240ec0]			# AdjustFramePtr
0x7ffba4d8ad75 000003dd [0x7ffb72178ad0]                                    Outlined Label L0040:			# LABEL
0x7ffba4d8ad75 000003dd [0x7ffb72178c80] 48 8d 05 84 52 27 5b               lea	rax, qword ptr [Snippet Label L0033 : 0x7ffba4d8adbb]		# LEA8RegMem
0x7ffba4d8ad7c 000003e4 [0x7ffb72178da0] e8 7f 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad81 000003e9 [0x7ffb72178e40] e9 89 fc ff ff                     jmp	Label L0039			# JMP4
0x7ffba4d8ad86 000003ee [0x7ffb72178f40]                                    Label L0041:			# LABEL
0x7ffba4d8ad86 000003ee [0x7ffb72243130]                                    vfpRestore [0x7ffb722421a0]			# AdjustFramePtr
0x7ffba4d8ad86 000003ee [0x7ffb721778b0]                                    Outlined Label L0036:			# LABEL
0x7ffba4d8ad86 000003ee [0x7ffb72177b70] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad90 000003f8 [0x7ffb72177c10] 48 c7 c6 45 00 00 00               mov	rsi, 0x00000045	# MOV8RegImm4
0x7ffba4d8ad97 000003ff [0x7ffb72177d30] e8 84 e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad9c 00000404 [0x7ffb72177dd0] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ada3 0000040b [0x7ffb72177ef0] 49 89 40 10                        mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
0x7ffba4d8ada7 0000040f [0x7ffb72177f80] e9 4c fc ff ff                     jmp	Label L0035			# JMP4
0x7ffba4d8adac 00000414 [0x7ffb72178080]                                    Label L0037:			# LABEL
0x7ffba4d8adac 00000414 [0x7ffb72256080]                                    vfpRestore [0x7ffb72255bd0]			# AdjustFramePtr
0x7ffba4d8adac 00000414 [0x7ffb72256110]                                    Outlined Label L0322:			# LABEL
0x7ffba4d8adac 00000414 [0x7ffb722561b0] bf 78 00 00 00                     mov	edi, 0x00000078	# MOV4RegImm4
0x7ffba4d8adb1 00000419 [0x7ffb722562d0] e8 2a 80 b7 1e                     call	jitStackOverflow        # CALLImm4 (00007FFBC3902DE0)# CALLImm4
0x7ffba4d8adb6 0000041e [0x7ffb72256370] e9 05 fc ff ff                     jmp	Label L0321			# JMP4
------------ start out-of-line instructions

0x7ffba4d8ace5 0000034d [0x7ffb72221490]                                    Outlined Label L0179:			# LABEL
0x7ffba4d8ace5 0000034d [0x7ffb72221680] 48 8d 05 14 53 27 5b               lea	rax, qword ptr [Snippet Label L0176 : 0x7ffba4d8aebe]		# LEA8RegMem
0x7ffba4d8acec 00000354 [0x7ffb72221710] e8 0f 99 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8acf1 00000359 [0x7ffb722217b0] e9 e6 fe ff ff                     jmp	Label L0178			# JMP4
0x7ffba4d8acf6 0000035e [0x7ffb722218b0]                                    Label L0180:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8acf6 0000035e [0x7ffb7218b5c0]                                    Outlined Label L0141:			# LABEL
0x7ffba4d8acf6 0000035e [0x7ffb7218b770] 48 8d 05 03 53 27 5b               lea	rax, qword ptr [Snippet Label L0138 : 0x7ffba4d8ae93]		# LEA8RegMem
0x7ffba4d8acfd 00000365 [0x7ffb7218b800] e8 fe 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad02 0000036a [0x7ffb7218b8a0] e9 6c fe ff ff                     jmp	Label L0140			# JMP4
0x7ffba4d8ad07 0000036f [0x7ffb7218b9a0]                                    Label L0142:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad07 0000036f [0x7ffb72188e30]                                    Outlined Label L0135:			# LABEL
0x7ffba4d8ad07 0000036f [0x7ffb72188fe0] 48 8d 05 f2 52 27 5b               lea	rax, qword ptr [Snippet Label L0128 : 0x7ffba4d8ae61]		# LEA8RegMem
0x7ffba4d8ad0e 00000376 [0x7ffb72189070] e8 ed 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad13 0000037b [0x7ffb72189110] e9 26 fe ff ff                     jmp	Label L0134			# JMP4
0x7ffba4d8ad18 00000380 [0x7ffb72189210]                                    Label L0136:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad18 00000380 [0x7ffb72187d80]                                    Outlined Label L0131:			# LABEL
0x7ffba4d8ad18 00000380 [0x7ffb72187f60] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad22 0000038a [0x7ffb72188000] 48 c7 c6 0f 00 00 00               mov	rsi, 0x0000000f	# MOV8RegImm4
0x7ffba4d8ad29 00000391 [0x7ffb72188090] e8 f2 e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad2e 00000396 [0x7ffb72188130] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ad35 0000039d [0x7ffb72188250] 48 89 41 10                        mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
0x7ffba4d8ad39 000003a1 [0x7ffb721882e0] e9 e9 fd ff ff                     jmp	Label L0130			# JMP4
0x7ffba4d8ad3e 000003a6 [0x7ffb721883e0]                                    Label L0132:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad3e 000003a6 [0x7ffb7217d400]                                    Outlined Label L0071:			# LABEL
0x7ffba4d8ad3e 000003a6 [0x7ffb7217d5b0] 48 8d 05 bb 52 27 5b               lea	rax, qword ptr [Snippet Label L0064 : 0x7ffba4d8aded]		# LEA8RegMem
0x7ffba4d8ad45 000003ad [0x7ffb7217d640] e8 b6 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad4a 000003b2 [0x7ffb7217d6e0] e9 08 fd ff ff                     jmp	Label L0070			# JMP4
0x7ffba4d8ad4f 000003b7 [0x7ffb7217d7e0]                                    Label L0072:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad4f 000003b7 [0x7ffb7217c390]                                    Outlined Label L0067:			# LABEL
0x7ffba4d8ad4f 000003b7 [0x7ffb7217c530] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad59 000003c1 [0x7ffb7217c5d0] 48 c7 c6 1e 00 00 00               mov	rsi, 0x0000001e	# MOV8RegImm4
0x7ffba4d8ad60 000003c8 [0x7ffb7217c660] e8 bb e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad65 000003cd [0x7ffb7217c700] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ad6c 000003d4 [0x7ffb7217c820] 49 89 40 10                        mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
0x7ffba4d8ad70 000003d8 [0x7ffb7217c8b0] e9 cb fc ff ff                     jmp	Label L0066			# JMP4
0x7ffba4d8ad75 000003dd [0x7ffb7217c9b0]                                    Label L0068:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad75 000003dd [0x7ffb72178ad0]                                    Outlined Label L0040:			# LABEL
0x7ffba4d8ad75 000003dd [0x7ffb72178c80] 48 8d 05 84 52 27 5b               lea	rax, qword ptr [Snippet Label L0033 : 0x7ffba4d8adbb]		# LEA8RegMem
0x7ffba4d8ad7c 000003e4 [0x7ffb72178da0] e8 7f 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad81 000003e9 [0x7ffb72178e40] e9 89 fc ff ff                     jmp	Label L0039			# JMP4
0x7ffba4d8ad86 000003ee [0x7ffb72178f40]                                    Label L0041:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad86 000003ee [0x7ffb721778b0]                                    Outlined Label L0036:			# LABEL
0x7ffba4d8ad86 000003ee [0x7ffb72177b70] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad90 000003f8 [0x7ffb72177c10] 48 c7 c6 45 00 00 00               mov	rsi, 0x00000045	# MOV8RegImm4
0x7ffba4d8ad97 000003ff [0x7ffb72177d30] e8 84 e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad9c 00000404 [0x7ffb72177dd0] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ada3 0000040b [0x7ffb72177ef0] 49 89 40 10                        mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
0x7ffba4d8ada7 0000040f [0x7ffb72177f80] e9 4c fc ff ff                     jmp	Label L0035			# JMP4
0x7ffba4d8adac 00000414 [0x7ffb72178080]                                    Label L0037:			# LABEL
------------ end out-of-line instructions

</instructions>
<snippets>

00007FFBA4D8ADBB 00000423                                                 Snippet Label L0033:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8adbb 00000423                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8adc3 0000042b                      01 00 00 00 00 00 00 00        DC   	1 		# location
0x7ffba4d8adcb 00000433                      ff ff ff ff ff ff ff ff        DC   	4294967295 		# offset

00007FFBA4D8ADD3 0000043b                                                 Snippet Label L0042:		# Unresolved Data Snippet for instr [0x7ffb72179610]
0x7ffba4d8add3 0000043b                      e8 a8 d4 6b 1e                 call	interpreterUnresolvedFieldGlue
0x7ffba4d8add8 00000440                      70 71 07 00 00 00 00 00        .quad	0000000000077170	# address of constant pool for this method
0x7ffba4d8ade0 00000448                      45 00 00 00                    .int	0x00000045				# constant pool index
0x7ffba4d8ade4 0000044c                      62                             .byte	62							# instruction descriptor: length=6, disp32 offset=2
0x7ffba4d8ade5 0000044d                      8b 88 00 00 00 00 66 90        .byte	(8)						# patch instruction bytes

00007FFBA4D8ADED 00000455                                                 Snippet Label L0064:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8aded 00000455                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8adf5 0000045d                      2b 00 00 00 00 00 00 00        DC   	43 		# location
0x7ffba4d8adfd 00000465                      ff ff ff ff ff ff ff ff        DC   	4294967295 		# offset

00007FFBA4D8AE05 0000046d                                                 Snippet Label L0073:		# Unresolved Data Snippet for instr [0x7ffb7217ddb0]
0x7ffba4d8ae05 0000046d                      e8 76 d4 6b 1e                 call	interpreterUnresolvedFieldGlue
0x7ffba4d8ae0a 00000472                      70 71 07 00 00 00 00 00        .quad	0000000000077170	# address of constant pool for this method
0x7ffba4d8ae12 0000047a                      1e 00 00 00                    .int	0x0000001e				# constant pool index
0x7ffba4d8ae16 0000047e                      62                             .byte	62							# instruction descriptor: length=6, disp32 offset=2
0x7ffba4d8ae17 0000047f                      8b 88 00 00 00 00 66 90        .byte	(8)						# patch instruction bytes

00007FFBA4D8AE26 0000048e                                                 Snippet Label L0084:		# IPic Data
0x7ffba4d8ae26 0000048e                      e8 e5 c3 6b 1e                 call	IPicLookupDispatch 		# 00007FFBC3447210
0x7ffba4d8ae2b 00000493                      e9 b5 fc ff ff                 jmp	Label L0081
0x7ffba4d8ae30 00000498                      70 71 07 00 00 00 00 00        DQ	0000000000077170		# owning method cpAddr
0x7ffba4d8ae38 000004a0                      4a 00 00 00 00 00 00 00        DQ	000000000000004A		# cpIndex
0x7ffba4d8ae40 000004a8                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# interface class (initially null)
0x7ffba4d8ae48 000004b0                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# itable offset (initially zero)
0x7ffba4d8ae50 000004b8                      48                             .byte	0x48								# REX of MOVRegImm64
0x7ffba4d8ae51 000004b9                      bb                             .byte	bb								# MOV opcode of MOVRegImm64

00007FFBA4D8AE52 000004ba                                                 Snippet Label L0114:		# Call Snippet
0x7ffba4d8ae52 000004ba                      48 bf f8 99 05 00 00 00 00 00  mov 	rdi, 0x599f8		# MOV8RegImm64
0x7ffba4d8ae5c 000004c4                      e9 df cb 6b 1e                 jmp 	interpreterLongStaticGlue		# jump out of snippet code

00007FFBA4D8AE61 000004c9                                                 Snippet Label L0128:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8ae61 000004c9                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8ae69 000004d1                      0e 00 00 00 00 00 00 00        DC   	14 		# location
0x7ffba4d8ae71 000004d9                      ff ff ff ff ff ff ff ff        DC   	4294967295 		# offset

00007FFBA4D8AE79 000004e1                                                 Snippet Label L0137:		# Unresolved Data Snippet for instr [0x7ffb721897e0]
0x7ffba4d8ae79 000004e1                      e8 02 d4 6b 1e                 call	interpreterUnresolvedFieldGlue
0x7ffba4d8ae7e 000004e6                      70 71 07 00 00 00 00 00        .quad	0000000000077170	# address of constant pool for this method
0x7ffba4d8ae86 000004ee                      0f 00 00 00                    .int	0x0000000f				# constant pool index
0x7ffba4d8ae8a 000004f2                      62                             .byte	62							# instruction descriptor: length=6, disp32 offset=2
0x7ffba4d8ae8b 000004f3                      8b 86 00 00 00 00 66 90        .byte	(8)						# patch instruction bytes

00007FFBA4D8AE93 000004fb                                                 Snippet Label L0138:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8ae93 000004fb                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8ae9b 00000503                      12 00 00 00 00 00 00 00        DC   	18 		# location
0x7ffba4d8aea3 0000050b                      4c 00 00 00 00 00 00 00        DC   	76 		# offset

00007FFBA4D8AEAB 00000513                                                 Snippet Label L0145:		# Call Snippet
0x7ffba4d8aeab 00000513                      89 44 24 08                    mov 	dword ptr[rsp+8], eax		#save registers for interpreter call snippet
0x7ffba4d8aeaf 00000517                      48 bf e8 90 0f 00 00 00 00 00  mov 	rdi, 0xf90e8		# MOV8RegImm64
0x7ffba4d8aeb9 00000521                      e9 82 cb 6b 1e                 jmp 	interpreterIntStaticGlue		# jump out of snippet code

00007FFBA4D8AEBE 00000526                                                 Snippet Label L0176:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8aebe 00000526                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8aec6 0000052e                      24 00 00 00 00 00 00 00        DC   	36 		# location
0x7ffba4d8aece 00000536                      4c 00 00 00 00 00 00 00        DC   	76 		# offset

00007FFBA4D8AED6 0000053e                                                 Snippet Label L0183:		# Call Snippet
0x7ffba4d8aed6 0000053e                      48 89 44 24 28                 mov 	qword ptr[rsp+40], rax		#save registers for interpreter call snippet
0x7ffba4d8aedb 00000543                      48 89 74 24 20                 mov 	qword ptr[rsp+32], rsi		#save registers for interpreter call snippet
0x7ffba4d8aee0 00000548                      48 89 54 24 18                 mov 	qword ptr[rsp+24], rdx		#save registers for interpreter call snippet
0x7ffba4d8aee5 0000054d                      48 89 4c 24 10                 mov 	qword ptr[rsp+16], rcx		#save registers for interpreter call snippet
0x7ffba4d8aeea 00000552                      48 bf c0 42                    mov 	dword ptr[rsp+8], 		#save registers for interpreter call snippet
0x7ffba4d8aeee 00000556                      07 00 00 00 00 00 e9 47 cb 6b  mov 	rdi, 0x742c0		# MOV8RegImm64
0x7ffba4d8aef8 00000560                      1e 48 89 44 24                 jmp 	interpreterVoidStaticGlue		# jump out of snippet code

00007FFBA4D8AEF9 00000561                                                 Snippet Label L0210:		# Call Snippet
0x7ffba4d8aef9 00000561                      48 89 44 24 08                 mov 	qword ptr[rsp+8], rax		#save registers for interpreter call snippet
0x7ffba4d8aefe 00000566                      48 bf d8 84 07 00 00 00 00 00  mov 	rdi, 0x784d8		# MOV8RegImm64
0x7ffba4d8af08 00000570                      e9 33 cb 6b 1e                 jmp 	interpreterLongStaticGlue		# jump out of snippet code
</snippets>

<atlas>

Internal stack atlas:
  numberOfMaps=32
  numberOfSlotsMapped=10
  numberOfParmSlots=3
  parmBaseOffset=8
  localBaseOffset=-56

  Locals information : 
  Local [0x7ffb720057f0] (GC map index :   2, Offset :  24, Size : 8) is an uninitialized collected parm 
  Local [0x7ffb720059f0] (GC map index :   1, Offset :  16, Size : 8) is an uninitialized collected parm 
  Local [0x7ffb72005ac0] (GC map index :   0, Offset :   8, Size : 8) is an uninitialized collected parm 
  Local [0x7ffb72238ed0] (GC map index :   9, Offset :  -8, Size : 8) is an uninitialized uncollected auto 
  Local [0x7ffb72237290] (GC map index :   8, Offset : -16, Size : 8) is an uninitialized uncollected auto 
  Local [0x7ffb72071460] (GC map index :   3, Offset : -56, Size : 8) is an uninitialized collected auto 
  Local [0x7ffb72070860] (GC map index :   4, Offset : -48, Size : 8) is an uninitialized collected auto 
  Local [0x7ffb720706b0] (GC map index :   5, Offset : -40, Size : 8) is an uninitialized collected auto 
  Local [0x7ffb720705c0] (GC map index :   6, Offset : -32, Size : 8) is an uninitialized collected auto 
  Local [0x7ffb72070310] (GC map index :   7, Offset : -24, Size : 8) is an uninitialized collected auto 
  Local [0x7ffb72238ed0] (GC map index :   9, Offset :  -8, Size : 8) is an uninitialized uncollected spill auto 
  Local [0x7ffb72237290] (GC map index :   8, Offset : -16, Size : 8) is an uninitialized uncollected spill auto 

  No internal pointers in this method

  Map number : 1
  Code offset range starts at [00000492]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 2
  Code offset range starts at [00000419]
  GC stack map information : 
    number of stack slots mapped = 3
    live stack slots containing addresses --> {0,1,2}
  GC register map information : 
    slot pushes: 0    registers: {eax edx esi }

  Map number : 3
  Code offset range starts at [000003ff]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {ecx edx edi }

  Map number : 4
  Code offset range starts at [000003e4]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {ecx edx esi }

  Map number : 5
  Code offset range starts at [000003c8]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {ecx edx edi }

  Map number : 6
  Code offset range starts at [000003ad]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {ecx edx esi }

  Map number : 7
  Code offset range starts at [00000391]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8,9}
  GC register map information : 
    slot pushes: 0    registers: {ebx r9d }

  Map number : 8
  Code offset range starts at [00000376]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8,9}
  GC register map information : 
    slot pushes: 0    registers: {ebx esi }

  Map number : 9
  Code offset range starts at [00000365]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8,9}
  GC register map information : 
    slot pushes: 0    registers: {ebx esi }

  Map number : 10
  Code offset range starts at [00000354]
  GC stack map information : 
    number of stack slots mapped = 9
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8}
  GC register map information : 
    slot pushes: 0    registers: {ebx ecx edx esi r9d }

  Map number : 11
  Code offset range starts at [000002a0]
  GC stack map information : 
    number of stack slots mapped = 8
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 12
  Code offset range starts at [00000278]
  GC stack map information : 
    number of stack slots mapped = 8
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {ebx r9d }

  Map number : 13
  Code offset range starts at [00000258]
  GC stack map information : 
    number of stack slots mapped = 9
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8}
  GC register map information : 
    slot pushes: 0    registers: {ebx r9d }

  Map number : 14
  Code offset range starts at [0000022d]
  GC stack map information : 
    number of stack slots mapped = 9
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8}
  GC register map information : 
    slot pushes: 0    registers: {ebx ecx edx esi r9d }

  Map number : 15
  Code offset range starts at [0000020a]
  GC stack map information : 
    number of stack slots mapped = 9
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {eax ebx edx esi r8d }

  Map number : 16
  Code offset range starts at [000001e8]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8,9}
  GC register map information : 
    slot pushes: 0    registers: {ebx r9d }

  Map number : 17
  Code offset range starts at [000001c7]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8,9}
  GC register map information : 
    slot pushes: 0    registers: {ebx esi }

  Map number : 18
  Code offset range starts at [000001a8]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8,9}
  GC register map information : 
    slot pushes: 0    registers: {ebx esi }

  Map number : 19
  Code offset range starts at [00000192]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8,9}
  GC register map information : 
    slot pushes: 0    registers: {ebx esi }

  Map number : 20
  Code offset range starts at [00000170]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7,8,9}
  GC register map information : 
    slot pushes: 0    registers: {r9d }

  Map number : 21
  Code offset range starts at [00000130]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 22
  Code offset range starts at [00000124]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 23
  Code offset range starts at [0000011f]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 24
  Code offset range starts at [00000110]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 25
  Code offset range starts at [0000010c]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 26
  Code offset range starts at [00000107]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 27
  Code offset range starts at [000000f8]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 28
  Code offset range starts at [000000e9]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {eax ebx edx esi }

  Map number : 29
  Code offset range starts at [000000c8]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {eax edx esi }

  Map number : 30
  Code offset range starts at [000000ab]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {ecx edx esi }

  Map number : 31
  Code offset range starts at [00000080]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {eax edx esi }

  Map number : 32
  Code offset range starts at [00000063]
  GC stack map information : 
    number of stack slots mapped = 10
    live stack slots containing addresses --> {0,1,2,3,4,5,6,7}
  GC register map information : 
    slot pushes: 0    registers: {ecx edx esi }


</atlas>
Map with code offset range starting at [00000192] is identical to the previous map [000001a8], merging and eliminating previous
Map with code offset range starting at [00000124] is identical to the previous map [00000130], merging and eliminating previous
Map with code offset range starting at [0000011f] is identical to the previous map [00000124], merging and eliminating previous
Map with code offset range starting at [00000110] is identical to the previous map [0000011f], merging and eliminating previous
Map with code offset range starting at [0000010c] is identical to the previous map [00000110], merging and eliminating previous
Map with code offset range starting at [00000107] is identical to the previous map [0000010c], merging and eliminating previous
Map with code offset range starting at [000000f8] is identical to the previous map [00000107], merging and eliminating previous

<instructions
	title="Post Relocation Instructions"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
	hotness="no-opt">

                 +--------------------------------------- instruction address
                 |        +----------------------------------------- instruction offset from start of method
                 |        |                   +------------------------------------------ corresponding TR::Instruction instance
                 |        |                   |  +-------------------------------------------------- code bytes
                 |        |                   |  |                          +-------------------------------------- opcode and operands
                 |        |                   |  |                          |				+----------- additional information
                 |        |                   |  |                          |				|
                 V        V                   V  V                          V				V
0x7ffba4d8a970 ffffffd8 [0x7ffb72174df0]                                    Label L0022:			# LABEL
0x7ffba4d8a970 ffffffd8 [0x7ffb72174f60] 48 bf 38 84 07 00 00 00 00 00      mov	rdi, 0x0000000000078438	# MOV8RegImm64
0x7ffba4d8a97a ffffffe2 [0x7ffb721752b0] 48 89 44 24 18                     mov	qword ptr [rsp+0x18], rax		# S8MemReg, SymRef [#402 +24]
0x7ffba4d8a97f ffffffe7 [0x7ffb721754f0] 48 89 74 24 10                     mov	qword ptr [rsp+0x10], rsi		# S8MemReg, SymRef [#403 +16]
0x7ffba4d8a984 ffffffec [0x7ffb72175730] 48 89 54 24 08                     mov	qword ptr [rsp+0x8], rdx		# S8MemReg, SymRef [#404 +8]
0x7ffba4d8a989 fffffff1 [0x7ffb72175a10]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a989 fffffff1 [0x7ffb721757c0] e9 e2 30 b8 1e                     jmp	j2iTransition           # JMP4 (00007FFBC390DA70)# JMP4
0x7ffba4d8a98e fffffff6 [0x7ffb72175a90] 66 90                              nop (2 bytes)		# Alignment (boundary=8, margin=8)
0x7ffba4d8a990 fffffff8 [0x7ffb72175b20] eb de                              jmp	Label L0022			# JMP1
0x7ffba4d8a992 fffffffa [0x7ffb72175bc0] cc cc                              .short	0xcccc		# DWImm2
0x7ffba4d8a994 fffffffc [0x7ffb72175c50] 05 00 0f 00                        .int	0x000f0005		# DDImm4
0x7ffba4d8a998 00000000 [0x7ffb72175f50]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a998 00000000 [0x7ffb72255470] 48 8b 44 24 18                     mov	rax, qword ptr [rsp+0x18]		# L8RegMem, SymRef [#494 +24]
0x7ffba4d8a99d 00000005 [0x7ffb72255590] 48 8b 74 24 10                     mov	rsi, qword ptr [rsp+0x10]		# L8RegMem, SymRef [#495 +16]
0x7ffba4d8a9a2 0000000a [0x7ffb722556b0] 48 8b 54 24 08                     mov	rdx, qword ptr [rsp+0x8]		# L8RegMem, SymRef [#496 +8]
0x7ffba4d8a9a7 0000000f [0x7ffb72255740]                                    nop (0 bytes)		# Align patchable code @32 [0x0:2]
0x7ffba4d8a9a7 0000000f [0x7ffb72175d20]                                    ProcEntry                       # PROCENTRY
0x7ffba4d8a9a7 0000000f [0x7ffb72255900] 48 89 44 24 18                     mov	qword ptr [rsp+0x18], rax		# S8MemReg, SymRef [#497 +24]
0x7ffba4d8a9ac 00000014 [0x7ffb72255a20] 48 89 74 24 10                     mov	qword ptr [rsp+0x10], rsi		# S8MemReg, SymRef [#498 +16]
0x7ffba4d8a9b1 00000019 [0x7ffb72255b40] 48 89 54 24 08                     mov	qword ptr [rsp+0x8], rdx		# S8MemReg, SymRef [#499 +8]
0x7ffba4d8a9b6 0000001e [0x7ffb72255bd0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8a9b6 0000001e [0x7ffb72255cf0] 48 3b 65 50                        cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#500 +80]
0x7ffba4d8a9ba 00000022 [0x7ffb72255ea0]                                    Label L0320:			# LABEL	# (Start of internal control flow)
0x7ffba4d8a9ba 00000022 [0x7ffb72255f40] 0f 86 ec 03 00 00                  jbe	Outlined Label L0322			# JBE4
0x7ffba4d8a9c0 00000028 [0x7ffb72255fe0]                                    Label L0321:			# LABEL	# (End of internal control flow)
0x7ffba4d8a9c0 00000028 [0x7ffb72256450] 48 83 ec 78                        sub	rsp, 0x00000078	# SUB8RegImms
0x7ffba4d8a9c4 0000002c [0x7ffb72256570] 4c 89 4c 24 38                     mov	qword ptr [rsp+0x38], r9		# S8MemReg, SymRef [#501 +56]
0x7ffba4d8a9c9 00000031 [0x7ffb72256690] 48 89 5c 24 30                     mov	qword ptr [rsp+0x30], rbx		# S8MemReg, SymRef [#502 +48]
0x7ffba4d8a9ce 00000036 [0x7ffb72256720] 48 33 ff                           xor	rdi, rdi		# XOR8RegReg
0x7ffba4d8a9d1 00000039 [0x7ffb72256840] 4c 8d 47 04                        lea	r8, qword ptr [rdi+0x4]		# LEA8RegMem, SymRef [#503 +4]
0x7ffba4d8a9d5 0000003d [0x7ffb72256930]                                    Label L0323:			# LABEL
0x7ffba4d8a9d5 0000003d [0x7ffb72256a60] 4a 89 7c c4 40                     mov	qword ptr [rsp+8*r8+0x40], rdi		# S8MemReg, SymRef [#504 +64]
0x7ffba4d8a9da 00000042 [0x7ffb72256af0] 41 83 e8 01                        sub	r8d, 0x00000001	# SUB4RegImms
0x7ffba4d8a9de 00000046 [0x7ffb72256b80] 73 f5                              jae	Label L0323			# JAE1
0x7ffba4d8a9e0 00000048 [0x7ffb722557e0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8a9e0 00000048 [0x7ffb72176780]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a9e0 00000048 [0x7ffb72176530]                                    Label L0032:			# LABEL
0x7ffba4d8a9e0 00000048 [0x7ffb722433a0] 48 8b ce                           mov	rcx, rsi		# MOV8RegReg
0x7ffba4d8a9e3 0000004b [0x7ffb72243310] 48 8b f8                           mov	rdi, rax		# MOV8RegReg
========================================
0x7ffba4d8a9e6 0000004e [0x7ffb72176800]                                    Fence Relative [ 00007FFB72050690 ]	# FENCE BBStart <block_2> (frequency 10000)
0x7ffba4d8a9e6 0000004e [0x7ffb721774c0]                                    Label L0034:			# LABEL	# (Start of internal control flow)
0x7ffba4d8a9e6 0000004e [0x7ffb721775f0] 4c 8d 05 ce 03 00 00               lea	r8, qword ptr [Snippet Label L0033 : 0x7ffba4d8adbb]		# LEA8RegMem
0x7ffba4d8a9ed 00000055 [0x7ffb72177710] 49 83 78 10 ff                     cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#406 +16]
0x7ffba4d8a9f2 0000005a [0x7ffb722421a0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8a9f2 0000005a [0x7ffb721777a0] 0f 84 8e 03 00 00                  je	Outlined Label L0036			# JE4
0x7ffba4d8a9f8 00000060 [0x7ffb72178370]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a9f8 00000060 [0x7ffb72178120]                                    Label L0035:			# LABEL	# (End of internal control flow)
0x7ffba4d8a9f8 00000060 [0x7ffb722420f0] 48 8b f7                           mov	rsi, rdi		# MOV8RegReg
0x7ffba4d8a9fb 00000063 [0x7ffb72178510]                                    Label L0038:			# LABEL	# (Start of internal control flow)
0x7ffba4d8a9fb 00000063 [0x7ffb721786c0] 8b 3e                              mov	edi, dword ptr [rsi]		# L4RegMem
0x7ffba4d8a9fd 00000065 [0x7ffb72178750] 81 e7 00 ff ff ff                  and	edi, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8aa03 0000006b [0x7ffb72178870] 66 f7 47 24 00 01                  test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#410 +36]
0x7ffba4d8aa09 00000071 [0x7ffb72240ec0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8aa09 00000071 [0x7ffb72178900] 0f 85 66 03 00 00                  jne	Outlined Label L0040			# JNE4
0x7ffba4d8aa0f 00000077 [0x7ffb72179230]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa0f 00000077 [0x7ffb72178fe0]                                    Label L0039:			# LABEL	# (End of internal control flow)
0x7ffba4d8aa0f 00000077 [0x7ffb72240e10] 48 87 f1                           xchg	rcx, rsi		# XCHG8RegReg
0x7ffba4d8aa12 0000007a [0x7ffb72240d80] 48 8b c1                           mov	rax, rcx		# MOV8RegReg
0x7ffba4d8aa15 0000007d [0x7ffb721796a0] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aa18 00000080 [0x7ffb72179610] e8 b6 03 00 00 00                  mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.override Z[#412  unresolved volatile Shadow] [flags 0x2601 0x0 ]
0x7ffba4d8aa1e 00000086 [0x7ffb72179740] 66 90                              nop (2 bytes)		# Padding (2 bytes)
0x7ffba4d8aa20 00000088 [0x7ffb72179e50] 85 c9                              test	ecx, ecx		# TEST4RegReg
0x7ffba4d8aa22 0000008a [0x7ffb7217a220]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa22 0000008a [0x7ffb72179fd0] 0f 84 cc 00 00 00                  je	Label L0016			# JE4
0x7ffba4d8aa28 00000090 [0x7ffb7217a410]                                    Fence Relative [ 00007FFB72050694 ]	# FENCE BBEnd </block_2>
........................................
0x7ffba4d8aa28 00000090 [0x7ffb7217a530]                                    Fence Relative [ 00007FFB72146D50 ]	# FENCE BBStart <block_14> (frequency 9238) (extension of previous block)
0x7ffba4d8aa28 00000090 [0x7ffb7217a680]                                    Fence Relative [ 00007FFB72146D54 ]	# FENCE BBEnd </block_14>
0x7ffba4d8aa28 00000090 [0x7ffb7217a8c0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa28 00000090 [0x7ffb7217ace0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa28 00000090 [0x7ffb7217aa90]                                    Label L0048:			# LABEL
0x7ffba4d8aa28 00000090 [0x7ffb7217b570]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa28 00000090 [0x7ffb7217b320]                                    Label L0019:			# LABEL
0x7ffba4d8aa28 00000090 [0x7ffb72240bf0] 48 8b ce                           mov	rcx, rsi		# MOV8RegReg
0x7ffba4d8aa2b 00000093 [0x7ffb72240b60] 48 8b f8                           mov	rdi, rax		# MOV8RegReg
========================================
0x7ffba4d8aa2e 00000096 [0x7ffb7217b5f0]                                    Fence Relative [ 00007FFB720501D0 ]	# FENCE BBStart <block_7> (frequency 9726)
0x7ffba4d8aa2e 00000096 [0x7ffb7217bfa0]                                    Label L0065:			# LABEL	# (Start of internal control flow)
0x7ffba4d8aa2e 00000096 [0x7ffb7217c0d0] 4c 8d 05 b8 03 00 00               lea	r8, qword ptr [Snippet Label L0064 : 0x7ffba4d8aded]		# LEA8RegMem
0x7ffba4d8aa35 0000009d [0x7ffb7217c1f0] 49 83 78 10 ff                     cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#415 +16]
0x7ffba4d8aa3a 000000a2 [0x7ffb7223f9f0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8aa3a 000000a2 [0x7ffb7217c280] 0f 84 0f 03 00 00                  je	Outlined Label L0067			# JE4
0x7ffba4d8aa40 000000a8 [0x7ffb7217cca0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa40 000000a8 [0x7ffb7217ca50]                                    Label L0066:			# LABEL	# (End of internal control flow)
0x7ffba4d8aa40 000000a8 [0x7ffb7223f940] 48 8b f7                           mov	rsi, rdi		# MOV8RegReg
0x7ffba4d8aa43 000000ab [0x7ffb7217ce40]                                    Label L0069:			# LABEL	# (Start of internal control flow)
0x7ffba4d8aa43 000000ab [0x7ffb7217cff0] 8b 3e                              mov	edi, dword ptr [rsi]		# L4RegMem
0x7ffba4d8aa45 000000ad [0x7ffb7217d080] 81 e7 00 ff ff ff                  and	edi, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8aa4b 000000b3 [0x7ffb7217d1a0] 66 f7 47 24 00 01                  test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#418 +36]
0x7ffba4d8aa51 000000b9 [0x7ffb7223e710]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8aa51 000000b9 [0x7ffb7217d230] 0f 85 e7 02 00 00                  jne	Outlined Label L0071			# JNE4
0x7ffba4d8aa57 000000bf [0x7ffb7217dad0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa57 000000bf [0x7ffb7217d880]                                    Label L0070:			# LABEL	# (End of internal control flow)
0x7ffba4d8aa57 000000bf [0x7ffb7223e660] 48 87 f1                           xchg	rcx, rsi		# XCHG8RegReg
0x7ffba4d8aa5a 000000c2 [0x7ffb7223e5d0] 48 8b c1                           mov	rax, rcx		# MOV8RegReg
0x7ffba4d8aa5d 000000c5 [0x7ffb7217de40] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aa60 000000c8 [0x7ffb7217ddb0] e8 a0 03 00 00 00                  mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#420  unresolved volatile Shadow] [flags 0x2607 0x0 ]
0x7ffba4d8aa66 000000ce [0x7ffb7217dee0] 66 90                              nop (2 bytes)		# Padding (2 bytes)
0x7ffba4d8aa68 000000d0 [0x7ffb7217dff0] 48 8d 1c cd 00 00 00 00            lea	rbx, qword ptr [8*rcx]		# LEA8RegMem
0x7ffba4d8aa70 000000d8 [0x7ffb7217e9c0] 48 89 5c 24 60                     mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#421  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8aa75 000000dd [0x7ffb7217ecd0] 48 85 db                           test	rbx, rbx		# TEST8RegReg
0x7ffba4d8aa78 000000e0 [0x7ffb7217f0a0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa78 000000e0 [0x7ffb7217ee50] 0f 84 87 01 00 00                  je	Label L0017			# JE4
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f2f0]                                    Fence Relative [ 00007FFB720501D4 ]	# FENCE BBEnd </block_7>
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f530]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f950]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f700]                                    Label L0074:			# LABEL
0x7ffba4d8aa7e 000000e6 [0x7ffb72180260]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa7e 000000e6 [0x7ffb72180010]                                    Label L0020:			# LABEL
========================================
0x7ffba4d8aa7e 000000e6 [0x7ffb721802e0]                                    Fence Relative [ 00007FFB72050560 ]	# FENCE BBStart <block_9> (frequency 9726)
0x7ffba4d8aa7e 000000e6 [0x7ffb72181480] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7ffba4d8aa81 000000e9 [0x7ffb72181620] 44 8b 0b                           mov	r9d, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
0x7ffba4d8aa84 000000ec [0x7ffb721816b0] 49 81 e1 00 ff ff ff               and	r9, 0xffffffffffffff00	# AND8RegImm4
0x7ffba4d8aa8b 000000f3 [0x7ffb72183470]                                    Label L0080:			# LABEL	# (Start of internal control flow)
0x7ffba4d8aa8b 000000f3 [0x7ffb72181a70] 0f 1f 44 00 00                     nop (5 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aa90 000000f8 [0x7ffb721819d0] e8 3b c4 6b 1e 00 00 00 00 00      mov	rbx, 0x0000000000000000	# MOV8RegImm64
0x7ffba4d8aa9a 00000102 [0x7ffb72181b10] 49 3b d9                           cmp	rbx, r9		# CMP8RegReg
0x7ffba4d8aa9d 00000105 [0x7ffb72181ba0] 75 07                              jne	Label L0083			# JNE1
0x7ffba4d8aa9f 00000107 [0x7ffb72181c40] e8 0c c6 6b 1e                     call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
0x7ffba4d8aaa4 0000010c [0x7ffb72181ce0] eb 3f                              jmp	Label L0081			# JMP1
0x7ffba4d8aaa6 0000010e [0x7ffb72181d80]                                    Label L0083:			# LABEL
0x7ffba4d8aaa6 0000010e [0x7ffb72182060] 66 90                              nop (2 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aaa8 00000110 [0x7ffb72181fc0] e8 23 c5 6b 1e 00 00 00 00 00      mov	rbx, 0x0000000000000000	# MOV8RegImm64
0x7ffba4d8aab2 0000011a [0x7ffb72182100] 49 3b d9                           cmp	rbx, r9		# CMP8RegReg
0x7ffba4d8aab5 0000011d [0x7ffb72182190] 75 19                              jne	Label L0096			# JNE1
0x7ffba4d8aab7 0000011f [0x7ffb72182230] e8 f4 c5 6b 1e                     call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
0x7ffba4d8aabc 00000124 [0x7ffb721822d0] eb 27                              jmp	Label L0081			# JMP1
0x7ffba4d8aabe 00000126 [0x7ffb721824b0]                                    Label L0097:			# LABEL
0x7ffba4d8aabe 00000126 [0x7ffb72182550] 41 b8 78 01 00 00                  mov	r8d, 0x00000178	# MOV4RegImm4
0x7ffba4d8aac4 0000012c [0x7ffb72182670] 4c 2b 47 18                        sub	r8, qword ptr [rdi+0x18]		# SUB8RegMem, SymRef [#423 +24]
0x7ffba4d8aac8 00000130 [0x7ffb72182790] 43 ff a4 01 00 00 00 00            jmp	dword ptr [r9+1*r8]		# JMPMem
0x7ffba4d8aad0 00000138 [0x7ffb72182820]                                    Label L0096:			# LABEL
0x7ffba4d8aad0 00000138 [0x7ffb72182950] 49 8b 79 60                        mov	rdi, qword ptr [r9+0x60]		# L8RegMem, SymRef [#425 +96]
0x7ffba4d8aad4 0000013c [0x7ffb72182a70] 81 3f 00 57 0a 00                  cmp	dword ptr [rdi], 0x000a5700	# CMP4MemImm4
0x7ffba4d8aada 00000142 [0x7ffb72182b00] 0f 85 46 03 00 00                  jne	Snippet Label L0084		# JNE4	# (IPic Data)
0x7ffba4d8aae0 00000148 [0x7ffb72182df0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aae0 00000148 [0x7ffb72182ba0] e8 d9 ff ff ff                     call	Label L0097			# CALLImm4
0x7ffba4d8aae5 0000014d [0x7ffb72183760]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aae5 0000014d [0x7ffb72183510]                                    Label L0081:			# LABEL	# (End of internal control flow)
0x7ffba4d8aae5 0000014d [0x7ffb72184440]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aae5 0000014d [0x7ffb722585a0] 4c 8b 4c 24 38                     mov	r9, qword ptr [rsp+0x38]		# L8RegMem, SymRef [#505 +56]
0x7ffba4d8aaea 00000152 [0x7ffb722586c0] 48 8b 5c 24 30                     mov	rbx, qword ptr [rsp+0x30]		# L8RegMem, SymRef [#506 +48]
0x7ffba4d8aaef 00000157 [0x7ffb72258750] 48 83 c4 78                        add	rsp, 0x00000078	# ADD8RegImms
0x7ffba4d8aaf3 0000015b [0x7ffb72184210] c3                                 ret                             # RET
0x7ffba4d8aaf4 0000015c [0x7ffb72184580]                                    Fence Relative [ 00007FFB72050564 ]	# FENCE BBEnd </block_9>
0x7ffba4d8aaf4 0000015c [0x7ffb721847c0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aaf4 0000015c [0x7ffb721848a0]                                    Label L0098:			# LABEL
0x7ffba4d8aaf4 0000015c [0x7ffb721850f0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aaf4 0000015c [0x7ffb72184ea0]                                    Label L0016:			# LABEL
0x7ffba4d8aaf4 0000015c [0x7ffb7223e0f0] 48 89 54 24 68                     mov	qword ptr [rsp+0x68], rdx		# S8MemReg, #SPILL8, SymRef  <#SPILL8_493 0x7ffb72237290>[#493  Auto +104] [flags 0x80000000 0x0 ]
0x7ffba4d8aaf9 00000161 [0x7ffb7223df90] 48 89 74 24 70                     mov	qword ptr [rsp+0x70], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_492 0x7ffb72238ed0>[#492  Auto +112] [flags 0x80000000 0x0 ]
0x7ffba4d8aafe 00000166 [0x7ffb7223de30] 4c 8b c8                           mov	r9, rax		# MOV8RegReg
========================================
0x7ffba4d8ab01 00000169 [0x7ffb72185170]                                    Fence Relative [ 00007FFB720509E0 ]	# FENCE BBStart <block_3> (frequency 785)
0x7ffba4d8ab01 00000169 [0x7ffb72186570]                                    Label L0112:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab01 00000169 [0x7ffb72185ed0] 0f 1f 80 00 00 00 00               nop (7 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ab08 00000170 [0x7ffb72185e30] e8 45 03 00 00                     call	Snippet Label L0114     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8ab0d 00000175 [0x7ffb72186860]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab0d 00000175 [0x7ffb72186610]                                    Label L0113:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab0d 00000175 [0x7ffb7223dd40] 48 8b d8                           mov	rbx, rax		# MOV8RegReg
0x7ffba4d8ab10 00000178 [0x7ffb72186d80] 48 89 5c 24 60                     mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#428  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8ab15 0000017d [0x7ffb72187990]                                    Label L0129:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab15 0000017d [0x7ffb72187ac0] 48 8d 0d 45 03 00 00               lea	rcx, qword ptr [Snippet Label L0128 : 0x7ffba4d8ae61]		# LEA8RegMem
0x7ffba4d8ab1c 00000184 [0x7ffb72187be0] 48 83 79 10 ff                     cmp	qword ptr [rcx+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#431 +16]
0x7ffba4d8ab21 00000189 [0x7ffb7223bb00]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8ab21 00000189 [0x7ffb72187c70] 0f 84 f1 01 00 00                  je	Outlined Label L0131			# JE4
0x7ffba4d8ab27 0000018f [0x7ffb721886d0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab27 0000018f [0x7ffb72188480]                                    Label L0130:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab27 0000018f [0x7ffb7223ba50] 49 8b f1                           mov	rsi, r9		# MOV8RegReg
0x7ffba4d8ab2a 00000192 [0x7ffb72188870]                                    Label L0133:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab2a 00000192 [0x7ffb72188a20] 8b 0e                              mov	ecx, dword ptr [rsi]		# L4RegMem
0x7ffba4d8ab2c 00000194 [0x7ffb72188ab0] 81 e1 00 ff ff ff                  and	ecx, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8ab32 0000019a [0x7ffb72188bd0] 66 f7 41 24 00 01                  test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#434 +36]
0x7ffba4d8ab38 000001a0 [0x7ffb7223a7a0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8ab38 000001a0 [0x7ffb72188c60] 0f 85 c9 01 00 00                  jne	Outlined Label L0135			# JNE4
0x7ffba4d8ab3e 000001a6 [0x7ffb72189500]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab3e 000001a6 [0x7ffb721892b0]                                    Label L0134:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab3e 000001a6 [0x7ffb72189870] 66 90                              nop (2 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ab40 000001a8 [0x7ffb721897e0] e8 34 03 00 00 00                  mov	eax, dword ptr [rsi-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.clazz Ljava/lang/Class;[#436  unresolved volatile Shadow] [flags 0x2607 0x0 ]
0x7ffba4d8ab46 000001ae [0x7ffb72189910] 66 90                              nop (2 bytes)		# Padding (2 bytes)
0x7ffba4d8ab48 000001b0 [0x7ffb72189a20] 48 8d 04 c5 00 00 00 00            lea	rax, qword ptr [8*rax]		# LEA8RegMem
0x7ffba4d8ab50 000001b8 [0x7ffb7218a310] 48 89 74 24 58                     mov	qword ptr [rsp+0x58], rsi		# S8MemReg, SymRef  <pending push temp 0>[#437  Auto +88] [flags 0x7 0x800 ]
0x7ffba4d8ab55 000001bd [0x7ffb7218a6a0] 48 89 5c 24 50                     mov	qword ptr [rsp+0x50], rbx		# S8MemReg, SymRef  <pending push temp 1>[#438  Auto +80] [flags 0x7 0x800 ]
0x7ffba4d8ab5a 000001c2 [0x7ffb7218aac0] 48 89 44 24 48                     mov	qword ptr [rsp+0x48], rax		# S8MemReg, SymRef  <pending push temp 2>[#439  Auto +72] [flags 0x7 0x800 ]
0x7ffba4d8ab5f 000001c7 [0x7ffb7218b000]                                    Label L0139:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab5f 000001c7 [0x7ffb7218b1b0] 8b 0e                              mov	ecx, dword ptr [rsi]		# L4RegMem
0x7ffba4d8ab61 000001c9 [0x7ffb7218b240] 81 e1 00 ff ff ff                  and	ecx, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8ab67 000001cf [0x7ffb7218b360] 66 f7 41 24 00 01                  test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#441 +36]
0x7ffba4d8ab6d 000001d5 [0x7ffb72239450]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8ab6d 000001d5 [0x7ffb7218b3f0] 0f 85 83 01 00 00                  jne	Outlined Label L0141			# JNE4
0x7ffba4d8ab73 000001db [0x7ffb7218bc90]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab73 000001db [0x7ffb7218ba40]                                    Label L0140:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab73 000001db [0x7ffb722393a0] 4c 8b ce                           mov	r9, rsi		# MOV8RegReg
0x7ffba4d8ab76 000001de [0x7ffb7218be20] 41 8b 41 50                        mov	eax, dword ptr [r9+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#443  Shadow +80] [flags 0x80603 0x0 ]
0x7ffba4d8ab7a 000001e2 [0x7ffb7218d280]                                    Label L0143:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab7a 000001e2 [0x7ffb7218cbe0] 66 0f 1f 44 00 00                  nop (6 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ab80 000001e8 [0x7ffb7218cb40] e8 26 03 00 00                     call	Snippet Label L0145     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8ab85 000001ed [0x7ffb7218d570]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab85 000001ed [0x7ffb7218d320]                                    Label L0144:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab85 000001ed [0x7ffb72239290] 49 87 c1                           xchg	r9, rax		# XCHG8RegReg
0x7ffba4d8ab88 000001f0 [0x7ffb722391a0] 4c 8b 44 24 48                     mov	r8, qword ptr [rsp+0x48]		# L8RegMem ; $REMAT, SymRef  <pending push temp 2>[#491  Auto +72] [flags 0x7 0x800 ]
0x7ffba4d8ab8d 000001f5 [0x7ffb72239040] 48 8b 74 24 70                     mov	rsi, qword ptr [rsp+0x70]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_490 0x7ffb72238ed0>[#490  Auto +112] [flags 0x80000000 0x0 ]#, spilled for icall
0x7ffba4d8ab92 000001fa [0x7ffb72238e00] 48 8b 54 24 68                     mov	rdx, qword ptr [rsp+0x68]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_488 0x7ffb72237290>[#488  Auto +104] [flags 0x80000000 0x0 ]#, spilled for icall
0x7ffba4d8ab97 000001ff [0x7ffb72238ce0] 49 8b c9                           mov	rcx, r9		# MOV8RegReg
0x7ffba4d8ab9a 00000202 [0x7ffb7218db00] 85 c9                              test	ecx, ecx		# TEST4RegReg
0x7ffba4d8ab9c 00000204 [0x7ffb7218dfc0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab9c 00000204 [0x7ffb7218dd00] 0f 85 86 00 00 00                  jne	Label L0018			# JNE4
0x7ffba4d8aba2 0000020a [0x7ffb7218e210]                                    Fence Relative [ 00007FFB720509E4 ]	# FENCE BBEnd </block_3>
........................................
0x7ffba4d8aba2 0000020a [0x7ffb7218e330]                                    Fence Relative [ 00007FFB72050300 ]	# FENCE BBStart <block_5> (frequency 766) (extension of previous block)
0x7ffba4d8aba2 0000020a [0x7ffb7218e5f0] 8b 0e                              mov	ecx, dword ptr [rsi]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
0x7ffba4d8aba4 0000020c [0x7ffb7218e680] 48 81 e1 00 ff ff ff               and	rcx, 0xffffffffffffff00	# AND8RegImm4
0x7ffba4d8abab 00000213 [0x7ffb7218ea20] 48 8b 79 30                        mov	rdi, qword ptr [rcx+0x30]		# L8RegMem, SymRef  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]
0x7ffba4d8abaf 00000217 [0x7ffb7218ed00] 48 89 7c 24 40                     mov	qword ptr [rsp+0x40], rdi		# S8MemReg, SymRef  <pending push temp 3>[#447  Auto +64] [flags 0x7 0x800 ]
0x7ffba4d8abb4 0000021c [0x7ffb7218f010]                                    Fence Relative [ 00007FFB72050304 ]	# FENCE BBEnd </block_5>
0x7ffba4d8abb4 0000021c [0x7ffb7218f250]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abb4 0000021c [0x7ffb7218f740]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abb4 0000021c [0x7ffb7218f4f0]                                    Label L0160:			# LABEL
0x7ffba4d8abb4 0000021c [0x7ffb72220510]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abb4 0000021c [0x7ffb722202c0]                                    Label L0021:			# LABEL
0x7ffba4d8abb4 0000021c [0x7ffb72238ab0] 4c 8b ca                           mov	r9, rdx		# MOV8RegReg
0x7ffba4d8abb7 0000021f [0x7ffb72238a20] 48 8b cf                           mov	rcx, rdi		# MOV8RegReg
0x7ffba4d8abba 00000222 [0x7ffb72238990] 49 8b d0                           mov	rdx, r8		# MOV8RegReg
0x7ffba4d8abbd 00000225 [0x7ffb72238900] 48 89 74 24 68                     mov	qword ptr [rsp+0x68], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_487 0x7ffb72237290>[#487  Auto +104] [flags 0x80000000 0x0 ]
0x7ffba4d8abc2 0000022a [0x7ffb722387a0] 48 8b f0                           mov	rsi, rax		# MOV8RegReg
========================================
0x7ffba4d8abc5 0000022d [0x7ffb72220590]                                    Fence Relative [ 00007FFB72050430 ]	# FENCE BBStart <block_6> (frequency 785)
0x7ffba4d8abc5 0000022d [0x7ffb72220ed0]                                    Label L0177:			# LABEL	# (Start of internal control flow)
0x7ffba4d8abc5 0000022d [0x7ffb72221080] 44 8b 16                           mov	r10d, dword ptr [rsi]		# L4RegMem
0x7ffba4d8abc8 00000230 [0x7ffb72221110] 41 81 e2 00 ff ff ff               and	r10d, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8abcf 00000237 [0x7ffb72221230] 66 41 f7 42 24 00 01               test	word ptr [r10+0x24], 0x0100	# TEST2MemImm2, SymRef [#449 +36]
0x7ffba4d8abd6 0000023e [0x7ffb72237620]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8abd6 0000023e [0x7ffb722212c0] 0f 85 09 01 00 00                  jne	Outlined Label L0179			# JNE4
0x7ffba4d8abdc 00000244 [0x7ffb72221ba0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abdc 00000244 [0x7ffb72221950]                                    Label L0178:			# LABEL	# (End of internal control flow)
0x7ffba4d8abdc 00000244 [0x7ffb72237570] 48 87 f3                           xchg	rbx, rsi		# XCHG8RegReg
0x7ffba4d8abdf 00000247 [0x7ffb72221d30] 44 8b 53 50                        mov	r10d, dword ptr [rbx+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#451  Shadow +80] [flags 0x80603 0x0 ]
0x7ffba4d8abe3 0000024b [0x7ffb72222920] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7ffba4d8abe6 0000024e [0x7ffb72222a40] 4c 89 14 24                        mov	qword ptr [rsp], r10		# S8MemReg
0x7ffba4d8abea 00000252 [0x7ffb722233c0]                                    Label L0181:			# LABEL	# (Start of internal control flow)
0x7ffba4d8abea 00000252 [0x7ffb72222d20] 66 0f 1f 44 00 00                  nop (6 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8abf0 00000258 [0x7ffb72222c80] e8 e1 02 00 00                     call	Snippet Label L0183     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8abf5 0000025d [0x7ffb722236b0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abf5 0000025d [0x7ffb72223460]                                    Label L0182:			# LABEL	# (End of internal control flow)
0x7ffba4d8abf5 0000025d [0x7ffb72237400] 48 8b 74 24 68                     mov	rsi, qword ptr [rsp+0x68]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_486 0x7ffb72237290>[#486  Auto +104] [flags 0x80000000 0x0 ]#, spilled for call
0x7ffba4d8abfa 00000262 [0x7ffb72237200] 49 8b d1                           mov	rdx, r9		# MOV8RegReg
0x7ffba4d8abfd 00000265 [0x7ffb72237170] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7ffba4d8ac00 00000268 [0x7ffb72223b40]                                    Fence Relative [ 00007FFB72050434 ]	# FENCE BBEnd </block_6>
........................................
0x7ffba4d8ac00 00000268 [0x7ffb72223c60]                                    Fence Relative [ 00007FFB7215B1B0 ]	# FENCE BBStart <block_12> (frequency 785) (extension of previous block)
0x7ffba4d8ac00 00000268 [0x7ffb722240f0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac00 00000268 [0x7ffb72223ea0] e9 23 fe ff ff                     jmp	Label L0019			# JMP4
0x7ffba4d8ac05 0000026d [0x7ffb72224260]                                    Fence Relative [ 00007FFB7215B1B4 ]	# FENCE BBEnd </block_12>
0x7ffba4d8ac05 0000026d [0x7ffb722244a0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac05 0000026d [0x7ffb72224580]                                    Label L0192:			# LABEL
0x7ffba4d8ac05 0000026d [0x7ffb72224dd0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac05 0000026d [0x7ffb72224b80]                                    Label L0017:			# LABEL
0x7ffba4d8ac05 0000026d [0x7ffb72237010] 4c 8b ca                           mov	r9, rdx		# MOV8RegReg
0x7ffba4d8ac08 00000270 [0x7ffb72236f80] 48 8b de                           mov	rbx, rsi		# MOV8RegReg
========================================
0x7ffba4d8ac0b 00000273 [0x7ffb72224e50]                                    Fence Relative [ 00007FFB72071210 ]	# FENCE BBStart <block_8> (frequency 180)
0x7ffba4d8ac0b 00000273 [0x7ffb72226a50]                                    Label L0208:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ac0b 00000273 [0x7ffb72225bb0] 0f 1f 44 00 00                     nop (5 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ac10 00000278 [0x7ffb72225b10] e8 e4 02 00 00                     call	Snippet Label L0210     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8ac15 0000027d [0x7ffb72226d40]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac15 0000027d [0x7ffb72226af0]                                    Label L0209:			# LABEL	# (End of internal control flow)
0x7ffba4d8ac15 0000027d [0x7ffb72236e70] 48 8b f3                           mov	rsi, rbx		# MOV8RegReg
0x7ffba4d8ac18 00000280 [0x7ffb72236de0] 49 8b d1                           mov	rdx, r9		# MOV8RegReg
0x7ffba4d8ac1b 00000283 [0x7ffb72236d50] 48 8b d8                           mov	rbx, rax		# MOV8RegReg
0x7ffba4d8ac1e 00000286 [0x7ffb722272c0] 48 89 5c 24 60                     mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#455  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8ac23 0000028b [0x7ffb72227510]                                    Fence Relative [ 00007FFB72071214 ]	# FENCE BBEnd </block_8>
........................................
0x7ffba4d8ac23 0000028b [0x7ffb72227630]                                    Fence Relative [ 00007FFB7215B3A0 ]	# FENCE BBStart <block_13> (frequency 180) (extension of previous block)
0x7ffba4d8ac23 0000028b [0x7ffb72227b60]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac23 0000028b [0x7ffb722278a0] e9 56 fe ff ff                     jmp	Label L0020			# JMP4
0x7ffba4d8ac28 00000290 [0x7ffb72227d00]                                    Fence Relative [ 00007FFB7215B3A4 ]	# FENCE BBEnd </block_13>
0x7ffba4d8ac28 00000290 [0x7ffb72227f40]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac28 00000290 [0x7ffb72228020]                                    Label L0224:			# LABEL
0x7ffba4d8ac28 00000290 [0x7ffb72228b50]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac28 00000290 [0x7ffb72228900]                                    Label L0018:			# LABEL
========================================
0x7ffba4d8ac28 00000290 [0x7ffb72228bd0]                                    Fence Relative [ 00007FFB72070EB0 ]	# FENCE BBStart <block_4> (frequency 24)
0x7ffba4d8ac28 00000290 [0x7ffb72229270] 48 c7 44 24 40 00 00 00 00         mov	qword ptr [rsp+0x40], 0x00000000	# S8MemImm4, SymRef  <pending push temp 3>[#456  Auto +64] [flags 0x7 0x800 ]
0x7ffba4d8ac31 00000299 [0x7ffb72229540] 33 ff                              xor	edi, edi		# XOR4RegReg
0x7ffba4d8ac33 0000029b [0x7ffb72229b90]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac33 0000029b [0x7ffb722298d0] e9 7c ff ff ff                     jmp	Label L0021			# JMP4
0x7ffba4d8ac38 000002a0 [0x7ffb72229d30]                                    Fence Relative [ 00007FFB72070EB4 ]	# FENCE BBEnd </block_4>
0x7ffba4d8ac38 000002a0 [0x7ffb72229f70]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac38 000002a0 [0x7ffb7222a050]                                    Label L0240:			# LABEL
0x7ffba4d8ac38 000002a0 [0x7ffb7222a260]                                    Label L0256:			# LABEL
========================================
0x7ffba4d8ac38 000002a0 [0x7ffb7222a300]                                    Fence Relative [ 00007FFB720A0250 ]	# FENCE BBStart <block_10> (frequency 0) (catches ...) (cold)
0x7ffba4d8ac38 000002a0 [0x7ffb7222a470]                                    Fence Relative [ 00007FFB720A0254 ]	# FENCE BBEnd </block_10>
........................................
0x7ffba4d8ac38 000002a0 [0x7ffb7222a590]                                    Fence Relative [ 00007FFB72147000 ]	# FENCE BBStart <block_15> (frequency 0) (extension of previous block) (cold)
0x7ffba4d8ac38 000002a0 [0x7ffb7222a850] 48 8b 84 24 90 00 00 00            mov	rax, qword ptr [rsp+0x90]		# L8RegMem, SymRef  this<'this' parm Ljava/lang/reflect/Method;>[#457  Parm +144] [flags 0xc0000107 0x0 ]
0x7ffba4d8ac40 000002a8 [0x7ffb7222ac50] 48 8b b4 24 88 00 00 00            mov	rsi, qword ptr [rsp+0x88]		# L8RegMem, SymRef  obj<parm 1 Ljava/lang/Object;>[#458  Parm +136] [flags 0xc0000107 0x0 ]
0x7ffba4d8ac48 000002b0 [0x7ffb7222b050] 48 8b 94 24 80 00 00 00            mov	rdx, qword ptr [rsp+0x80]		# L8RegMem, SymRef  args<parm 2 [Ljava/lang/Object;>[#459  Parm +128] [flags 0xc0000107 0x0 ]
0x7ffba4d8ac50 000002b8 [0x7ffb7222b370]                                    Fence Relative [ 00007FFB72147004 ]	# FENCE BBEnd </block_15>
0x7ffba4d8ac50 000002b8 [0x7ffb7222b5b0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac50 000002b8 [0x7ffb7222b9d0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac50 000002b8 [0x7ffb7222b780]                                    Label L0272:			# LABEL
0x7ffba4d8ac50 000002b8 [0x7ffb7222c380]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac50 000002b8 [0x7ffb7222c130]                                    Label L0288:			# LABEL
========================================
0x7ffba4d8ac50 000002b8 [0x7ffb7222c400]                                    Fence Relative [ 00007FFB720A0120 ]	# FENCE BBStart <block_11> (frequency 0) (cold)
0x7ffba4d8ac50 000002b8 [0x7ffb7222cb50] 4c 8b 44 24 58                     mov	r8, qword ptr [rsp+0x58]		# L8RegMem, SymRef  <pending push temp 0>[#460  Auto +88] [flags 0x7 0x800 ]
0x7ffba4d8ac55 000002bd [0x7ffb7222cd80] 8b 8d 5c 01 00 00                  mov	ecx, dword ptr [rbp+0x15c]		# L4RegMem, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
0x7ffba4d8ac5b 000002c3 [0x7ffb7222cf20] 44 8d 51 58                        lea	r10d, dword ptr [rcx+0x58]		# LEA4RegMem, SymRef [#463 +88]
0x7ffba4d8ac5f 000002c7 [0x7ffb7222cfb0] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac62 000002ca [0x7ffb7222d150] 48 8b bd 68 09 00 00               mov	rdi, qword ptr [rbp+0x968]		# L8RegMem, SymRef  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]
0x7ffba4d8ac69 000002d1 [0x7ffb7222d1e0] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8ac6e 000002d6 [0x7ffb7222da90] 4c 8b 44 24 50                     mov	r8, qword ptr [rsp+0x50]		# L8RegMem, SymRef  <pending push temp 1>[#465  Auto +80] [flags 0x7 0x800 ]
0x7ffba4d8ac73 000002db [0x7ffb7222dcc0] 44 8d 51 50                        lea	r10d, dword ptr [rcx+0x50]		# LEA4RegMem, SymRef [#467 +80]
0x7ffba4d8ac77 000002df [0x7ffb7222dd50] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac7a 000002e2 [0x7ffb7222dde0] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8ac7f 000002e7 [0x7ffb7222e4d0] 4c 8b 44 24 48                     mov	r8, qword ptr [rsp+0x48]		# L8RegMem, SymRef  <pending push temp 2>[#468  Auto +72] [flags 0x7 0x800 ]
0x7ffba4d8ac84 000002ec [0x7ffb7222e700] 44 8d 51 48                        lea	r10d, dword ptr [rcx+0x48]		# LEA4RegMem, SymRef [#470 +72]
0x7ffba4d8ac88 000002f0 [0x7ffb7222e790] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac8b 000002f3 [0x7ffb7222e820] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8ac90 000002f8 [0x7ffb7222ef10] 4c 8b 44 24 40                     mov	r8, qword ptr [rsp+0x40]		# L8RegMem, SymRef  <pending push temp 3>[#471  Auto +64] [flags 0x7 0x800 ]
0x7ffba4d8ac95 000002fd [0x7ffb7222f140] 44 8d 51 40                        lea	r10d, dword ptr [rcx+0x40]		# LEA4RegMem, SymRef [#473 +64]
0x7ffba4d8ac99 00000301 [0x7ffb7222f1d0] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac9c 00000304 [0x7ffb7222f260] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8aca1 00000309 [0x7ffb7222f930] 44 8d 41 78                        lea	r8d, dword ptr [rcx+0x78]		# LEA4RegMem, SymRef [#475 +120]
0x7ffba4d8aca5 0000030d [0x7ffb7222f9c0] 4d 63 c0                           movsxd	r8, r8d		# MOVSXReg8Reg4
0x7ffba4d8aca8 00000310 [0x7ffb7222fa50] 49 89 44 38 00                     mov	qword ptr [r8+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acad 00000315 [0x7ffb72230000] 8d 41 70                           lea	eax, dword ptr [rcx+0x70]		# LEA4RegMem, SymRef [#477 +112]
0x7ffba4d8acb0 00000318 [0x7ffb72230090] 48 63 c0                           movsxd	rax, eax		# MOVSXReg8Reg4
0x7ffba4d8acb3 0000031b [0x7ffb72230120] 48 89 74 38 00                     mov	qword ptr [rax+1*rdi], rsi		# S8MemReg, SymRef  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acb8 00000320 [0x7ffb72230670] 8d 41 68                           lea	eax, dword ptr [rcx+0x68]		# LEA4RegMem, SymRef [#479 +104]
0x7ffba4d8acbb 00000323 [0x7ffb72230700] 48 63 c0                           movsxd	rax, eax		# MOVSXReg8Reg4
0x7ffba4d8acbe 00000326 [0x7ffb72230790] 48 89 54 38 00                     mov	qword ptr [rax+1*rdi], rdx		# S8MemReg, SymRef  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acc3 0000032b [0x7ffb72230d00] 48 8b 44 24 60                     mov	rax, qword ptr [rsp+0x60]		# L8RegMem, SymRef  caller<auto slot 3>[#480  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8acc8 00000330 [0x7ffb72230f30] 8d 51 60                           lea	edx, dword ptr [rcx+0x60]		# LEA4RegMem, SymRef [#482 +96]
0x7ffba4d8accb 00000333 [0x7ffb72230fc0] 48 63 d2                           movsxd	rdx, edx		# MOVSXReg8Reg4
0x7ffba4d8acce 00000336 [0x7ffb72231050] 48 89 44 3a 00                     mov	qword ptr [rdx+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acd3 0000033b [0x7ffb72231520] 83 e9 80                           sub	ecx, 0xffffffffffffff80	# SUB4RegImms
0x7ffba4d8acd6 0000033e [0x7ffb72231640] 89 8d 5c 01 00 00                  mov	dword ptr [rbp+0x15c], ecx		# S4MemReg, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
0x7ffba4d8acdc 00000344 [0x7ffb722319c0] 48 8b 85 70 09 00 00               mov	rax, qword ptr [rbp+0x970]		# L8RegMem, SymRef  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]
0x7ffba4d8ace3 0000034b [0x7ffb72231a50] ff e0                              jmp	eax			# JMPReg
0x7ffba4d8ace5 0000034d [0x7ffb72231c50]                                    Fence Relative [ 00007FFB720A0124 ]	# FENCE BBEnd </block_11>
0x7ffba4d8ace5 0000034d [0x7ffb72231e90]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ace5 0000034d [0x7ffb72231f70]                                    Label L0304:			# LABEL
0x7ffba4d8ace5 0000034d [0x7ffb72238570]                                    vfpRestore [0x7ffb72237620]			# AdjustFramePtr
0x7ffba4d8ace5 0000034d [0x7ffb72221490]                                    Outlined Label L0179:			# LABEL
0x7ffba4d8ace5 0000034d [0x7ffb72221680] 48 8d 05 d2 01 00 00               lea	rax, qword ptr [Snippet Label L0176 : 0x7ffba4d8aebe]		# LEA8RegMem
0x7ffba4d8acec 00000354 [0x7ffb72221710] e8 0f 99 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8acf1 00000359 [0x7ffb722217b0] e9 e6 fe ff ff                     jmp	Label L0178			# JMP4
0x7ffba4d8acf6 0000035e [0x7ffb722218b0]                                    Label L0180:			# LABEL
0x7ffba4d8acf6 0000035e [0x7ffb7223a4e0]                                    vfpRestore [0x7ffb72239450]			# AdjustFramePtr
0x7ffba4d8acf6 0000035e [0x7ffb7218b5c0]                                    Outlined Label L0141:			# LABEL
0x7ffba4d8acf6 0000035e [0x7ffb7218b770] 48 8d 05 96 01 00 00               lea	rax, qword ptr [Snippet Label L0138 : 0x7ffba4d8ae93]		# LEA8RegMem
0x7ffba4d8acfd 00000365 [0x7ffb7218b800] e8 fe 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad02 0000036a [0x7ffb7218b8a0] e9 6c fe ff ff                     jmp	Label L0140			# JMP4
0x7ffba4d8ad07 0000036f [0x7ffb7218b9a0]                                    Label L0142:			# LABEL
0x7ffba4d8ad07 0000036f [0x7ffb7223b830]                                    vfpRestore [0x7ffb7223a7a0]			# AdjustFramePtr
0x7ffba4d8ad07 0000036f [0x7ffb72188e30]                                    Outlined Label L0135:			# LABEL
0x7ffba4d8ad07 0000036f [0x7ffb72188fe0] 48 8d 05 53 01 00 00               lea	rax, qword ptr [Snippet Label L0128 : 0x7ffba4d8ae61]		# LEA8RegMem
0x7ffba4d8ad0e 00000376 [0x7ffb72189070] e8 ed 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad13 0000037b [0x7ffb72189110] e9 26 fe ff ff                     jmp	Label L0134			# JMP4
0x7ffba4d8ad18 00000380 [0x7ffb72189210]                                    Label L0136:			# LABEL
0x7ffba4d8ad18 00000380 [0x7ffb7223db10]                                    vfpRestore [0x7ffb7223bb00]			# AdjustFramePtr
0x7ffba4d8ad18 00000380 [0x7ffb72187d80]                                    Outlined Label L0131:			# LABEL
0x7ffba4d8ad18 00000380 [0x7ffb72187f60] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad22 0000038a [0x7ffb72188000] 48 c7 c6 0f 00 00 00               mov	rsi, 0x0000000f	# MOV8RegImm4
0x7ffba4d8ad29 00000391 [0x7ffb72188090] e8 f2 e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad2e 00000396 [0x7ffb72188130] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ad35 0000039d [0x7ffb72188250] 48 89 41 10                        mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
0x7ffba4d8ad39 000003a1 [0x7ffb721882e0] e9 e9 fd ff ff                     jmp	Label L0130			# JMP4
0x7ffba4d8ad3e 000003a6 [0x7ffb721883e0]                                    Label L0132:			# LABEL
0x7ffba4d8ad3e 000003a6 [0x7ffb7223f720]                                    vfpRestore [0x7ffb7223e710]			# AdjustFramePtr
0x7ffba4d8ad3e 000003a6 [0x7ffb7217d400]                                    Outlined Label L0071:			# LABEL
0x7ffba4d8ad3e 000003a6 [0x7ffb7217d5b0] 48 8d 05 a8 00 00 00               lea	rax, qword ptr [Snippet Label L0064 : 0x7ffba4d8aded]		# LEA8RegMem
0x7ffba4d8ad45 000003ad [0x7ffb7217d640] e8 b6 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad4a 000003b2 [0x7ffb7217d6e0] e9 08 fd ff ff                     jmp	Label L0070			# JMP4
0x7ffba4d8ad4f 000003b7 [0x7ffb7217d7e0]                                    Label L0072:			# LABEL
0x7ffba4d8ad4f 000003b7 [0x7ffb72240980]                                    vfpRestore [0x7ffb7223f9f0]			# AdjustFramePtr
0x7ffba4d8ad4f 000003b7 [0x7ffb7217c390]                                    Outlined Label L0067:			# LABEL
0x7ffba4d8ad4f 000003b7 [0x7ffb7217c530] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad59 000003c1 [0x7ffb7217c5d0] 48 c7 c6 1e 00 00 00               mov	rsi, 0x0000001e	# MOV8RegImm4
0x7ffba4d8ad60 000003c8 [0x7ffb7217c660] e8 bb e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad65 000003cd [0x7ffb7217c700] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ad6c 000003d4 [0x7ffb7217c820] 49 89 40 10                        mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
0x7ffba4d8ad70 000003d8 [0x7ffb7217c8b0] e9 cb fc ff ff                     jmp	Label L0066			# JMP4
0x7ffba4d8ad75 000003dd [0x7ffb7217c9b0]                                    Label L0068:			# LABEL
0x7ffba4d8ad75 000003dd [0x7ffb72241ed0]                                    vfpRestore [0x7ffb72240ec0]			# AdjustFramePtr
0x7ffba4d8ad75 000003dd [0x7ffb72178ad0]                                    Outlined Label L0040:			# LABEL
0x7ffba4d8ad75 000003dd [0x7ffb72178c80] 48 8d 05 3f 00 00 00               lea	rax, qword ptr [Snippet Label L0033 : 0x7ffba4d8adbb]		# LEA8RegMem
0x7ffba4d8ad7c 000003e4 [0x7ffb72178da0] e8 7f 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad81 000003e9 [0x7ffb72178e40] e9 89 fc ff ff                     jmp	Label L0039			# JMP4
0x7ffba4d8ad86 000003ee [0x7ffb72178f40]                                    Label L0041:			# LABEL
0x7ffba4d8ad86 000003ee [0x7ffb72243130]                                    vfpRestore [0x7ffb722421a0]			# AdjustFramePtr
0x7ffba4d8ad86 000003ee [0x7ffb721778b0]                                    Outlined Label L0036:			# LABEL
0x7ffba4d8ad86 000003ee [0x7ffb72177b70] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad90 000003f8 [0x7ffb72177c10] 48 c7 c6 45 00 00 00               mov	rsi, 0x00000045	# MOV8RegImm4
0x7ffba4d8ad97 000003ff [0x7ffb72177d30] e8 84 e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad9c 00000404 [0x7ffb72177dd0] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ada3 0000040b [0x7ffb72177ef0] 49 89 40 10                        mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
0x7ffba4d8ada7 0000040f [0x7ffb72177f80] e9 4c fc ff ff                     jmp	Label L0035			# JMP4
0x7ffba4d8adac 00000414 [0x7ffb72178080]                                    Label L0037:			# LABEL
0x7ffba4d8adac 00000414 [0x7ffb72256080]                                    vfpRestore [0x7ffb72255bd0]			# AdjustFramePtr
0x7ffba4d8adac 00000414 [0x7ffb72256110]                                    Outlined Label L0322:			# LABEL
0x7ffba4d8adac 00000414 [0x7ffb722561b0] bf 78 00 00 00                     mov	edi, 0x00000078	# MOV4RegImm4
0x7ffba4d8adb1 00000419 [0x7ffb722562d0] e8 2a 80 b7 1e                     call	jitStackOverflow        # CALLImm4 (00007FFBC3902DE0)# CALLImm4
0x7ffba4d8adb6 0000041e [0x7ffb72256370] e9 05 fc ff ff                     jmp	Label L0321			# JMP4
------------ start out-of-line instructions

0x7ffba4d8ace5 0000034d [0x7ffb72221490]                                    Outlined Label L0179:			# LABEL
0x7ffba4d8ace5 0000034d [0x7ffb72221680] 48 8d 05 d2 01 00 00               lea	rax, qword ptr [Snippet Label L0176 : 0x7ffba4d8aebe]		# LEA8RegMem
0x7ffba4d8acec 00000354 [0x7ffb72221710] e8 0f 99 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8acf1 00000359 [0x7ffb722217b0] e9 e6 fe ff ff                     jmp	Label L0178			# JMP4
0x7ffba4d8acf6 0000035e [0x7ffb722218b0]                                    Label L0180:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8acf6 0000035e [0x7ffb7218b5c0]                                    Outlined Label L0141:			# LABEL
0x7ffba4d8acf6 0000035e [0x7ffb7218b770] 48 8d 05 96 01 00 00               lea	rax, qword ptr [Snippet Label L0138 : 0x7ffba4d8ae93]		# LEA8RegMem
0x7ffba4d8acfd 00000365 [0x7ffb7218b800] e8 fe 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad02 0000036a [0x7ffb7218b8a0] e9 6c fe ff ff                     jmp	Label L0140			# JMP4
0x7ffba4d8ad07 0000036f [0x7ffb7218b9a0]                                    Label L0142:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad07 0000036f [0x7ffb72188e30]                                    Outlined Label L0135:			# LABEL
0x7ffba4d8ad07 0000036f [0x7ffb72188fe0] 48 8d 05 53 01 00 00               lea	rax, qword ptr [Snippet Label L0128 : 0x7ffba4d8ae61]		# LEA8RegMem
0x7ffba4d8ad0e 00000376 [0x7ffb72189070] e8 ed 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad13 0000037b [0x7ffb72189110] e9 26 fe ff ff                     jmp	Label L0134			# JMP4
0x7ffba4d8ad18 00000380 [0x7ffb72189210]                                    Label L0136:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad18 00000380 [0x7ffb72187d80]                                    Outlined Label L0131:			# LABEL
0x7ffba4d8ad18 00000380 [0x7ffb72187f60] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad22 0000038a [0x7ffb72188000] 48 c7 c6 0f 00 00 00               mov	rsi, 0x0000000f	# MOV8RegImm4
0x7ffba4d8ad29 00000391 [0x7ffb72188090] e8 f2 e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad2e 00000396 [0x7ffb72188130] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ad35 0000039d [0x7ffb72188250] 48 89 41 10                        mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
0x7ffba4d8ad39 000003a1 [0x7ffb721882e0] e9 e9 fd ff ff                     jmp	Label L0130			# JMP4
0x7ffba4d8ad3e 000003a6 [0x7ffb721883e0]                                    Label L0132:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad3e 000003a6 [0x7ffb7217d400]                                    Outlined Label L0071:			# LABEL
0x7ffba4d8ad3e 000003a6 [0x7ffb7217d5b0] 48 8d 05 a8 00 00 00               lea	rax, qword ptr [Snippet Label L0064 : 0x7ffba4d8aded]		# LEA8RegMem
0x7ffba4d8ad45 000003ad [0x7ffb7217d640] e8 b6 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad4a 000003b2 [0x7ffb7217d6e0] e9 08 fd ff ff                     jmp	Label L0070			# JMP4
0x7ffba4d8ad4f 000003b7 [0x7ffb7217d7e0]                                    Label L0072:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad4f 000003b7 [0x7ffb7217c390]                                    Outlined Label L0067:			# LABEL
0x7ffba4d8ad4f 000003b7 [0x7ffb7217c530] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad59 000003c1 [0x7ffb7217c5d0] 48 c7 c6 1e 00 00 00               mov	rsi, 0x0000001e	# MOV8RegImm4
0x7ffba4d8ad60 000003c8 [0x7ffb7217c660] e8 bb e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad65 000003cd [0x7ffb7217c700] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ad6c 000003d4 [0x7ffb7217c820] 49 89 40 10                        mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
0x7ffba4d8ad70 000003d8 [0x7ffb7217c8b0] e9 cb fc ff ff                     jmp	Label L0066			# JMP4
0x7ffba4d8ad75 000003dd [0x7ffb7217c9b0]                                    Label L0068:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad75 000003dd [0x7ffb72178ad0]                                    Outlined Label L0040:			# LABEL
0x7ffba4d8ad75 000003dd [0x7ffb72178c80] 48 8d 05 3f 00 00 00               lea	rax, qword ptr [Snippet Label L0033 : 0x7ffba4d8adbb]		# LEA8RegMem
0x7ffba4d8ad7c 000003e4 [0x7ffb72178da0] e8 7f 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad81 000003e9 [0x7ffb72178e40] e9 89 fc ff ff                     jmp	Label L0039			# JMP4
0x7ffba4d8ad86 000003ee [0x7ffb72178f40]                                    Label L0041:			# LABEL
------------ end out-of-line instructions

------------ start out-of-line instructions

0x7ffba4d8ad86 000003ee [0x7ffb721778b0]                                    Outlined Label L0036:			# LABEL
0x7ffba4d8ad86 000003ee [0x7ffb72177b70] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad90 000003f8 [0x7ffb72177c10] 48 c7 c6 45 00 00 00               mov	rsi, 0x00000045	# MOV8RegImm4
0x7ffba4d8ad97 000003ff [0x7ffb72177d30] e8 84 e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad9c 00000404 [0x7ffb72177dd0] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ada3 0000040b [0x7ffb72177ef0] 49 89 40 10                        mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
0x7ffba4d8ada7 0000040f [0x7ffb72177f80] e9 4c fc ff ff                     jmp	Label L0035			# JMP4
0x7ffba4d8adac 00000414 [0x7ffb72178080]                                    Label L0037:			# LABEL
------------ end out-of-line instructions

</instructions>
<snippets>

00007FFBA4D8ADBB 00000423                                                 Snippet Label L0033:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8adbb 00000423                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8adc3 0000042b                      01 00 00 00 00 00 00 00        DC   	1 		# location
0x7ffba4d8adcb 00000433                      ff ff ff ff ff ff ff ff        DC   	4294967295 		# offset

00007FFBA4D8ADD3 0000043b                                                 Snippet Label L0042:		# Unresolved Data Snippet for instr [0x7ffb72179610]
0x7ffba4d8add3 0000043b                      e8 a8 d4 6b 1e                 call	interpreterUnresolvedFieldGlue
0x7ffba4d8add8 00000440                      70 71 07 00 00 00 00 00        .quad	0000000000077170	# address of constant pool for this method
0x7ffba4d8ade0 00000448                      45 00 00 00                    .int	0x00000045				# constant pool index
0x7ffba4d8ade4 0000044c                      62                             .byte	62							# instruction descriptor: length=6, disp32 offset=2
0x7ffba4d8ade5 0000044d                      8b 88 00 00 00 00 66 90        .byte	(8)						# patch instruction bytes

00007FFBA4D8ADED 00000455                                                 Snippet Label L0064:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8aded 00000455                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8adf5 0000045d                      2b 00 00 00 00 00 00 00        DC   	43 		# location
0x7ffba4d8adfd 00000465                      ff ff ff ff ff ff ff ff        DC   	4294967295 		# offset

00007FFBA4D8AE05 0000046d                                                 Snippet Label L0073:		# Unresolved Data Snippet for instr [0x7ffb7217ddb0]
0x7ffba4d8ae05 0000046d                      e8 76 d4 6b 1e                 call	interpreterUnresolvedFieldGlue
0x7ffba4d8ae0a 00000472                      70 71 07 00 00 00 00 00        .quad	0000000000077170	# address of constant pool for this method
0x7ffba4d8ae12 0000047a                      1e 00 00 00                    .int	0x0000001e				# constant pool index
0x7ffba4d8ae16 0000047e                      62                             .byte	62							# instruction descriptor: length=6, disp32 offset=2
0x7ffba4d8ae17 0000047f                      8b 88 00 00 00 00 66 90        .byte	(8)						# patch instruction bytes

00007FFBA4D8AE26 0000048e                                                 Snippet Label L0084:		# IPic Data
0x7ffba4d8ae26 0000048e                      e8 e5 c3 6b 1e                 call	IPicLookupDispatch 		# 00007FFBC3447210
0x7ffba4d8ae2b 00000493                      e9 b5 fc ff ff                 jmp	Label L0081
0x7ffba4d8ae30 00000498                      70 71 07 00 00 00 00 00        DQ	0000000000077170		# owning method cpAddr
0x7ffba4d8ae38 000004a0                      4a 00 00 00 00 00 00 00        DQ	000000000000004A		# cpIndex
0x7ffba4d8ae40 000004a8                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# interface class (initially null)
0x7ffba4d8ae48 000004b0                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# itable offset (initially zero)
0x7ffba4d8ae50 000004b8                      48                             .byte	0x48								# REX of MOVRegImm64
0x7ffba4d8ae51 000004b9                      bb                             .byte	bb								# MOV opcode of MOVRegImm64

00007FFBA4D8AE52 000004ba                                                 Snippet Label L0114:		# Call Snippet
0x7ffba4d8ae52 000004ba                      48 bf f8 99 05 00 00 00 00 00  mov 	rdi, 0x599f8		# MOV8RegImm64
0x7ffba4d8ae5c 000004c4                      e9 df cb 6b 1e                 jmp 	interpreterLongStaticGlue		# jump out of snippet code

00007FFBA4D8AE61 000004c9                                                 Snippet Label L0128:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8ae61 000004c9                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8ae69 000004d1                      0e 00 00 00 00 00 00 00        DC   	14 		# location
0x7ffba4d8ae71 000004d9                      ff ff ff ff ff ff ff ff        DC   	4294967295 		# offset

00007FFBA4D8AE79 000004e1                                                 Snippet Label L0137:		# Unresolved Data Snippet for instr [0x7ffb721897e0]
0x7ffba4d8ae79 000004e1                      e8 02 d4 6b 1e                 call	interpreterUnresolvedFieldGlue
0x7ffba4d8ae7e 000004e6                      70 71 07 00 00 00 00 00        .quad	0000000000077170	# address of constant pool for this method
0x7ffba4d8ae86 000004ee                      0f 00 00 00                    .int	0x0000000f				# constant pool index
0x7ffba4d8ae8a 000004f2                      62                             .byte	62							# instruction descriptor: length=6, disp32 offset=2
0x7ffba4d8ae8b 000004f3                      8b 86 00 00 00 00 66 90        .byte	(8)						# patch instruction bytes

00007FFBA4D8AE93 000004fb                                                 Snippet Label L0138:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8ae93 000004fb                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8ae9b 00000503                      12 00 00 00 00 00 00 00        DC   	18 		# location
0x7ffba4d8aea3 0000050b                      4c 00 00 00 00 00 00 00        DC   	76 		# offset

00007FFBA4D8AEAB 00000513                                                 Snippet Label L0145:		# Call Snippet
0x7ffba4d8aeab 00000513                      89 44 24 08                    mov 	dword ptr[rsp+8], eax		#save registers for interpreter call snippet
0x7ffba4d8aeaf 00000517                      48 bf e8 90 0f 00 00 00 00 00  mov 	rdi, 0xf90e8		# MOV8RegImm64
0x7ffba4d8aeb9 00000521                      e9 82 cb 6b 1e                 jmp 	interpreterIntStaticGlue		# jump out of snippet code

00007FFBA4D8AEBE 00000526                                                 Snippet Label L0176:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8aebe 00000526                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8aec6 0000052e                      24 00 00 00 00 00 00 00        DC   	36 		# location
0x7ffba4d8aece 00000536                      4c 00 00 00 00 00 00 00        DC   	76 		# offset

00007FFBA4D8AED6 0000053e                                                 Snippet Label L0183:		# Call Snippet
0x7ffba4d8aed6 0000053e                      48 89 44 24 28                 mov 	qword ptr[rsp+40], rax		#save registers for interpreter call snippet
0x7ffba4d8aedb 00000543                      48 89 74 24 20                 mov 	qword ptr[rsp+32], rsi		#save registers for interpreter call snippet
0x7ffba4d8aee0 00000548                      48 89 54 24 18                 mov 	qword ptr[rsp+24], rdx		#save registers for interpreter call snippet
0x7ffba4d8aee5 0000054d                      48 89 4c 24 10                 mov 	qword ptr[rsp+16], rcx		#save registers for interpreter call snippet
0x7ffba4d8aeea 00000552                      48 bf c0 42                    mov 	dword ptr[rsp+8], 		#save registers for interpreter call snippet
0x7ffba4d8aeee 00000556                      07 00 00 00 00 00 e9 47 cb 6b  mov 	rdi, 0x742c0		# MOV8RegImm64
0x7ffba4d8aef8 00000560                      1e 48 89 44 24                 jmp 	interpreterVoidStaticGlue		# jump out of snippet code

00007FFBA4D8AEF9 00000561                                                 Snippet Label L0210:		# Call Snippet
0x7ffba4d8aef9 00000561                      48 89 44 24 08                 mov 	qword ptr[rsp+8], rax		#save registers for interpreter call snippet
0x7ffba4d8aefe 00000566                      48 bf d8 84 07 00 00 00 00 00  mov 	rdi, 0x784d8		# MOV8RegImm64
0x7ffba4d8af08 00000570                      e9 33 cb 6b 1e                 jmp 	interpreterLongStaticGlue		# jump out of snippet code
</snippets>
</codegen>
<metadata>
J9JITExceptionTable [00007FFB9FE2C1F8]
CP=[0000000000077170], slots=[0000000000000003], NumExcpRanges=[0000000000000000], size=[00000000000002A2]
startPC=     [00007FFBA4D8A998]
endWarmPC=   [00007FFBA4D8AF0D]
startColdPC= [0000000000000000]
endPC=       [00007FFBA4D8AF0D]
hotness=     [0]
scalarTempSlots=0, objectTempSlots=7
prologuePushes=2, tempOffset=4
registerSaveDescription=[0000000000000202]
totalFrameSize=15 { Real Frame Size: 128 }
bodyInfo= [0000000000000000]

Stack Atlas:
  numberOfSlotsMapped=10
  numberOfMaps=25
  numberOfMapBytes=2
  parmBaseOffset=8
  numberOfParmSlots=3
  localBaseOffset=-56
  syncObjectTempOffset=-1

Offset info: 
Parm: 	GC Map Index: 0,	Offset: 128 (0x80)
Parm: 	GC Map Index: 1,	Offset: 136 (0x88)
Parm: 	GC Map Index: 2,	Offset: 144 (0x90)
Local: 	GC Map Index: 3,	Offset: 64 (0x40)
Local: 	GC Map Index: 4,	Offset: 72 (0x48)
Local: 	GC Map Index: 5,	Offset: 80 (0x50)
Local: 	GC Map Index: 6,	Offset: 88 (0x58)
Local: 	GC Map Index: 7,	Offset: 96 (0x60)
Local: 	GC Map Index: 8,	Offset: 104 (0x68)
Local: 	GC Map Index: 9,	Offset: 112 (0x70)
    stackmap location: 00007FFB9FE2C2F2
    map range: starting at [00007FFBA4D8A9FB]
      lowOffset: 00000063
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=1>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C2F8] { 00000000 }
      registers: 0000002C	{ 2:ecx 3:edx 5:esi }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C302
    map range: starting at [00007FFBA4D8AA18]
      lowOffset: 00000080
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=1>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C308] { 00000000 }
      registers: 00000029	{ 0:eax 3:edx 5:esi }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C312
    map range: starting at [00007FFBA4D8AA43]
      lowOffset: 000000AB
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=43>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C318] { 00000000 }
      registers: 0000002C	{ 2:ecx 3:edx 5:esi }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C322
    map range: starting at [00007FFBA4D8AA60]
      lowOffset: 000000C8
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=43>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C328] { 00000000 }
      registers: 00000029	{ 0:eax 3:edx 5:esi }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C332
    map range: starting at [00007FFBA4D8AA81]
      lowOffset: 000000E9
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=61>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C338] { 00000000 }
      registers: 0000002B	{ 0:eax 1:ebx 3:edx 5:esi }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C342
    map range: starting at [00007FFBA4D8AA90]
      lowOffset: 000000F8
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=61>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C348] { 00000000 }
      registers: 00000000	{ }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C352
    map range: starting at [00007FFBA4D8AB08]
      lowOffset: 00000170
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=7>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C358] { 00000000 }
      registers: 00000200	{ 9:r9 }
      stack map: 1111111111	{ 128 136 144 64 72 80 88 96 104 112 }

    stackmap location: 00007FFB9FE2C362
    map range: starting at [00007FFBA4D8AB2A]
      lowOffset: 00000192
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=14>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C368] { 00000000 }
      registers: 00000022	{ 1:ebx 5:esi }
      stack map: 1111111111	{ 128 136 144 64 72 80 88 96 104 112 }

    stackmap location: 00007FFB9FE2C372
    map range: starting at [00007FFBA4D8AB5F]
      lowOffset: 000001C7
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=18>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C378] { 00000000 }
      registers: 00000022	{ 1:ebx 5:esi }
      stack map: 1111111111	{ 128 136 144 64 72 80 88 96 104 112 }

    stackmap location: 00007FFB9FE2C382
    map range: starting at [00007FFBA4D8AB80]
      lowOffset: 000001E8
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=21>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C388] { 00000000 }
      registers: 00000202	{ 1:ebx 9:r9 }
      stack map: 1111111111	{ 128 136 144 64 72 80 88 96 104 112 }

    stackmap location: 00007FFB9FE2C392
    map range: starting at [00007FFBA4D8ABA2]
      lowOffset: 0000020A
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=32>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C398] { 00000000 }
      registers: 0000012B	{ 0:eax 1:ebx 3:edx 5:esi 8:r8 }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C3A2
    map range: starting at [00007FFBA4D8ABC5]
      lowOffset: 0000022D
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=36>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C3A8] { 00000000 }
      registers: 0000022E	{ 1:ebx 2:ecx 3:edx 5:esi 9:r9 }
      stack map: 1111111110	{ 128 136 144 64 72 80 88 96 104 }

    stackmap location: 00007FFB9FE2C3B2
    map range: starting at [00007FFBA4D8ABF0]
      lowOffset: 00000258
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=39>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C3B8] { 00000000 }
      registers: 00000202	{ 1:ebx 9:r9 }
      stack map: 1111111110	{ 128 136 144 64 72 80 88 96 104 }

    stackmap location: 00007FFB9FE2C3C2
    map range: starting at [00007FFBA4D8AC10]
      lowOffset: 00000278
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=52>, _isSameReceiver=1, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C3C8] { 00000000 }
      registers: 00000202	{ 1:ebx 9:r9 }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C3D2
    map range: starting at [00007FFBA4D8AC38]
      lowOffset: 000002A0
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=1>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C3D8] { 00000000 }
      registers: 00000000	{ }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C3E2
    map range: starting at [00007FFBA4D8ACEC]
      lowOffset: 00000354
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=36>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C3E8] { 00000000 }
      registers: 0000022E	{ 1:ebx 2:ecx 3:edx 5:esi 9:r9 }
      stack map: 1111111110	{ 128 136 144 64 72 80 88 96 104 }

    stackmap location: 00007FFB9FE2C3F2
    map range: starting at [00007FFBA4D8ACFD]
      lowOffset: 00000365
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=18>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C3F8] { 00000000 }
      registers: 00000022	{ 1:ebx 5:esi }
      stack map: 1111111111	{ 128 136 144 64 72 80 88 96 104 112 }

    stackmap location: 00007FFB9FE2C402
    map range: starting at [00007FFBA4D8AD0E]
      lowOffset: 00000376
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=14>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C408] { 00000000 }
      registers: 00000022	{ 1:ebx 5:esi }
      stack map: 1111111111	{ 128 136 144 64 72 80 88 96 104 112 }

    stackmap location: 00007FFB9FE2C412
    map range: starting at [00007FFBA4D8AD29]
      lowOffset: 00000391
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=14>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C418] { 00000000 }
      registers: 00000202	{ 1:ebx 9:r9 }
      stack map: 1111111111	{ 128 136 144 64 72 80 88 96 104 112 }

    stackmap location: 00007FFB9FE2C422
    map range: starting at [00007FFBA4D8AD45]
      lowOffset: 000003AD
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=43>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C428] { 00000000 }
      registers: 0000002C	{ 2:ecx 3:edx 5:esi }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C432
    map range: starting at [00007FFBA4D8AD60]
      lowOffset: 000003C8
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=43>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C438] { 00000000 }
      registers: 0000001C	{ 2:ecx 3:edx 4:edi }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C442
    map range: starting at [00007FFBA4D8AD7C]
      lowOffset: 000003E4
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=1>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C448] { 00000000 }
      registers: 0000002C	{ 2:ecx 3:edx 5:esi }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C452
    map range: starting at [00007FFBA4D8AD97]
      lowOffset: 000003FF
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=1>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C458] { 00000000 }
      registers: 0000001C	{ 2:ecx 3:edx 4:edi }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }

    stackmap location: 00007FFB9FE2C462
    map range: starting at [00007FFBA4D8ADB1]
      lowOffset: 00000419
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=0>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C468] { 00000000 }
      registers: 7FE20029	{ 0:eax 3:edx 5:esi 17:st(0) 21:st(4) 22:st(5) 23:st(6) 24:st(7) 25:mm0 26:mm1 27:mm2 28:mm3 29:mm4 30:mm5 }
      stack map: 1110000000	{ 128 136 144 }

    stackmap location: 00007FFB9FE2C472
    map range: starting at [00007FFBA4D8AE2A]
      lowOffset: 00000492
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=61>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [9FE2C478] { 00000000 }
      registers: 00000000	{ }
      stack map: 1111111100	{ 128 136 144 64 72 80 88 96 }



Method liveMonitor mask: 0000000000	{ }



</metadata>
<instructions
	title="Mixed Mode Disassembly"
	method="java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;">


 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\    0 JBaload0getfield 

0x7ffba4d8a970 ffffffd8 [0x7ffb72174df0]                                    Label L0022:			# LABEL
0x7ffba4d8a970 ffffffd8 [0x7ffb72174f60] 48 bf 38 84 07 00 00 00 00 00      mov	rdi, 0x0000000000078438	# MOV8RegImm64
0x7ffba4d8a97a ffffffe2 [0x7ffb721752b0] 48 89 44 24 18                     mov	qword ptr [rsp+0x18], rax		# S8MemReg, SymRef [#402 +24]
0x7ffba4d8a97f ffffffe7 [0x7ffb721754f0] 48 89 74 24 10                     mov	qword ptr [rsp+0x10], rsi		# S8MemReg, SymRef [#403 +16]
0x7ffba4d8a984 ffffffec [0x7ffb72175730] 48 89 54 24 08                     mov	qword ptr [rsp+0x8], rdx		# S8MemReg, SymRef [#404 +8]
0x7ffba4d8a989 fffffff1 [0x7ffb72175a10]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a989 fffffff1 [0x7ffb721757c0] e9 e2 30 b8 1e                     jmp	j2iTransition           # JMP4 (00007FFBC390DA70)# JMP4
0x7ffba4d8a98e fffffff6 [0x7ffb72175a90] 66 90                              nop (2 bytes)		# Alignment (boundary=8, margin=8)
0x7ffba4d8a990 fffffff8 [0x7ffb72175b20] eb de                              jmp	Label L0022			# JMP1
0x7ffba4d8a992 fffffffa [0x7ffb72175bc0] cc cc                              .short	0xcccc		# DWImm2
0x7ffba4d8a994 fffffffc [0x7ffb72175c50] 05 00 0f 00                        .int	0x000f0005		# DDImm4
0x7ffba4d8a998 00000000 [0x7ffb72175f50]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a998 00000000 [0x7ffb72255470] 48 8b 44 24 18                     mov	rax, qword ptr [rsp+0x18]		# L8RegMem, SymRef [#494 +24]
0x7ffba4d8a99d 00000005 [0x7ffb72255590] 48 8b 74 24 10                     mov	rsi, qword ptr [rsp+0x10]		# L8RegMem, SymRef [#495 +16]
0x7ffba4d8a9a2 0000000a [0x7ffb722556b0] 48 8b 54 24 08                     mov	rdx, qword ptr [rsp+0x8]		# L8RegMem, SymRef [#496 +8]
0x7ffba4d8a9a7 0000000f [0x7ffb72255740]                                    nop (0 bytes)		# Align patchable code @32 [0x0:2]
0x7ffba4d8a9a7 0000000f [0x7ffb72175d20]                                    ProcEntry                       # PROCENTRY
0x7ffba4d8a9a7 0000000f [0x7ffb72255900] 48 89 44 24 18                     mov	qword ptr [rsp+0x18], rax		# S8MemReg, SymRef [#497 +24]
0x7ffba4d8a9ac 00000014 [0x7ffb72255a20] 48 89 74 24 10                     mov	qword ptr [rsp+0x10], rsi		# S8MemReg, SymRef [#498 +16]
0x7ffba4d8a9b1 00000019 [0x7ffb72255b40] 48 89 54 24 08                     mov	qword ptr [rsp+0x8], rdx		# S8MemReg, SymRef [#499 +8]
0x7ffba4d8a9b6 0000001e [0x7ffb72255bd0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8a9b6 0000001e [0x7ffb72255cf0] 48 3b 65 50                        cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#500 +80]
0x7ffba4d8a9ba 00000022 [0x7ffb72255ea0]                                    Label L0320:			# LABEL	# (Start of internal control flow)
0x7ffba4d8a9ba 00000022 [0x7ffb72255f40] 0f 86 ec 03 00 00                  jbe	Outlined Label L0322			# JBE4
0x7ffba4d8a9c0 00000028 [0x7ffb72255fe0]                                    Label L0321:			# LABEL	# (End of internal control flow)
0x7ffba4d8a9c0 00000028 [0x7ffb72256450] 48 83 ec 78                        sub	rsp, 0x00000078	# SUB8RegImms
0x7ffba4d8a9c4 0000002c [0x7ffb72256570] 4c 89 4c 24 38                     mov	qword ptr [rsp+0x38], r9		# S8MemReg, SymRef [#501 +56]
0x7ffba4d8a9c9 00000031 [0x7ffb72256690] 48 89 5c 24 30                     mov	qword ptr [rsp+0x30], rbx		# S8MemReg, SymRef [#502 +48]
0x7ffba4d8a9ce 00000036 [0x7ffb72256720] 48 33 ff                           xor	rdi, rdi		# XOR8RegReg
0x7ffba4d8a9d1 00000039 [0x7ffb72256840] 4c 8d 47 04                        lea	r8, qword ptr [rdi+0x4]		# LEA8RegMem, SymRef [#503 +4]
0x7ffba4d8a9d5 0000003d [0x7ffb72256930]                                    Label L0323:			# LABEL
0x7ffba4d8a9d5 0000003d [0x7ffb72256a60] 4a 89 7c c4 40                     mov	qword ptr [rsp+8*r8+0x40], rdi		# S8MemReg, SymRef [#504 +64]
0x7ffba4d8a9da 00000042 [0x7ffb72256af0] 41 83 e8 01                        sub	r8d, 0x00000001	# SUB4RegImms
0x7ffba4d8a9de 00000046 [0x7ffb72256b80] 73 f5                              jae	Label L0323			# JAE1
0x7ffba4d8a9e0 00000048 [0x7ffb722557e0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8a9e0 00000048 [0x7ffb72176780]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a9e0 00000048 [0x7ffb72176530]                                    Label L0032:			# LABEL
0x7ffba4d8a9e0 00000048 [0x7ffb722433a0] 48 8b ce                           mov	rcx, rsi		# MOV8RegReg
0x7ffba4d8a9e3 0000004b [0x7ffb72243310] 48 8b f8                           mov	rdi, rax		# MOV8RegReg
========================================
0x7ffba4d8a9e6 0000004e [0x7ffb72176800]                                    Fence Relative [ 00007FFB72050690 ]	# FENCE BBStart <block_2> (frequency 10000)
0x7ffba4d8a9e6 0000004e [0x7ffb721774c0]                                    Label L0034:			# LABEL	# (Start of internal control flow)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\    1 JBgetfield 69 java/lang/reflect/Method.override Z

0x7ffba4d8a9e6 0000004e [0x7ffb721775f0] 4c 8d 05 ce 03 00 00               lea	r8, qword ptr [Snippet Label L0033 : 0x7ffba4d8adbb]		# LEA8RegMem
0x7ffba4d8a9ed 00000055 [0x7ffb72177710] 49 83 78 10 ff                     cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#406 +16]
0x7ffba4d8a9f2 0000005a [0x7ffb722421a0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8a9f2 0000005a [0x7ffb721777a0] 0f 84 8e 03 00 00                  je	Outlined Label L0036			# JE4
0x7ffba4d8a9f8 00000060 [0x7ffb72178370]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8a9f8 00000060 [0x7ffb72178120]                                    Label L0035:			# LABEL	# (End of internal control flow)
0x7ffba4d8a9f8 00000060 [0x7ffb722420f0] 48 8b f7                           mov	rsi, rdi		# MOV8RegReg
0x7ffba4d8a9fb 00000063 [0x7ffb72178510]                                    Label L0038:			# LABEL	# (Start of internal control flow)
0x7ffba4d8a9fb 00000063 [0x7ffb721786c0] 8b 3e                              mov	edi, dword ptr [rsi]		# L4RegMem
0x7ffba4d8a9fd 00000065 [0x7ffb72178750] 81 e7 00 ff ff ff                  and	edi, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8aa03 0000006b [0x7ffb72178870] 66 f7 47 24 00 01                  test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#410 +36]
0x7ffba4d8aa09 00000071 [0x7ffb72240ec0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8aa09 00000071 [0x7ffb72178900] 0f 85 66 03 00 00                  jne	Outlined Label L0040			# JNE4
0x7ffba4d8aa0f 00000077 [0x7ffb72179230]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa0f 00000077 [0x7ffb72178fe0]                                    Label L0039:			# LABEL	# (End of internal control flow)
0x7ffba4d8aa0f 00000077 [0x7ffb72240e10] 48 87 f1                           xchg	rcx, rsi		# XCHG8RegReg
0x7ffba4d8aa12 0000007a [0x7ffb72240d80] 48 8b c1                           mov	rax, rcx		# MOV8RegReg
0x7ffba4d8aa15 0000007d [0x7ffb721796a0] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aa18 00000080 [0x7ffb72179610] e8 b6 03 00 00 00                  mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.override Z[#412  unresolved volatile Shadow] [flags 0x2601 0x0 ]
0x7ffba4d8aa1e 00000086 [0x7ffb72179740] 66 90                              nop (2 bytes)		# Padding (2 bytes)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\    4 JBifne 42

0x7ffba4d8aa20 00000088 [0x7ffb72179e50] 85 c9                              test	ecx, ecx		# TEST4RegReg
0x7ffba4d8aa22 0000008a [0x7ffb7217a220]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa22 0000008a [0x7ffb72179fd0] 0f 84 cc 00 00 00                  je	Label L0016			# JE4
0x7ffba4d8aa28 00000090 [0x7ffb7217a410]                                    Fence Relative [ 00007FFB72050694 ]	# FENCE BBEnd </block_2>
........................................
0x7ffba4d8aa28 00000090 [0x7ffb7217a530]                                    Fence Relative [ 00007FFB72146D50 ]	# FENCE BBStart <block_14> (frequency 9238) (extension of previous block)
0x7ffba4d8aa28 00000090 [0x7ffb7217a680]                                    Fence Relative [ 00007FFB72146D54 ]	# FENCE BBEnd </block_14>
0x7ffba4d8aa28 00000090 [0x7ffb7217a8c0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa28 00000090 [0x7ffb7217ace0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa28 00000090 [0x7ffb7217aa90]                                    Label L0048:			# LABEL
0x7ffba4d8aa28 00000090 [0x7ffb7217b570]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa28 00000090 [0x7ffb7217b320]                                    Label L0019:			# LABEL

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   42 JBaload0getfield 

0x7ffba4d8aa28 00000090 [0x7ffb72240bf0] 48 8b ce                           mov	rcx, rsi		# MOV8RegReg
0x7ffba4d8aa2b 00000093 [0x7ffb72240b60] 48 8b f8                           mov	rdi, rax		# MOV8RegReg
========================================
0x7ffba4d8aa2e 00000096 [0x7ffb7217b5f0]                                    Fence Relative [ 00007FFB720501D0 ]	# FENCE BBStart <block_7> (frequency 9726)
0x7ffba4d8aa2e 00000096 [0x7ffb7217bfa0]                                    Label L0065:			# LABEL	# (Start of internal control flow)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   43 JBgetfield 30 java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;

0x7ffba4d8aa2e 00000096 [0x7ffb7217c0d0] 4c 8d 05 b8 03 00 00               lea	r8, qword ptr [Snippet Label L0064 : 0x7ffba4d8aded]		# LEA8RegMem
0x7ffba4d8aa35 0000009d [0x7ffb7217c1f0] 49 83 78 10 ff                     cmp	qword ptr [r8+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#415 +16]
0x7ffba4d8aa3a 000000a2 [0x7ffb7223f9f0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8aa3a 000000a2 [0x7ffb7217c280] 0f 84 0f 03 00 00                  je	Outlined Label L0067			# JE4
0x7ffba4d8aa40 000000a8 [0x7ffb7217cca0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa40 000000a8 [0x7ffb7217ca50]                                    Label L0066:			# LABEL	# (End of internal control flow)
0x7ffba4d8aa40 000000a8 [0x7ffb7223f940] 48 8b f7                           mov	rsi, rdi		# MOV8RegReg
0x7ffba4d8aa43 000000ab [0x7ffb7217ce40]                                    Label L0069:			# LABEL	# (Start of internal control flow)
0x7ffba4d8aa43 000000ab [0x7ffb7217cff0] 8b 3e                              mov	edi, dword ptr [rsi]		# L4RegMem
0x7ffba4d8aa45 000000ad [0x7ffb7217d080] 81 e7 00 ff ff ff                  and	edi, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8aa4b 000000b3 [0x7ffb7217d1a0] 66 f7 47 24 00 01                  test	word ptr [rdi+0x24], 0x0100	# TEST2MemImm2, SymRef [#418 +36]
0x7ffba4d8aa51 000000b9 [0x7ffb7223e710]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8aa51 000000b9 [0x7ffb7217d230] 0f 85 e7 02 00 00                  jne	Outlined Label L0071			# JNE4
0x7ffba4d8aa57 000000bf [0x7ffb7217dad0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa57 000000bf [0x7ffb7217d880]                                    Label L0070:			# LABEL	# (End of internal control flow)
0x7ffba4d8aa57 000000bf [0x7ffb7223e660] 48 87 f1                           xchg	rcx, rsi		# XCHG8RegReg
0x7ffba4d8aa5a 000000c2 [0x7ffb7223e5d0] 48 8b c1                           mov	rax, rcx		# MOV8RegReg
0x7ffba4d8aa5d 000000c5 [0x7ffb7217de40] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aa60 000000c8 [0x7ffb7217ddb0] e8 a0 03 00 00 00                  mov	ecx, dword ptr [rax-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;[#420  unresolved volatile Shadow] [flags 0x2607 0x0 ]
0x7ffba4d8aa66 000000ce [0x7ffb7217dee0] 66 90                              nop (2 bytes)		# Padding (2 bytes)
0x7ffba4d8aa68 000000d0 [0x7ffb7217dff0] 48 8d 1c cd 00 00 00 00            lea	rbx, qword ptr [8*rcx]		# LEA8RegMem

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   46 JBastore3 

0x7ffba4d8aa70 000000d8 [0x7ffb7217e9c0] 48 89 5c 24 60                     mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#421  Auto +96] [flags 0x7 0x0 ]

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   48 JBifnonnull 56

0x7ffba4d8aa75 000000dd [0x7ffb7217ecd0] 48 85 db                           test	rbx, rbx		# TEST8RegReg
0x7ffba4d8aa78 000000e0 [0x7ffb7217f0a0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa78 000000e0 [0x7ffb7217ee50] 0f 84 87 01 00 00                  je	Label L0017			# JE4
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f2f0]                                    Fence Relative [ 00007FFB720501D4 ]	# FENCE BBEnd </block_7>
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f530]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f950]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa7e 000000e6 [0x7ffb7217f700]                                    Label L0074:			# LABEL
0x7ffba4d8aa7e 000000e6 [0x7ffb72180260]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aa7e 000000e6 [0x7ffb72180010]                                    Label L0020:			# LABEL
========================================
0x7ffba4d8aa7e 000000e6 [0x7ffb721802e0]                                    Fence Relative [ 00007FFB72050560 ]	# FENCE BBStart <block_9> (frequency 9726)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   56 JBaload3 

0x7ffba4d8aa7e 000000e6 [0x7ffb72181480] 48 8b c3                           mov	rax, rbx		# MOV8RegReg

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   61 JBinvokeinterface 74 jdk/internal/reflect/MethodAccessor.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

0x7ffba4d8aa81 000000e9 [0x7ffb72181620] 44 8b 0b                           mov	r9d, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
0x7ffba4d8aa84 000000ec [0x7ffb721816b0] 49 81 e1 00 ff ff ff               and	r9, 0xffffffffffffff00	# AND8RegImm4
0x7ffba4d8aa8b 000000f3 [0x7ffb72183470]                                    Label L0080:			# LABEL	# (Start of internal control flow)
0x7ffba4d8aa8b 000000f3 [0x7ffb72181a70] 0f 1f 44 00 00                     nop (5 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aa90 000000f8 [0x7ffb721819d0] e8 3b c4 6b 1e 00 00 00 00 00      mov	rbx, 0x0000000000000000	# MOV8RegImm64
0x7ffba4d8aa9a 00000102 [0x7ffb72181b10] 49 3b d9                           cmp	rbx, r9		# CMP8RegReg
0x7ffba4d8aa9d 00000105 [0x7ffb72181ba0] 75 07                              jne	Label L0083			# JNE1
0x7ffba4d8aa9f 00000107 [0x7ffb72181c40] e8 0c c6 6b 1e                     call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
0x7ffba4d8aaa4 0000010c [0x7ffb72181ce0] eb 3f                              jmp	Label L0081			# JMP1
0x7ffba4d8aaa6 0000010e [0x7ffb72181d80]                                    Label L0083:			# LABEL
0x7ffba4d8aaa6 0000010e [0x7ffb72182060] 66 90                              nop (2 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8aaa8 00000110 [0x7ffb72181fc0] e8 23 c5 6b 1e 00 00 00 00 00      mov	rbx, 0x0000000000000000	# MOV8RegImm64
0x7ffba4d8aab2 0000011a [0x7ffb72182100] 49 3b d9                           cmp	rbx, r9		# CMP8RegReg
0x7ffba4d8aab5 0000011d [0x7ffb72182190] 75 19                              jne	Label L0096			# JNE1
0x7ffba4d8aab7 0000011f [0x7ffb72182230] e8 f4 c5 6b 1e                     call	populateIPicSlotCall    # CALLImm4 (00007FFBC34470B0)# CALLImm4
0x7ffba4d8aabc 00000124 [0x7ffb721822d0] eb 27                              jmp	Label L0081			# JMP1
0x7ffba4d8aabe 00000126 [0x7ffb721824b0]                                    Label L0097:			# LABEL
0x7ffba4d8aabe 00000126 [0x7ffb72182550] 41 b8 78 01 00 00                  mov	r8d, 0x00000178	# MOV4RegImm4
0x7ffba4d8aac4 0000012c [0x7ffb72182670] 4c 2b 47 18                        sub	r8, qword ptr [rdi+0x18]		# SUB8RegMem, SymRef [#423 +24]
0x7ffba4d8aac8 00000130 [0x7ffb72182790] 43 ff a4 01 00 00 00 00            jmp	dword ptr [r9+1*r8]		# JMPMem
0x7ffba4d8aad0 00000138 [0x7ffb72182820]                                    Label L0096:			# LABEL
0x7ffba4d8aad0 00000138 [0x7ffb72182950] 49 8b 79 60                        mov	rdi, qword ptr [r9+0x60]		# L8RegMem, SymRef [#425 +96]
0x7ffba4d8aad4 0000013c [0x7ffb72182a70] 81 3f 00 57 0a 00                  cmp	dword ptr [rdi], 0x000a5700	# CMP4MemImm4
0x7ffba4d8aada 00000142 [0x7ffb72182b00] 0f 85 46 03 00 00                  jne	Snippet Label L0084		# JNE4	# (IPic Data)
0x7ffba4d8aae0 00000148 [0x7ffb72182df0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aae0 00000148 [0x7ffb72182ba0] e8 d9 ff ff ff                     call	Label L0097			# CALLImm4
0x7ffba4d8aae5 0000014d [0x7ffb72183760]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aae5 0000014d [0x7ffb72183510]                                    Label L0081:			# LABEL	# (End of internal control flow)
0x7ffba4d8aae5 0000014d [0x7ffb72184440]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aae5 0000014d [0x7ffb722585a0] 4c 8b 4c 24 38                     mov	r9, qword ptr [rsp+0x38]		# L8RegMem, SymRef [#505 +56]
0x7ffba4d8aaea 00000152 [0x7ffb722586c0] 48 8b 5c 24 30                     mov	rbx, qword ptr [rsp+0x30]		# L8RegMem, SymRef [#506 +48]
0x7ffba4d8aaef 00000157 [0x7ffb72258750] 48 83 c4 78                        add	rsp, 0x00000078	# ADD8RegImms

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   64 JBreturn1 

0x7ffba4d8aaf3 0000015b [0x7ffb72184210] c3                                 ret                             # RET
0x7ffba4d8aaf4 0000015c [0x7ffb72184580]                                    Fence Relative [ 00007FFB72050564 ]	# FENCE BBEnd </block_9>
0x7ffba4d8aaf4 0000015c [0x7ffb721847c0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aaf4 0000015c [0x7ffb721848a0]                                    Label L0098:			# LABEL
0x7ffba4d8aaf4 0000015c [0x7ffb721850f0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8aaf4 0000015c [0x7ffb72184ea0]                                    Label L0016:			# LABEL

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\    7 JBinvokestatic 32 jdk/internal/reflect/Reflection.getCallerClass()Ljava/lang/Class;

0x7ffba4d8aaf4 0000015c [0x7ffb7223e0f0] 48 89 54 24 68                     mov	qword ptr [rsp+0x68], rdx		# S8MemReg, #SPILL8, SymRef  <#SPILL8_493 0x7ffb72237290>[#493  Auto +104] [flags 0x80000000 0x0 ]
0x7ffba4d8aaf9 00000161 [0x7ffb7223df90] 48 89 74 24 70                     mov	qword ptr [rsp+0x70], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_492 0x7ffb72238ed0>[#492  Auto +112] [flags 0x80000000 0x0 ]
0x7ffba4d8aafe 00000166 [0x7ffb7223de30] 4c 8b c8                           mov	r9, rax		# MOV8RegReg
========================================
0x7ffba4d8ab01 00000169 [0x7ffb72185170]                                    Fence Relative [ 00007FFB720509E0 ]	# FENCE BBStart <block_3> (frequency 785)
0x7ffba4d8ab01 00000169 [0x7ffb72186570]                                    Label L0112:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab01 00000169 [0x7ffb72185ed0] 0f 1f 80 00 00 00 00               nop (7 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ab08 00000170 [0x7ffb72185e30] e8 45 03 00 00                     call	Snippet Label L0114     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8ab0d 00000175 [0x7ffb72186860]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab0d 00000175 [0x7ffb72186610]                                    Label L0113:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab0d 00000175 [0x7ffb7223dd40] 48 8b d8                           mov	rbx, rax		# MOV8RegReg

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   10 JBastore3 

0x7ffba4d8ab10 00000178 [0x7ffb72186d80] 48 89 5c 24 60                     mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#428  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8ab15 0000017d [0x7ffb72187990]                                    Label L0129:			# LABEL	# (Start of internal control flow)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   14 JBgetfield 15 java/lang/reflect/Method.clazz Ljava/lang/Class;

0x7ffba4d8ab15 0000017d [0x7ffb72187ac0] 48 8d 0d 45 03 00 00               lea	rcx, qword ptr [Snippet Label L0128 : 0x7ffba4d8ae61]		# LEA8RegMem
0x7ffba4d8ab1c 00000184 [0x7ffb72187be0] 48 83 79 10 ff                     cmp	qword ptr [rcx+0x10], 0xffffffffffffffff	# CMP8MemImms, SymRef [#431 +16]
0x7ffba4d8ab21 00000189 [0x7ffb7223bb00]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8ab21 00000189 [0x7ffb72187c70] 0f 84 f1 01 00 00                  je	Outlined Label L0131			# JE4
0x7ffba4d8ab27 0000018f [0x7ffb721886d0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab27 0000018f [0x7ffb72188480]                                    Label L0130:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab27 0000018f [0x7ffb7223ba50] 49 8b f1                           mov	rsi, r9		# MOV8RegReg
0x7ffba4d8ab2a 00000192 [0x7ffb72188870]                                    Label L0133:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab2a 00000192 [0x7ffb72188a20] 8b 0e                              mov	ecx, dword ptr [rsi]		# L4RegMem
0x7ffba4d8ab2c 00000194 [0x7ffb72188ab0] 81 e1 00 ff ff ff                  and	ecx, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8ab32 0000019a [0x7ffb72188bd0] 66 f7 41 24 00 01                  test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#434 +36]
0x7ffba4d8ab38 000001a0 [0x7ffb7223a7a0]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8ab38 000001a0 [0x7ffb72188c60] 0f 85 c9 01 00 00                  jne	Outlined Label L0135			# JNE4
0x7ffba4d8ab3e 000001a6 [0x7ffb72189500]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab3e 000001a6 [0x7ffb721892b0]                                    Label L0134:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab3e 000001a6 [0x7ffb72189870] 66 90                              nop (2 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ab40 000001a8 [0x7ffb721897e0] e8 34 03 00 00 00                  mov	eax, dword ptr [rsi-0x0]		# L4RegMem, SymRef  java/lang/reflect/Method.clazz Ljava/lang/Class;[#436  unresolved volatile Shadow] [flags 0x2607 0x0 ]
0x7ffba4d8ab46 000001ae [0x7ffb72189910] 66 90                              nop (2 bytes)		# Padding (2 bytes)
0x7ffba4d8ab48 000001b0 [0x7ffb72189a20] 48 8d 04 c5 00 00 00 00            lea	rax, qword ptr [8*rax]		# LEA8RegMem
0x7ffba4d8ab50 000001b8 [0x7ffb7218a310] 48 89 74 24 58                     mov	qword ptr [rsp+0x58], rsi		# S8MemReg, SymRef  <pending push temp 0>[#437  Auto +88] [flags 0x7 0x800 ]
0x7ffba4d8ab55 000001bd [0x7ffb7218a6a0] 48 89 5c 24 50                     mov	qword ptr [rsp+0x50], rbx		# S8MemReg, SymRef  <pending push temp 1>[#438  Auto +80] [flags 0x7 0x800 ]

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   18 JBgetfield 20 java/lang/reflect/Method.modifiers I

0x7ffba4d8ab5a 000001c2 [0x7ffb7218aac0] 48 89 44 24 48                     mov	qword ptr [rsp+0x48], rax		# S8MemReg, SymRef  <pending push temp 2>[#439  Auto +72] [flags 0x7 0x800 ]
0x7ffba4d8ab5f 000001c7 [0x7ffb7218b000]                                    Label L0139:			# LABEL	# (Start of internal control flow)
0x7ffba4d8ab5f 000001c7 [0x7ffb7218b1b0] 8b 0e                              mov	ecx, dword ptr [rsi]		# L4RegMem
0x7ffba4d8ab61 000001c9 [0x7ffb7218b240] 81 e1 00 ff ff ff                  and	ecx, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8ab67 000001cf [0x7ffb7218b360] 66 f7 41 24 00 01                  test	word ptr [rcx+0x24], 0x0100	# TEST2MemImm2, SymRef [#441 +36]
0x7ffba4d8ab6d 000001d5 [0x7ffb72239450]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8ab6d 000001d5 [0x7ffb7218b3f0] 0f 85 83 01 00 00                  jne	Outlined Label L0141			# JNE4
0x7ffba4d8ab73 000001db [0x7ffb7218bc90]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab73 000001db [0x7ffb7218ba40]                                    Label L0140:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab73 000001db [0x7ffb722393a0] 4c 8b ce                           mov	r9, rsi		# MOV8RegReg
0x7ffba4d8ab76 000001de [0x7ffb7218be20] 41 8b 41 50                        mov	eax, dword ptr [r9+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#443  Shadow +80] [flags 0x80603 0x0 ]
0x7ffba4d8ab7a 000001e2 [0x7ffb7218d280]                                    Label L0143:			# LABEL	# (Start of internal control flow)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   21 JBinvokestatic 70 java/lang/reflect/Modifier.isStatic(I)Z

0x7ffba4d8ab7a 000001e2 [0x7ffb7218cbe0] 66 0f 1f 44 00 00                  nop (6 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ab80 000001e8 [0x7ffb7218cb40] e8 26 03 00 00                     call	Snippet Label L0145     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8ab85 000001ed [0x7ffb7218d570]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab85 000001ed [0x7ffb7218d320]                                    Label L0144:			# LABEL	# (End of internal control flow)
0x7ffba4d8ab85 000001ed [0x7ffb72239290] 49 87 c1                           xchg	r9, rax		# XCHG8RegReg
0x7ffba4d8ab88 000001f0 [0x7ffb722391a0] 4c 8b 44 24 48                     mov	r8, qword ptr [rsp+0x48]		# L8RegMem ; $REMAT, SymRef  <pending push temp 2>[#491  Auto +72] [flags 0x7 0x800 ]
0x7ffba4d8ab8d 000001f5 [0x7ffb72239040] 48 8b 74 24 70                     mov	rsi, qword ptr [rsp+0x70]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_490 0x7ffb72238ed0>[#490  Auto +112] [flags 0x80000000 0x0 ]#, spilled for icall
0x7ffba4d8ab92 000001fa [0x7ffb72238e00] 48 8b 54 24 68                     mov	rdx, qword ptr [rsp+0x68]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_488 0x7ffb72237290>[#488  Auto +104] [flags 0x80000000 0x0 ]#, spilled for icall
0x7ffba4d8ab97 000001ff [0x7ffb72238ce0] 49 8b c9                           mov	rcx, r9		# MOV8RegReg

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   24 JBifeq 31

0x7ffba4d8ab9a 00000202 [0x7ffb7218db00] 85 c9                              test	ecx, ecx		# TEST4RegReg
0x7ffba4d8ab9c 00000204 [0x7ffb7218dfc0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ab9c 00000204 [0x7ffb7218dd00] 0f 85 86 00 00 00                  jne	Label L0018			# JNE4
0x7ffba4d8aba2 0000020a [0x7ffb7218e210]                                    Fence Relative [ 00007FFB720509E4 ]	# FENCE BBEnd </block_3>
........................................
0x7ffba4d8aba2 0000020a [0x7ffb7218e330]                                    Fence Relative [ 00007FFB72050300 ]	# FENCE BBStart <block_5> (frequency 766) (extension of previous block)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   32 JBinvokespecial 71 java/lang/Object.getClass()Ljava/lang/Class;

0x7ffba4d8aba2 0000020a [0x7ffb7218e5f0] 8b 0e                              mov	ecx, dword ptr [rsi]		# L4RegMem, SymRef  <vft-symbol>[#288  Shadow] [flags 0x18607 0x0 ]
0x7ffba4d8aba4 0000020c [0x7ffb7218e680] 48 81 e1 00 ff ff ff               and	rcx, 0xffffffffffffff00	# AND8RegImm4
0x7ffba4d8abab 00000213 [0x7ffb7218ea20] 48 8b 79 30                        mov	rdi, qword ptr [rcx+0x30]		# L8RegMem, SymRef  <javaLangClassFromClass>[#278  Shadow +48] [flags 0x607 0x0 ]

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   35 JBaload0getfield 

0x7ffba4d8abaf 00000217 [0x7ffb7218ed00] 48 89 7c 24 40                     mov	qword ptr [rsp+0x40], rdi		# S8MemReg, SymRef  <pending push temp 3>[#447  Auto +64] [flags 0x7 0x800 ]
0x7ffba4d8abb4 0000021c [0x7ffb7218f010]                                    Fence Relative [ 00007FFB72050304 ]	# FENCE BBEnd </block_5>
0x7ffba4d8abb4 0000021c [0x7ffb7218f250]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abb4 0000021c [0x7ffb7218f740]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abb4 0000021c [0x7ffb7218f4f0]                                    Label L0160:			# LABEL
0x7ffba4d8abb4 0000021c [0x7ffb72220510]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abb4 0000021c [0x7ffb722202c0]                                    Label L0021:			# LABEL
0x7ffba4d8abb4 0000021c [0x7ffb72238ab0] 4c 8b ca                           mov	r9, rdx		# MOV8RegReg
0x7ffba4d8abb7 0000021f [0x7ffb72238a20] 48 8b cf                           mov	rcx, rdi		# MOV8RegReg
0x7ffba4d8abba 00000222 [0x7ffb72238990] 49 8b d0                           mov	rdx, r8		# MOV8RegReg
0x7ffba4d8abbd 00000225 [0x7ffb72238900] 48 89 74 24 68                     mov	qword ptr [rsp+0x68], rsi		# S8MemReg, #SPILL8, SymRef  <#SPILL8_487 0x7ffb72237290>[#487  Auto +104] [flags 0x80000000 0x0 ]
0x7ffba4d8abc2 0000022a [0x7ffb722387a0] 48 8b f0                           mov	rsi, rax		# MOV8RegReg
========================================
0x7ffba4d8abc5 0000022d [0x7ffb72220590]                                    Fence Relative [ 00007FFB72050430 ]	# FENCE BBStart <block_6> (frequency 785)
0x7ffba4d8abc5 0000022d [0x7ffb72220ed0]                                    Label L0177:			# LABEL	# (Start of internal control flow)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   36 JBgetfield 20 java/lang/reflect/Method.modifiers I

0x7ffba4d8abc5 0000022d [0x7ffb72221080] 44 8b 16                           mov	r10d, dword ptr [rsi]		# L4RegMem
0x7ffba4d8abc8 00000230 [0x7ffb72221110] 41 81 e2 00 ff ff ff               and	r10d, 0xffffffffffffff00	# AND4RegImm4
0x7ffba4d8abcf 00000237 [0x7ffb72221230] 66 41 f7 42 24 00 01               test	word ptr [r10+0x24], 0x0100	# TEST2MemImm2, SymRef [#449 +36]
0x7ffba4d8abd6 0000023e [0x7ffb72237620]                                    vfpSave			# AdjustFramePtr
0x7ffba4d8abd6 0000023e [0x7ffb722212c0] 0f 85 09 01 00 00                  jne	Outlined Label L0179			# JNE4
0x7ffba4d8abdc 00000244 [0x7ffb72221ba0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abdc 00000244 [0x7ffb72221950]                                    Label L0178:			# LABEL	# (End of internal control flow)
0x7ffba4d8abdc 00000244 [0x7ffb72237570] 48 87 f3                           xchg	rbx, rsi		# XCHG8RegReg
0x7ffba4d8abdf 00000247 [0x7ffb72221d30] 44 8b 53 50                        mov	r10d, dword ptr [rbx+0x50]		# L4RegMem, SymRef  java/lang/reflect/Method.modifiers I[#451  Shadow +80] [flags 0x80603 0x0 ]

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   35 JBaload0getfield 

0x7ffba4d8abe3 0000024b [0x7ffb72222920] 48 8b c3                           mov	rax, rbx		# MOV8RegReg

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   36 JBgetfield 20 java/lang/reflect/Method.modifiers I

0x7ffba4d8abe6 0000024e [0x7ffb72222a40] 4c 89 14 24                        mov	qword ptr [rsp], r10		# S8MemReg
0x7ffba4d8abea 00000252 [0x7ffb722233c0]                                    Label L0181:			# LABEL	# (Start of internal control flow)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   39 JBinvokevirtual 72 java/lang/reflect/Method.checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V

0x7ffba4d8abea 00000252 [0x7ffb72222d20] 66 0f 1f 44 00 00                  nop (6 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8abf0 00000258 [0x7ffb72222c80] e8 e1 02 00 00                     call	Snippet Label L0183     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8abf5 0000025d [0x7ffb722236b0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8abf5 0000025d [0x7ffb72223460]                                    Label L0182:			# LABEL	# (End of internal control flow)
0x7ffba4d8abf5 0000025d [0x7ffb72237400] 48 8b 74 24 68                     mov	rsi, qword ptr [rsp+0x68]		# L8RegMem, #SPILL8, SymRef  <#SPILL8_486 0x7ffb72237290>[#486  Auto +104] [flags 0x80000000 0x0 ]#, spilled for call
0x7ffba4d8abfa 00000262 [0x7ffb72237200] 49 8b d1                           mov	rdx, r9		# MOV8RegReg
0x7ffba4d8abfd 00000265 [0x7ffb72237170] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7ffba4d8ac00 00000268 [0x7ffb72223b40]                                    Fence Relative [ 00007FFB72050434 ]	# FENCE BBEnd </block_6>
........................................
0x7ffba4d8ac00 00000268 [0x7ffb72223c60]                                    Fence Relative [ 00007FFB7215B1B0 ]	# FENCE BBStart <block_12> (frequency 785) (extension of previous block)
0x7ffba4d8ac00 00000268 [0x7ffb722240f0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac00 00000268 [0x7ffb72223ea0] e9 23 fe ff ff                     jmp	Label L0019			# JMP4
0x7ffba4d8ac05 0000026d [0x7ffb72224260]                                    Fence Relative [ 00007FFB7215B1B4 ]	# FENCE BBEnd </block_12>
0x7ffba4d8ac05 0000026d [0x7ffb722244a0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac05 0000026d [0x7ffb72224580]                                    Label L0192:			# LABEL
0x7ffba4d8ac05 0000026d [0x7ffb72224dd0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac05 0000026d [0x7ffb72224b80]                                    Label L0017:			# LABEL

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   51 JBaload0 

0x7ffba4d8ac05 0000026d [0x7ffb72237010] 4c 8b ca                           mov	r9, rdx		# MOV8RegReg
0x7ffba4d8ac08 00000270 [0x7ffb72236f80] 48 8b de                           mov	rbx, rsi		# MOV8RegReg
========================================
0x7ffba4d8ac0b 00000273 [0x7ffb72224e50]                                    Fence Relative [ 00007FFB72071210 ]	# FENCE BBStart <block_8> (frequency 180)
0x7ffba4d8ac0b 00000273 [0x7ffb72226a50]                                    Label L0208:			# LABEL	# (Start of internal control flow)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   52 JBinvokespecial 73 java/lang/reflect/Method.acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;

0x7ffba4d8ac0b 00000273 [0x7ffb72225bb0] 0f 1f 44 00 00                     nop (5 bytes)		# Avoid boundary @8 [0x0:8]
0x7ffba4d8ac10 00000278 [0x7ffb72225b10] e8 e4 02 00 00                     call	Snippet Label L0210     # CALLImm4 (Call Snippet)# CALLImm4
0x7ffba4d8ac15 0000027d [0x7ffb72226d40]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac15 0000027d [0x7ffb72226af0]                                    Label L0209:			# LABEL	# (End of internal control flow)
0x7ffba4d8ac15 0000027d [0x7ffb72236e70] 48 8b f3                           mov	rsi, rbx		# MOV8RegReg
0x7ffba4d8ac18 00000280 [0x7ffb72236de0] 49 8b d1                           mov	rdx, r9		# MOV8RegReg
0x7ffba4d8ac1b 00000283 [0x7ffb72236d50] 48 8b d8                           mov	rbx, rax		# MOV8RegReg

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   55 JBastore3 

0x7ffba4d8ac1e 00000286 [0x7ffb722272c0] 48 89 5c 24 60                     mov	qword ptr [rsp+0x60], rbx		# S8MemReg, SymRef  caller<auto slot 3>[#455  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8ac23 0000028b [0x7ffb72227510]                                    Fence Relative [ 00007FFB72071214 ]	# FENCE BBEnd </block_8>
........................................
0x7ffba4d8ac23 0000028b [0x7ffb72227630]                                    Fence Relative [ 00007FFB7215B3A0 ]	# FENCE BBStart <block_13> (frequency 180) (extension of previous block)
0x7ffba4d8ac23 0000028b [0x7ffb72227b60]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac23 0000028b [0x7ffb722278a0] e9 56 fe ff ff                     jmp	Label L0020			# JMP4
0x7ffba4d8ac28 00000290 [0x7ffb72227d00]                                    Fence Relative [ 00007FFB7215B3A4 ]	# FENCE BBEnd </block_13>
0x7ffba4d8ac28 00000290 [0x7ffb72227f40]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac28 00000290 [0x7ffb72228020]                                    Label L0224:			# LABEL
0x7ffba4d8ac28 00000290 [0x7ffb72228b50]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac28 00000290 [0x7ffb72228900]                                    Label L0018:			# LABEL
========================================
0x7ffba4d8ac28 00000290 [0x7ffb72228bd0]                                    Fence Relative [ 00007FFB72070EB0 ]	# FENCE BBStart <block_4> (frequency 24)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   28 JBgoto 35

0x7ffba4d8ac28 00000290 [0x7ffb72229270] 48 c7 44 24 40 00 00 00 00         mov	qword ptr [rsp+0x40], 0x00000000	# S8MemImm4, SymRef  <pending push temp 3>[#456  Auto +64] [flags 0x7 0x800 ]

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   27 JBaconstnull 

0x7ffba4d8ac31 00000299 [0x7ffb72229540] 33 ff                              xor	edi, edi		# XOR4RegReg
0x7ffba4d8ac33 0000029b [0x7ffb72229b90]                                    assocRegs                       # ASSOCREGS

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   28 JBgoto 35

0x7ffba4d8ac33 0000029b [0x7ffb722298d0] e9 7c ff ff ff                     jmp	Label L0021			# JMP4
0x7ffba4d8ac38 000002a0 [0x7ffb72229d30]                                    Fence Relative [ 00007FFB72070EB4 ]	# FENCE BBEnd </block_4>
0x7ffba4d8ac38 000002a0 [0x7ffb72229f70]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac38 000002a0 [0x7ffb7222a050]                                    Label L0240:			# LABEL
0x7ffba4d8ac38 000002a0 [0x7ffb7222a260]                                    Label L0256:			# LABEL
========================================
0x7ffba4d8ac38 000002a0 [0x7ffb7222a300]                                    Fence Relative [ 00007FFB720A0250 ]	# FENCE BBStart <block_10> (frequency 0) (catches ...) (cold)
0x7ffba4d8ac38 000002a0 [0x7ffb7222a470]                                    Fence Relative [ 00007FFB720A0254 ]	# FENCE BBEnd </block_10>
........................................
0x7ffba4d8ac38 000002a0 [0x7ffb7222a590]                                    Fence Relative [ 00007FFB72147000 ]	# FENCE BBStart <block_15> (frequency 0) (extension of previous block) (cold)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\    1 JBgetfield 69 java/lang/reflect/Method.override Z

0x7ffba4d8ac38 000002a0 [0x7ffb7222a850] 48 8b 84 24 90 00 00 00            mov	rax, qword ptr [rsp+0x90]		# L8RegMem, SymRef  this<'this' parm Ljava/lang/reflect/Method;>[#457  Parm +144] [flags 0xc0000107 0x0 ]
0x7ffba4d8ac40 000002a8 [0x7ffb7222ac50] 48 8b b4 24 88 00 00 00            mov	rsi, qword ptr [rsp+0x88]		# L8RegMem, SymRef  obj<parm 1 Ljava/lang/Object;>[#458  Parm +136] [flags 0xc0000107 0x0 ]
0x7ffba4d8ac48 000002b0 [0x7ffb7222b050] 48 8b 94 24 80 00 00 00            mov	rdx, qword ptr [rsp+0x80]		# L8RegMem, SymRef  args<parm 2 [Ljava/lang/Object;>[#459  Parm +128] [flags 0xc0000107 0x0 ]
0x7ffba4d8ac50 000002b8 [0x7ffb7222b370]                                    Fence Relative [ 00007FFB72147004 ]	# FENCE BBEnd </block_15>
0x7ffba4d8ac50 000002b8 [0x7ffb7222b5b0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac50 000002b8 [0x7ffb7222b9d0]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac50 000002b8 [0x7ffb7222b780]                                    Label L0272:			# LABEL
0x7ffba4d8ac50 000002b8 [0x7ffb7222c380]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ac50 000002b8 [0x7ffb7222c130]                                    Label L0288:			# LABEL
========================================
0x7ffba4d8ac50 000002b8 [0x7ffb7222c400]                                    Fence Relative [ 00007FFB720A0120 ]	# FENCE BBStart <block_11> (frequency 0) (cold)

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\    0 JBaload0getfield 

0x7ffba4d8ac50 000002b8 [0x7ffb7222cb50] 4c 8b 44 24 58                     mov	r8, qword ptr [rsp+0x58]		# L8RegMem, SymRef  <pending push temp 0>[#460  Auto +88] [flags 0x7 0x800 ]
0x7ffba4d8ac55 000002bd [0x7ffb7222cd80] 8b 8d 5c 01 00 00                  mov	ecx, dword ptr [rbp+0x15c]		# L4RegMem, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
0x7ffba4d8ac5b 000002c3 [0x7ffb7222cf20] 44 8d 51 58                        lea	r10d, dword ptr [rcx+0x58]		# LEA4RegMem, SymRef [#463 +88]
0x7ffba4d8ac5f 000002c7 [0x7ffb7222cfb0] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac62 000002ca [0x7ffb7222d150] 48 8b bd 68 09 00 00               mov	rdi, qword ptr [rbp+0x968]		# L8RegMem, SymRef  OSRBuffer[#315  MethodMeta +2408] [flags 0x10207 0x0 ]
0x7ffba4d8ac69 000002d1 [0x7ffb7222d1e0] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#394  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8ac6e 000002d6 [0x7ffb7222da90] 4c 8b 44 24 50                     mov	r8, qword ptr [rsp+0x50]		# L8RegMem, SymRef  <pending push temp 1>[#465  Auto +80] [flags 0x7 0x800 ]
0x7ffba4d8ac73 000002db [0x7ffb7222dcc0] 44 8d 51 50                        lea	r10d, dword ptr [rcx+0x50]		# LEA4RegMem, SymRef [#467 +80]
0x7ffba4d8ac77 000002df [0x7ffb7222dd50] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac7a 000002e2 [0x7ffb7222dde0] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#395  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8ac7f 000002e7 [0x7ffb7222e4d0] 4c 8b 44 24 48                     mov	r8, qword ptr [rsp+0x48]		# L8RegMem, SymRef  <pending push temp 2>[#468  Auto +72] [flags 0x7 0x800 ]
0x7ffba4d8ac84 000002ec [0x7ffb7222e700] 44 8d 51 48                        lea	r10d, dword ptr [rcx+0x48]		# LEA4RegMem, SymRef [#470 +72]
0x7ffba4d8ac88 000002f0 [0x7ffb7222e790] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac8b 000002f3 [0x7ffb7222e820] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#396  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8ac90 000002f8 [0x7ffb7222ef10] 4c 8b 44 24 40                     mov	r8, qword ptr [rsp+0x40]		# L8RegMem, SymRef  <pending push temp 3>[#471  Auto +64] [flags 0x7 0x800 ]
0x7ffba4d8ac95 000002fd [0x7ffb7222f140] 44 8d 51 40                        lea	r10d, dword ptr [rcx+0x40]		# LEA4RegMem, SymRef [#473 +64]
0x7ffba4d8ac99 00000301 [0x7ffb7222f1d0] 4d 63 d2                           movsxd	r10, r10d		# MOVSXReg8Reg4
0x7ffba4d8ac9c 00000304 [0x7ffb7222f260] 4d 89 44 3a 00                     mov	qword ptr [r10+1*rdi], r8		# S8MemReg, SymRef  <generic int shadow>[#397  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8aca1 00000309 [0x7ffb7222f930] 44 8d 41 78                        lea	r8d, dword ptr [rcx+0x78]		# LEA4RegMem, SymRef [#475 +120]
0x7ffba4d8aca5 0000030d [0x7ffb7222f9c0] 4d 63 c0                           movsxd	r8, r8d		# MOVSXReg8Reg4
0x7ffba4d8aca8 00000310 [0x7ffb7222fa50] 49 89 44 38 00                     mov	qword ptr [r8+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#398  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acad 00000315 [0x7ffb72230000] 8d 41 70                           lea	eax, dword ptr [rcx+0x70]		# LEA4RegMem, SymRef [#477 +112]
0x7ffba4d8acb0 00000318 [0x7ffb72230090] 48 63 c0                           movsxd	rax, eax		# MOVSXReg8Reg4
0x7ffba4d8acb3 0000031b [0x7ffb72230120] 48 89 74 38 00                     mov	qword ptr [rax+1*rdi], rsi		# S8MemReg, SymRef  <generic int shadow>[#399  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acb8 00000320 [0x7ffb72230670] 8d 41 68                           lea	eax, dword ptr [rcx+0x68]		# LEA4RegMem, SymRef [#479 +104]
0x7ffba4d8acbb 00000323 [0x7ffb72230700] 48 63 c0                           movsxd	rax, eax		# MOVSXReg8Reg4
0x7ffba4d8acbe 00000326 [0x7ffb72230790] 48 89 54 38 00                     mov	qword ptr [rax+1*rdi], rdx		# S8MemReg, SymRef  <generic int shadow>[#400  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acc3 0000032b [0x7ffb72230d00] 48 8b 44 24 60                     mov	rax, qword ptr [rsp+0x60]		# L8RegMem, SymRef  caller<auto slot 3>[#480  Auto +96] [flags 0x7 0x0 ]
0x7ffba4d8acc8 00000330 [0x7ffb72230f30] 8d 51 60                           lea	edx, dword ptr [rcx+0x60]		# LEA4RegMem, SymRef [#482 +96]
0x7ffba4d8accb 00000333 [0x7ffb72230fc0] 48 63 d2                           movsxd	rdx, edx		# MOVSXReg8Reg4
0x7ffba4d8acce 00000336 [0x7ffb72231050] 48 89 44 3a 00                     mov	qword ptr [rdx+1*rdi], rax		# S8MemReg, SymRef  <generic int shadow>[#401  Shadow] [flags 0x603 0x0 ]
0x7ffba4d8acd3 0000033b [0x7ffb72231520] 83 e9 80                           sub	ecx, 0xffffffffffffff80	# SUB4RegImms
0x7ffba4d8acd6 0000033e [0x7ffb72231640] 89 8d 5c 01 00 00                  mov	dword ptr [rbp+0x15c], ecx		# S4MemReg, SymRef  osrFrameIndex[#317  MethodMeta +348] [flags 0x203 0x0 ]
0x7ffba4d8acdc 00000344 [0x7ffb722319c0] 48 8b 85 70 09 00 00               mov	rax, qword ptr [rbp+0x970]		# L8RegMem, SymRef  osrReturnAddress[#318  MethodMeta +2416] [flags 0x10207 0x0 ]
0x7ffba4d8ace3 0000034b [0x7ffb72231a50] ff e0                              jmp	eax			# JMPReg
0x7ffba4d8ace5 0000034d [0x7ffb72231c50]                                    Fence Relative [ 00007FFB720A0124 ]	# FENCE BBEnd </block_11>
0x7ffba4d8ace5 0000034d [0x7ffb72231e90]                                    assocRegs                       # ASSOCREGS
0x7ffba4d8ace5 0000034d [0x7ffb72231f70]                                    Label L0304:			# LABEL
0x7ffba4d8ace5 0000034d [0x7ffb72238570]                                    vfpRestore [0x7ffb72237620]			# AdjustFramePtr
0x7ffba4d8ace5 0000034d [0x7ffb72221490]                                    Outlined Label L0179:			# LABEL

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   36 JBgetfield 20 java/lang/reflect/Method.modifiers I

0x7ffba4d8ace5 0000034d [0x7ffb72221680] 48 8d 05 d2 01 00 00               lea	rax, qword ptr [Snippet Label L0176 : 0x7ffba4d8aebe]		# LEA8RegMem
0x7ffba4d8acec 00000354 [0x7ffb72221710] e8 0f 99 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8acf1 00000359 [0x7ffb722217b0] e9 e6 fe ff ff                     jmp	Label L0178			# JMP4
0x7ffba4d8acf6 0000035e [0x7ffb722218b0]                                    Label L0180:			# LABEL
0x7ffba4d8acf6 0000035e [0x7ffb7223a4e0]                                    vfpRestore [0x7ffb72239450]			# AdjustFramePtr
0x7ffba4d8acf6 0000035e [0x7ffb7218b5c0]                                    Outlined Label L0141:			# LABEL

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   18 JBgetfield 20 java/lang/reflect/Method.modifiers I

0x7ffba4d8acf6 0000035e [0x7ffb7218b770] 48 8d 05 96 01 00 00               lea	rax, qword ptr [Snippet Label L0138 : 0x7ffba4d8ae93]		# LEA8RegMem
0x7ffba4d8acfd 00000365 [0x7ffb7218b800] e8 fe 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad02 0000036a [0x7ffb7218b8a0] e9 6c fe ff ff                     jmp	Label L0140			# JMP4
0x7ffba4d8ad07 0000036f [0x7ffb7218b9a0]                                    Label L0142:			# LABEL
0x7ffba4d8ad07 0000036f [0x7ffb7223b830]                                    vfpRestore [0x7ffb7223a7a0]			# AdjustFramePtr
0x7ffba4d8ad07 0000036f [0x7ffb72188e30]                                    Outlined Label L0135:			# LABEL

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   14 JBgetfield 15 java/lang/reflect/Method.clazz Ljava/lang/Class;

0x7ffba4d8ad07 0000036f [0x7ffb72188fe0] 48 8d 05 53 01 00 00               lea	rax, qword ptr [Snippet Label L0128 : 0x7ffba4d8ae61]		# LEA8RegMem
0x7ffba4d8ad0e 00000376 [0x7ffb72189070] e8 ed 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad13 0000037b [0x7ffb72189110] e9 26 fe ff ff                     jmp	Label L0134			# JMP4
0x7ffba4d8ad18 00000380 [0x7ffb72189210]                                    Label L0136:			# LABEL
0x7ffba4d8ad18 00000380 [0x7ffb7223db10]                                    vfpRestore [0x7ffb7223bb00]			# AdjustFramePtr
0x7ffba4d8ad18 00000380 [0x7ffb72187d80]                                    Outlined Label L0131:			# LABEL
0x7ffba4d8ad18 00000380 [0x7ffb72187f60] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad22 0000038a [0x7ffb72188000] 48 c7 c6 0f 00 00 00               mov	rsi, 0x0000000f	# MOV8RegImm4
0x7ffba4d8ad29 00000391 [0x7ffb72188090] e8 f2 e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad2e 00000396 [0x7ffb72188130] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ad35 0000039d [0x7ffb72188250] 48 89 41 10                        mov	qword ptr [rcx+0x10], rax		# S8MemReg, SymRef [#432 +16]
0x7ffba4d8ad39 000003a1 [0x7ffb721882e0] e9 e9 fd ff ff                     jmp	Label L0130			# JMP4
0x7ffba4d8ad3e 000003a6 [0x7ffb721883e0]                                    Label L0132:			# LABEL
0x7ffba4d8ad3e 000003a6 [0x7ffb7223f720]                                    vfpRestore [0x7ffb7223e710]			# AdjustFramePtr
0x7ffba4d8ad3e 000003a6 [0x7ffb7217d400]                                    Outlined Label L0071:			# LABEL

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\   43 JBgetfield 30 java/lang/reflect/Method.methodAccessor Ljdk/internal/reflect/MethodAccessor;

0x7ffba4d8ad3e 000003a6 [0x7ffb7217d5b0] 48 8d 05 a8 00 00 00               lea	rax, qword ptr [Snippet Label L0064 : 0x7ffba4d8aded]		# LEA8RegMem
0x7ffba4d8ad45 000003ad [0x7ffb7217d640] e8 b6 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad4a 000003b2 [0x7ffb7217d6e0] e9 08 fd ff ff                     jmp	Label L0070			# JMP4
0x7ffba4d8ad4f 000003b7 [0x7ffb7217d7e0]                                    Label L0072:			# LABEL
0x7ffba4d8ad4f 000003b7 [0x7ffb72240980]                                    vfpRestore [0x7ffb7223f9f0]			# AdjustFramePtr
0x7ffba4d8ad4f 000003b7 [0x7ffb7217c390]                                    Outlined Label L0067:			# LABEL
0x7ffba4d8ad4f 000003b7 [0x7ffb7217c530] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad59 000003c1 [0x7ffb7217c5d0] 48 c7 c6 1e 00 00 00               mov	rsi, 0x0000001e	# MOV8RegImm4
0x7ffba4d8ad60 000003c8 [0x7ffb7217c660] e8 bb e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad65 000003cd [0x7ffb7217c700] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ad6c 000003d4 [0x7ffb7217c820] 49 89 40 10                        mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#416 +16]
0x7ffba4d8ad70 000003d8 [0x7ffb7217c8b0] e9 cb fc ff ff                     jmp	Label L0066			# JMP4
0x7ffba4d8ad75 000003dd [0x7ffb7217c9b0]                                    Label L0068:			# LABEL
0x7ffba4d8ad75 000003dd [0x7ffb72241ed0]                                    vfpRestore [0x7ffb72240ec0]			# AdjustFramePtr
0x7ffba4d8ad75 000003dd [0x7ffb72178ad0]                                    Outlined Label L0040:			# LABEL

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\    1 JBgetfield 69 java/lang/reflect/Method.override Z

0x7ffba4d8ad75 000003dd [0x7ffb72178c80] 48 8d 05 3f 00 00 00               lea	rax, qword ptr [Snippet Label L0033 : 0x7ffba4d8adbb]		# LEA8RegMem
0x7ffba4d8ad7c 000003e4 [0x7ffb72178da0] e8 7f 98 b7 1e                     call	jitReportInstanceFieldRead# CALLImm4 (00007FFBC3904600)# CALLImm4
0x7ffba4d8ad81 000003e9 [0x7ffb72178e40] e9 89 fc ff ff                     jmp	Label L0039			# JMP4
0x7ffba4d8ad86 000003ee [0x7ffb72178f40]                                    Label L0041:			# LABEL
0x7ffba4d8ad86 000003ee [0x7ffb72243130]                                    vfpRestore [0x7ffb722421a0]			# AdjustFramePtr
0x7ffba4d8ad86 000003ee [0x7ffb721778b0]                                    Outlined Label L0036:			# LABEL
0x7ffba4d8ad86 000003ee [0x7ffb72177b70] 48 b8 70 71 07 00 00 00 00 00      mov	rax, 0x0000000000077170	# MOV8RegImm64
0x7ffba4d8ad90 000003f8 [0x7ffb72177c10] 48 c7 c6 45 00 00 00               mov	rsi, 0x00000045	# MOV8RegImm4
0x7ffba4d8ad97 000003ff [0x7ffb72177d30] e8 84 e0 b7 1e                     call	jitResolveFieldDirect   # CALLImm4 (00007FFBC3908E20)# CALLImm4
0x7ffba4d8ad9c 00000404 [0x7ffb72177dd0] 48 81 e8 04 00 00 00               sub	rax, 0x00000004	# SUB8RegImm4
0x7ffba4d8ada3 0000040b [0x7ffb72177ef0] 49 89 40 10                        mov	qword ptr [r8+0x10], rax		# S8MemReg, SymRef [#408 +16]
0x7ffba4d8ada7 0000040f [0x7ffb72177f80] e9 4c fc ff ff                     jmp	Label L0035			# JMP4
0x7ffba4d8adac 00000414 [0x7ffb72178080]                                    Label L0037:			# LABEL
0x7ffba4d8adac 00000414 [0x7ffb72256080]                                    vfpRestore [0x7ffb72255bd0]			# AdjustFramePtr
0x7ffba4d8adac 00000414 [0x7ffb72256110]                                    Outlined Label L0322:			# LABEL

 \\ java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 \\    0 JBaload0getfield 

0x7ffba4d8adac 00000414 [0x7ffb722561b0] bf 78 00 00 00                     mov	edi, 0x00000078	# MOV4RegImm4
0x7ffba4d8adb1 00000419 [0x7ffb722562d0] e8 2a 80 b7 1e                     call	jitStackOverflow        # CALLImm4 (00007FFBC3902DE0)# CALLImm4
0x7ffba4d8adb6 0000041e [0x7ffb72256370] e9 05 fc ff ff                     jmp	Label L0321			# JMP4
</instructions>
<snippets>

00007FFBA4D8ADBB 00000423                                                 Snippet Label L0033:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8adbb 00000423                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8adc3 0000042b                      01 00 00 00 00 00 00 00        DC   	1 		# location
0x7ffba4d8adcb 00000433                      ff ff ff ff ff ff ff ff        DC   	4294967295 		# offset

00007FFBA4D8ADD3 0000043b                                                 Snippet Label L0042:		# Unresolved Data Snippet for instr [0x7ffb72179610]
0x7ffba4d8add3 0000043b                      e8 a8 d4 6b 1e                 call	interpreterUnresolvedFieldGlue
0x7ffba4d8add8 00000440                      70 71 07 00 00 00 00 00        .quad	0000000000077170	# address of constant pool for this method
0x7ffba4d8ade0 00000448                      45 00 00 00                    .int	0x00000045				# constant pool index
0x7ffba4d8ade4 0000044c                      62                             .byte	62							# instruction descriptor: length=6, disp32 offset=2
0x7ffba4d8ade5 0000044d                      8b 88 00 00 00 00 66 90        .byte	(8)						# patch instruction bytes

00007FFBA4D8ADED 00000455                                                 Snippet Label L0064:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8aded 00000455                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8adf5 0000045d                      2b 00 00 00 00 00 00 00        DC   	43 		# location
0x7ffba4d8adfd 00000465                      ff ff ff ff ff ff ff ff        DC   	4294967295 		# offset

00007FFBA4D8AE05 0000046d                                                 Snippet Label L0073:		# Unresolved Data Snippet for instr [0x7ffb7217ddb0]
0x7ffba4d8ae05 0000046d                      e8 76 d4 6b 1e                 call	interpreterUnresolvedFieldGlue
0x7ffba4d8ae0a 00000472                      70 71 07 00 00 00 00 00        .quad	0000000000077170	# address of constant pool for this method
0x7ffba4d8ae12 0000047a                      1e 00 00 00                    .int	0x0000001e				# constant pool index
0x7ffba4d8ae16 0000047e                      62                             .byte	62							# instruction descriptor: length=6, disp32 offset=2
0x7ffba4d8ae17 0000047f                      8b 88 00 00 00 00 66 90        .byte	(8)						# patch instruction bytes

00007FFBA4D8AE26 0000048e                                                 Snippet Label L0084:		# IPic Data
0x7ffba4d8ae26 0000048e                      e8 e5 c3 6b 1e                 call	IPicLookupDispatch 		# 00007FFBC3447210
0x7ffba4d8ae2b 00000493                      e9 b5 fc ff ff                 jmp	Label L0081
0x7ffba4d8ae30 00000498                      70 71 07 00 00 00 00 00        DQ	0000000000077170		# owning method cpAddr
0x7ffba4d8ae38 000004a0                      4a 00 00 00 00 00 00 00        DQ	000000000000004A		# cpIndex
0x7ffba4d8ae40 000004a8                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# interface class (initially null)
0x7ffba4d8ae48 000004b0                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# itable offset (initially zero)
0x7ffba4d8ae50 000004b8                      48                             .byte	0x48								# REX of MOVRegImm64
0x7ffba4d8ae51 000004b9                      bb                             .byte	bb								# MOV opcode of MOVRegImm64

00007FFBA4D8AE52 000004ba                                                 Snippet Label L0114:		# Call Snippet
0x7ffba4d8ae52 000004ba                      48 bf f8 99 05 00 00 00 00 00  mov 	rdi, 0x599f8		# MOV8RegImm64
0x7ffba4d8ae5c 000004c4                      e9 df cb 6b 1e                 jmp 	interpreterLongStaticGlue		# jump out of snippet code

00007FFBA4D8AE61 000004c9                                                 Snippet Label L0128:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8ae61 000004c9                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8ae69 000004d1                      0e 00 00 00 00 00 00 00        DC   	14 		# location
0x7ffba4d8ae71 000004d9                      ff ff ff ff ff ff ff ff        DC   	4294967295 		# offset

00007FFBA4D8AE79 000004e1                                                 Snippet Label L0137:		# Unresolved Data Snippet for instr [0x7ffb721897e0]
0x7ffba4d8ae79 000004e1                      e8 02 d4 6b 1e                 call	interpreterUnresolvedFieldGlue
0x7ffba4d8ae7e 000004e6                      70 71 07 00 00 00 00 00        .quad	0000000000077170	# address of constant pool for this method
0x7ffba4d8ae86 000004ee                      0f 00 00 00                    .int	0x0000000f				# constant pool index
0x7ffba4d8ae8a 000004f2                      62                             .byte	62							# instruction descriptor: length=6, disp32 offset=2
0x7ffba4d8ae8b 000004f3                      8b 86 00 00 00 00 66 90        .byte	(8)						# patch instruction bytes

00007FFBA4D8AE93 000004fb                                                 Snippet Label L0138:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8ae93 000004fb                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8ae9b 00000503                      12 00 00 00 00 00 00 00        DC   	18 		# location
0x7ffba4d8aea3 0000050b                      4c 00 00 00 00 00 00 00        DC   	76 		# offset

00007FFBA4D8AEAB 00000513                                                 Snippet Label L0145:		# Call Snippet
0x7ffba4d8aeab 00000513                      89 44 24 08                    mov 	dword ptr[rsp+8], eax		#save registers for interpreter call snippet
0x7ffba4d8aeaf 00000517                      48 bf e8 90 0f 00 00 00 00 00  mov 	rdi, 0xf90e8		# MOV8RegImm64
0x7ffba4d8aeb9 00000521                      e9 82 cb 6b 1e                 jmp 	interpreterIntStaticGlue		# jump out of snippet code

00007FFBA4D8AEBE 00000526                                                 Snippet Label L0176:		# J9WatchedInstanceFieldSnippet
0x7ffba4d8aebe 00000526                      38 84 07 00 00 00 00 00        DC   	0000000000078438 		# J9Method
0x7ffba4d8aec6 0000052e                      24 00 00 00 00 00 00 00        DC   	36 		# location
0x7ffba4d8aece 00000536                      4c 00 00 00 00 00 00 00        DC   	76 		# offset

00007FFBA4D8AED6 0000053e                                                 Snippet Label L0183:		# Call Snippet
0x7ffba4d8aed6 0000053e                      48 89 44 24 28                 mov 	qword ptr[rsp+40], rax		#save registers for interpreter call snippet
0x7ffba4d8aedb 00000543                      48 89 74 24 20                 mov 	qword ptr[rsp+32], rsi		#save registers for interpreter call snippet
0x7ffba4d8aee0 00000548                      48 89 54 24 18                 mov 	qword ptr[rsp+24], rdx		#save registers for interpreter call snippet
0x7ffba4d8aee5 0000054d                      48 89 4c 24 10                 mov 	qword ptr[rsp+16], rcx		#save registers for interpreter call snippet
0x7ffba4d8aeea 00000552                      48 bf c0 42                    mov 	dword ptr[rsp+8], 		#save registers for interpreter call snippet
0x7ffba4d8aeee 00000556                      07 00 00 00 00 00 e9 47 cb 6b  mov 	rdi, 0x742c0		# MOV8RegImm64
0x7ffba4d8aef8 00000560                      1e 48 89 44 24                 jmp 	interpreterVoidStaticGlue		# jump out of snippet code

00007FFBA4D8AEF9 00000561                                                 Snippet Label L0210:		# Call Snippet
0x7ffba4d8aef9 00000561                      48 89 44 24 08                 mov 	qword ptr[rsp+8], rax		#save registers for interpreter call snippet
0x7ffba4d8aefe 00000566                      48 bf d8 84 07 00 00 00 00 00  mov 	rdi, 0x784d8		# MOV8RegImm64
0x7ffba4d8af08 00000570                      e9 33 cb 6b 1e                 jmp 	interpreterLongStaticGlue		# jump out of snippet code
</snippets>
</logRecompilation>
</jitDump>
