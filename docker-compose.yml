version: '3'

services:
  redis:
    image: redis:alpine
    container_name: "redis"
    command: redis-server --requirepass sOmE_sEcUrE_pAsS

    ports:
      - 6379:6379

    volumes:
      - ./docker-volumes/redis/data/:/var/lib/redis
      - ./docker-volumes/redis/config/redis.conf/:/usr/local/etc/redis/redis.conf

    environment:
      - REDIS_REPLICATION_MODE=master


  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: "kafka"
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REPLICA_FETCH_MAX_BYTES: 2147483646
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 2147483646
      KAFKA_MESSAGE_MAX_BYTES: 2147483646
      KAFKA_REQUEST_TIMEOUT_MS: 30000
      KAFKA_RESERVED_BROKER_MAX_ID: 1000
    depends_on:
      - zookeeper

    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --topic flow --describe" ]
      interval: 2s
      timeout: 2s
      retries: 15

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: zookeeper
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

    depends_on:
      database:
        condition: service_healthy

  eureka-service:
    container_name: eureka-service
    hostname: eureka-service
    build: ./eureka-service


    mem_limit: 350m

    ports:
    - 8761:8761

    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-service:8761" ]
      interval: 30s
      timeout: 10s
      retries: 5

  zuul-service:
    container_name: zuul-service
    hostname: zuul-service
    build: ./zuul-service

    command: "mvn spring-boot:run -Dspring.devtools.restart.enabled=true"

    mem_limit: 350m

    ports:
    - 80:80

    depends_on:
      eureka-service:
        condition: service_started
      database:
        condition: service_healthy

    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka

  database:
    image: mariadb # or mysql they are basically the same
    container_name: flowcontrol_database
    restart: always

    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: user
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'

    entrypoint:
      sh -c "
      echo 'CREATE DATABASE IF NOT EXISTS article; GRANT ALL PRIVILEGES ON article.* TO '\''user'\''@'\''%'\'';
      CREATE DATABASE IF NOT EXISTS farmer; GRANT ALL PRIVILEGES ON farmer.* TO '\''user'\''@'\''%'\'';
      CREATE DATABASE IF NOT EXISTS transport; GRANT ALL PRIVILEGES ON transport.* TO '\''user'\''@'\''%'\'';
      CREATE DATABASE IF NOT EXISTS authservice; GRANT ALL PRIVILEGES ON authservice.* TO '\''user'\''@'\''%'\'';
      CREATE DATABASE IF NOT EXISTS production; GRANT ALL PRIVILEGES ON production.* TO '\''user'\''@'\''%'\'';
      CREATE DATABASE IF NOT EXISTS transport; GRANT ALL PRIVILEGES ON transport.* TO '\''user'\''@'\''%'\''; ' >> /docker-entrypoint-initdb.d/init.sql;
      /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
      "

    volumes:
      - ./docker-volumes/database/init/:/docker-entrypoint-initdb.d
      - ./docker-volumes/database/mariadb/:/var/lib/mysql

    ports:
      - 6073:3306

    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      timeout: 20s
      retries: 10

  article-service:
    container_name: article-service
    build: ./article

    mem_limit: 500m
    mem_reservation: 100m
    cpus: 0.8

    ports:
      - 7078:7078

    depends_on:
      eureka-service:
        condition: service_healthy
      database:
        condition: service_healthy

    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      WAIT_HOSTS=database: 6073
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECTION_TIMEOUT: 30
      SPRING_DATASOURCE_URL: jdbc:mariadb://database:3306/article
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

  farmer-service:
    container_name: farmer-service
    build: ./farmer
    mem_limit: 500m
    mem_reservation: 100m
    cpus: 0.8


    ports:
      - 7071:7071

    depends_on:
      eureka-service:
        condition: service_healthy
      database:
        condition: service_healthy

    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      WAIT_HOSTS=database: 6073
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECTION_TIMEOUT: 30
      SPRING_DATASOURCE_URL: jdbc:mariadb://database:3306/farmer
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

  production-service:
    container_name: production-service
    build: ./production
    mem_limit: 500m
    mem_reservation: 100m
    cpus: 0.8

    ports:
      - 7073:7073

    depends_on:
      eureka-service:
        condition: service_healthy
      database:
        condition: service_healthy

    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      WAIT_HOSTS=database: 6073
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECTION_TIMEOUT: 30
      SPRING_DATASOURCE_URL: jdbc:mariadb://database:3306/production
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

  transport-service:
    container_name: transport-service
    build: ./transport
    mem_limit: 500m
    mem_reservation: 100m
    cpus: 0.8

    ports:
      - 7072:7072

    depends_on:
      eureka-service:
        condition: service_healthy
      database:
        condition: service_healthy

    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      WAIT_HOSTS=database: 6073
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECTION_TIMEOUT: 30
      SPRING_DATASOURCE_URL: jdbc:mariadb://database:3306/transport
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

  gateway-authservice:
    container_name: authservice-service
    build: ./gateway-authservice
    mem_limit: 500m
    mem_reservation: 100m
    cpus: 0.8

    ports:
      - 7070:7070

    depends_on:
      eureka-service:
        condition: service_healthy
      database:
        condition: service_healthy

    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      WAIT_HOSTS=database: 6073
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECTION_TIMEOUT: 30
      SPRING_DATASOURCE_URL: jdbc:mariadb://database:3306/authservice
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

  client:
    container_name: client
    build: ./client-app
    mem_limit: 500m
    mem_reservation: 100m
    cpus: 0.8

    ports:
      - 8080:80

    depends_on:
      eureka-service:
        condition: service_healthy
      database:
        condition: service_healthy